---------- Input ----------
select * from customer inner join orders on a = b limit 1
---------- Output ---------
SELECT * FROM customer INNER JOIN orders ON a = b LIMIT 1
---------- AST ------------
Query {
    body: Select(
        SelectStmt {
            distinct: false,
            select_list: [
                QualifiedName(
                    [
                        Star,
                    ],
                ),
            ],
            from: Some(
                Join(
                    Join {
                        op: Inner,
                        condition: On(
                            BinaryOp {
                                op: Eq,
                                left: ColumnRef {
                                    database: None,
                                    table: None,
                                    column: Identifier {
                                        name: "a",
                                        quote: None,
                                    },
                                },
                                right: ColumnRef {
                                    database: None,
                                    table: None,
                                    column: Identifier {
                                        name: "b",
                                        quote: None,
                                    },
                                },
                            },
                        ),
                        left: Table {
                            catalog: None,
                            database: None,
                            table: Identifier {
                                name: "customer",
                                quote: None,
                            },
                            alias: None,
                        },
                        right: Table {
                            catalog: None,
                            database: None,
                            table: Identifier {
                                name: "orders",
                                quote: None,
                            },
                            alias: None,
                        },
                    },
                ),
            ),
            selection: None,
            group_by: [],
            having: None,
        },
    ),
    order_by: [],
    limit: [
        Literal(
            Number(
                "1",
            ),
        ),
    ],
    offset: None,
}


---------- Input ----------
select * from customer inner join orders on a = b limit 2 offset 3
---------- Output ---------
SELECT * FROM customer INNER JOIN orders ON a = b LIMIT 2 OFFSET 3
---------- AST ------------
Query {
    body: Select(
        SelectStmt {
            distinct: false,
            select_list: [
                QualifiedName(
                    [
                        Star,
                    ],
                ),
            ],
            from: Some(
                Join(
                    Join {
                        op: Inner,
                        condition: On(
                            BinaryOp {
                                op: Eq,
                                left: ColumnRef {
                                    database: None,
                                    table: None,
                                    column: Identifier {
                                        name: "a",
                                        quote: None,
                                    },
                                },
                                right: ColumnRef {
                                    database: None,
                                    table: None,
                                    column: Identifier {
                                        name: "b",
                                        quote: None,
                                    },
                                },
                            },
                        ),
                        left: Table {
                            catalog: None,
                            database: None,
                            table: Identifier {
                                name: "customer",
                                quote: None,
                            },
                            alias: None,
                        },
                        right: Table {
                            catalog: None,
                            database: None,
                            table: Identifier {
                                name: "orders",
                                quote: None,
                            },
                            alias: None,
                        },
                    },
                ),
            ),
            selection: None,
            group_by: [],
            having: None,
        },
    ),
    order_by: [],
    limit: [
        Literal(
            Number(
                "2",
            ),
        ),
    ],
    offset: Some(
        Literal(
            Number(
                "3",
            ),
        ),
    ),
}


---------- Input ----------
select * from customer natural full join orders
---------- Output ---------
SELECT * FROM customer NATURAL FULL OUTER JOIN orders
---------- AST ------------
Query {
    body: Select(
        SelectStmt {
            distinct: false,
            select_list: [
                QualifiedName(
                    [
                        Star,
                    ],
                ),
            ],
            from: Some(
                Join(
                    Join {
                        op: FullOuter,
                        condition: Natural,
                        left: Table {
                            catalog: None,
                            database: None,
                            table: Identifier {
                                name: "customer",
                                quote: None,
                            },
                            alias: None,
                        },
                        right: Table {
                            catalog: None,
                            database: None,
                            table: Identifier {
                                name: "orders",
                                quote: None,
                            },
                            alias: None,
                        },
                    },
                ),
            ),
            selection: None,
            group_by: [],
            having: None,
        },
    ),
    order_by: [],
    limit: [],
    offset: None,
}


---------- Input ----------
select * from customer natural join orders left outer join detail using (id)
---------- Output ---------
SELECT * FROM customer NATURAL INNER JOIN orders LEFT OUTER JOIN detail USING(id)
---------- AST ------------
Query {
    body: Select(
        SelectStmt {
            distinct: false,
            select_list: [
                QualifiedName(
                    [
                        Star,
                    ],
                ),
            ],
            from: Some(
                Join(
                    Join {
                        op: LeftOuter,
                        condition: Using(
                            [
                                Identifier {
                                    name: "id",
                                    quote: None,
                                },
                            ],
                        ),
                        left: Join(
                            Join {
                                op: Inner,
                                condition: Natural,
                                left: Table {
                                    catalog: None,
                                    database: None,
                                    table: Identifier {
                                        name: "customer",
                                        quote: None,
                                    },
                                    alias: None,
                                },
                                right: Table {
                                    catalog: None,
                                    database: None,
                                    table: Identifier {
                                        name: "orders",
                                        quote: None,
                                    },
                                    alias: None,
                                },
                            },
                        ),
                        right: Table {
                            catalog: None,
                            database: None,
                            table: Identifier {
                                name: "detail",
                                quote: None,
                            },
                            alias: None,
                        },
                    },
                ),
            ),
            selection: None,
            group_by: [],
            having: None,
        },
    ),
    order_by: [],
    limit: [],
    offset: None,
}


---------- Input ----------
select c_count, count(*) as custdist, sum(c_acctbal) as totacctbal
            from customer, orders ODS,
                (
                    select
                        c_custkey,
                        count(o_orderkey)
                    from
                        customer left outer join orders on
                            c_custkey = o_custkey
                            and o_comment not like '%:1%:2%'
                    group by
                        c_custkey
                ) as c_orders
            group by c_count
            order by custdist desc, c_count asc, totacctbal
            limit 10, totacctbal
---------- Output ---------
SELECT c_count, COUNT(*) AS custdist, sum(c_acctbal) AS totacctbal FROM customer CROSS JOIN orders AS ODS CROSS JOIN (SELECT c_custkey, count(o_orderkey) FROM customer LEFT OUTER JOIN orders ON c_custkey = o_custkey AND o_comment NOT LIKE '%:1%:2%' GROUP BY c_custkey) AS c_orders GROUP BY c_count ORDER BY custdist DESC, c_count ASC, totacctbal LIMIT 10, totacctbal
---------- AST ------------
Query {
    body: Select(
        SelectStmt {
            distinct: false,
            select_list: [
                AliasedExpr {
                    expr: ColumnRef {
                        database: None,
                        table: None,
                        column: Identifier {
                            name: "c_count",
                            quote: None,
                        },
                    },
                    alias: None,
                },
                AliasedExpr {
                    expr: CountAll,
                    alias: Some(
                        Identifier {
                            name: "custdist",
                            quote: None,
                        },
                    ),
                },
                AliasedExpr {
                    expr: FunctionCall {
                        distinct: false,
                        name: Identifier {
                            name: "sum",
                            quote: None,
                        },
                        args: [
                            ColumnRef {
                                database: None,
                                table: None,
                                column: Identifier {
                                    name: "c_acctbal",
                                    quote: None,
                                },
                            },
                        ],
                        params: [],
                    },
                    alias: Some(
                        Identifier {
                            name: "totacctbal",
                            quote: None,
                        },
                    ),
                },
            ],
            from: Some(
                Join(
                    Join {
                        op: CrossJoin,
                        condition: None,
                        left: Join(
                            Join {
                                op: CrossJoin,
                                condition: None,
                                left: Table {
                                    catalog: None,
                                    database: None,
                                    table: Identifier {
                                        name: "customer",
                                        quote: None,
                                    },
                                    alias: None,
                                },
                                right: Table {
                                    catalog: None,
                                    database: None,
                                    table: Identifier {
                                        name: "orders",
                                        quote: None,
                                    },
                                    alias: Some(
                                        TableAlias {
                                            name: Identifier {
                                                name: "ODS",
                                                quote: None,
                                            },
                                            columns: [],
                                        },
                                    ),
                                },
                            },
                        ),
                        right: Subquery {
                            subquery: Query {
                                body: Select(
                                    SelectStmt {
                                        distinct: false,
                                        select_list: [
                                            AliasedExpr {
                                                expr: ColumnRef {
                                                    database: None,
                                                    table: None,
                                                    column: Identifier {
                                                        name: "c_custkey",
                                                        quote: None,
                                                    },
                                                },
                                                alias: None,
                                            },
                                            AliasedExpr {
                                                expr: FunctionCall {
                                                    distinct: false,
                                                    name: Identifier {
                                                        name: "count",
                                                        quote: None,
                                                    },
                                                    args: [
                                                        ColumnRef {
                                                            database: None,
                                                            table: None,
                                                            column: Identifier {
                                                                name: "o_orderkey",
                                                                quote: None,
                                                            },
                                                        },
                                                    ],
                                                    params: [],
                                                },
                                                alias: None,
                                            },
                                        ],
                                        from: Some(
                                            Join(
                                                Join {
                                                    op: LeftOuter,
                                                    condition: On(
                                                        BinaryOp {
                                                            op: And,
                                                            left: BinaryOp {
                                                                op: Eq,
                                                                left: ColumnRef {
                                                                    database: None,
                                                                    table: None,
                                                                    column: Identifier {
                                                                        name: "c_custkey",
                                                                        quote: None,
                                                                    },
                                                                },
                                                                right: ColumnRef {
                                                                    database: None,
                                                                    table: None,
                                                                    column: Identifier {
                                                                        name: "o_custkey",
                                                                        quote: None,
                                                                    },
                                                                },
                                                            },
                                                            right: BinaryOp {
                                                                op: NotLike,
                                                                left: ColumnRef {
                                                                    database: None,
                                                                    table: None,
                                                                    column: Identifier {
                                                                        name: "o_comment",
                                                                        quote: None,
                                                                    },
                                                                },
                                                                right: Literal(
                                                                    String(
                                                                        "%:1%:2%",
                                                                    ),
                                                                ),
                                                            },
                                                        },
                                                    ),
                                                    left: Table {
                                                        catalog: None,
                                                        database: None,
                                                        table: Identifier {
                                                            name: "customer",
                                                            quote: None,
                                                        },
                                                        alias: None,
                                                    },
                                                    right: Table {
                                                        catalog: None,
                                                        database: None,
                                                        table: Identifier {
                                                            name: "orders",
                                                            quote: None,
                                                        },
                                                        alias: None,
                                                    },
                                                },
                                            ),
                                        ),
                                        selection: None,
                                        group_by: [
                                            ColumnRef {
                                                database: None,
                                                table: None,
                                                column: Identifier {
                                                    name: "c_custkey",
                                                    quote: None,
                                                },
                                            },
                                        ],
                                        having: None,
                                    },
                                ),
                                order_by: [],
                                limit: [],
                                offset: None,
                            },
                            alias: Some(
                                TableAlias {
                                    name: Identifier {
                                        name: "c_orders",
                                        quote: None,
                                    },
                                    columns: [],
                                },
                            ),
                        },
                    },
                ),
            ),
            selection: None,
            group_by: [
                ColumnRef {
                    database: None,
                    table: None,
                    column: Identifier {
                        name: "c_count",
                        quote: None,
                    },
                },
            ],
            having: None,
        },
    ),
    order_by: [
        OrderByExpr {
            expr: ColumnRef {
                database: None,
                table: None,
                column: Identifier {
                    name: "custdist",
                    quote: None,
                },
            },
            asc: Some(
                false,
            ),
            nulls_first: None,
        },
        OrderByExpr {
            expr: ColumnRef {
                database: None,
                table: None,
                column: Identifier {
                    name: "c_count",
                    quote: None,
                },
            },
            asc: Some(
                true,
            ),
            nulls_first: None,
        },
        OrderByExpr {
            expr: ColumnRef {
                database: None,
                table: None,
                column: Identifier {
                    name: "totacctbal",
                    quote: None,
                },
            },
            asc: None,
            nulls_first: None,
        },
    ],
    limit: [
        Literal(
            Number(
                "10",
            ),
        ),
        ColumnRef {
            database: None,
            table: None,
            column: Identifier {
                name: "totacctbal",
                quote: None,
            },
        },
    ],
    offset: None,
}


