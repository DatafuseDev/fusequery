ast            : upper('Abc')
raw expr       : upper("Abc")
checked expr   : upper<String>("Abc")
output type    : String
output domain  : {""..}
output         : "ABC"


ast            : upper('Dobr√Ω den')
raw expr       : upper("Dobr√Ω den")
checked expr   : upper<String>("Dobr√Ω den")
output type    : String
output domain  : {""..}
output         : "DOBR√ù DEN"


ast            : upper('√üüòÄÂ±±')
raw expr       : upper("√üüòÄÂ±±")
checked expr   : upper<String>("√üüòÄÂ±±")
output type    : String
output domain  : {""..}
output         : "SSüòÄÂ±±"


ast            : upper(NULL)
raw expr       : upper(NULL)
checked expr   : upper<NULL>(NULL)
output type    : NULL
output domain  : {NULL}
output         : NULL


ast            : ucase(a)
raw expr       : ucase(ColumnRef(0)::String)
checked expr   : upper<String>(ColumnRef(0))
evaluation:
+--------+-------------------+-------------+
|        | a                 | Output      |
+--------+-------------------+-------------+
| Type   | String            | String      |
| Domain | {"Abc"..="√üüòÄÂ±±"} | {""..}      |
| Row 0  | "Abc"             | "ABC"       |
| Row 1  | "Dobr√Ω den"       | "DOBR√ù DEN" |
| Row 2  | "√üüòÄÂ±±"           | "SSüòÄÂ±±"    |
+--------+-------------------+-------------+
evaluation (internal):
+--------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                                             |
+--------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| a      | String(StringColumn { data: [65, 98, 99, 68, 111, 98, 114, 195, 189, 32, 100, 101, 110, 195, 159, 240, 159, 152, 128, 229, 177, 177], offsets: [0, 3, 13, 22] }) |
| Output | String(StringColumn { data: [65, 66, 67, 68, 79, 66, 82, 195, 157, 32, 68, 69, 78, 83, 83, 240, 159, 152, 128, 229, 177, 177], offsets: [0, 3, 13, 22] })        |
+--------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+


ast            : lower('Abc')
raw expr       : lower("Abc")
checked expr   : lower<String>("Abc")
output type    : String
output domain  : {""..}
output         : "abc"


ast            : lower('DOBR√ù DEN')
raw expr       : lower("DOBR√ù DEN")
checked expr   : lower<String>("DOBR√ù DEN")
output type    : String
output domain  : {""..}
output         : "dobr√Ω den"


ast            : lower('ƒ∞üòÄÂ±±')
raw expr       : lower("ƒ∞üòÄÂ±±")
checked expr   : lower<String>("ƒ∞üòÄÂ±±")
output type    : String
output domain  : {""..}
output         : "i\u{307}üòÄÂ±±"


ast            : lower(NULL)
raw expr       : lower(NULL)
checked expr   : lower<NULL>(NULL)
output type    : NULL
output domain  : {NULL}
output         : NULL


ast            : lcase(a)
raw expr       : lcase(ColumnRef(0)::String)
checked expr   : lower<String>(ColumnRef(0))
evaluation:
+--------+-------------------+----------------+
|        | a                 | Output         |
+--------+-------------------+----------------+
| Type   | String            | String         |
| Domain | {"Abc"..="ƒ∞üòÄÂ±±"} | {""..}         |
| Row 0  | "Abc"             | "abc"          |
| Row 1  | "DOBR√ù DEN"       | "dobr√Ω den"    |
| Row 2  | "ƒ∞üòÄÂ±±"           | "i\u{307}üòÄÂ±±" |
+--------+-------------------+----------------+
evaluation (internal):
+--------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                                                   |
+--------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| a      | String(StringColumn { data: [65, 98, 99, 68, 79, 66, 82, 195, 157, 32, 68, 69, 78, 196, 176, 240, 159, 152, 128, 229, 177, 177], offsets: [0, 3, 13, 22] })            |
| Output | String(StringColumn { data: [97, 98, 99, 100, 111, 98, 114, 195, 189, 32, 100, 101, 110, 105, 204, 135, 240, 159, 152, 128, 229, 177, 177], offsets: [0, 3, 13, 23] }) |
+--------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+


ast            : bit_length('latin')
raw expr       : bit_length("latin")
checked expr   : bit_length<String>("latin")
output type    : UInt64
output domain  : {0..=18446744073709551615}
output         : 40


ast            : bit_length(NULL)
raw expr       : bit_length(NULL)
checked expr   : bit_length<NULL>(NULL)
output type    : NULL
output domain  : {NULL}
output         : NULL


ast            : bit_length(a)
raw expr       : bit_length(ColumnRef(0)::String)
checked expr   : bit_length<String>(ColumnRef(0))
evaluation:
+--------+-----------------------------------+----------------------------+
|        | a                                 | Output                     |
+--------+-----------------------------------+----------------------------+
| Type   | String                            | UInt64                     |
| Domain | {"latin"..="–∫–∏—Ä–∏–ª–ª–∏—Ü–∞ and latin"} | {0..=18446744073709551615} |
| Row 0  | "latin"                           | 40                         |
| Row 1  | "–∫–∏—Ä–∏–ª–ª–∏—Ü–∞"                       | 144                        |
| Row 2  | "–∫–∏—Ä–∏–ª–ª–∏—Ü–∞ and latin"             | 224                        |
+--------+-----------------------------------+----------------------------+
evaluation (internal):
+--------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                                                                                                                                                                                               |
+--------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| a      | String(StringColumn { data: [108, 97, 116, 105, 110, 208, 186, 208, 184, 209, 128, 208, 184, 208, 187, 208, 187, 208, 184, 209, 134, 208, 176, 208, 186, 208, 184, 209, 128, 208, 184, 208, 187, 208, 187, 208, 184, 209, 134, 208, 176, 32, 97, 110, 100, 32, 108, 97, 116, 105, 110], offsets: [0, 5, 23, 51] }) |
| Output | UInt64([40, 144, 224])                                                                                                                                                                                                                                                                                             |
+--------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+


ast            : octet_length('latin')
raw expr       : octet_length("latin")
checked expr   : octet_length<String>("latin")
output type    : UInt64
output domain  : {0..=18446744073709551615}
output         : 5


ast            : octet_length(NULL)
raw expr       : octet_length(NULL)
checked expr   : octet_length<NULL>(NULL)
output type    : NULL
output domain  : {NULL}
output         : NULL


ast            : length(a)
raw expr       : length(ColumnRef(0)::String)
checked expr   : octet_length<String>(ColumnRef(0))
evaluation:
+--------+-----------------------------------+----------------------------+
|        | a                                 | Output                     |
+--------+-----------------------------------+----------------------------+
| Type   | String                            | UInt64                     |
| Domain | {"latin"..="–∫–∏—Ä–∏–ª–ª–∏—Ü–∞ and latin"} | {0..=18446744073709551615} |
| Row 0  | "latin"                           | 5                          |
| Row 1  | "–∫–∏—Ä–∏–ª–ª–∏—Ü–∞"                       | 18                         |
| Row 2  | "–∫–∏—Ä–∏–ª–ª–∏—Ü–∞ and latin"             | 28                         |
+--------+-----------------------------------+----------------------------+
evaluation (internal):
+--------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                                                                                                                                                                                               |
+--------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| a      | String(StringColumn { data: [108, 97, 116, 105, 110, 208, 186, 208, 184, 209, 128, 208, 184, 208, 187, 208, 187, 208, 184, 209, 134, 208, 176, 208, 186, 208, 184, 209, 128, 208, 184, 208, 187, 208, 187, 208, 184, 209, 134, 208, 176, 32, 97, 110, 100, 32, 108, 97, 116, 105, 110], offsets: [0, 5, 23, 51] }) |
| Output | UInt64([5, 18, 28])                                                                                                                                                                                                                                                                                                |
+--------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+


ast            : char_length('latin')
raw expr       : char_length("latin")
checked expr   : char_length<String>("latin")
output type    : UInt64
output domain  : {0..=18446744073709551615}
output         : 5


ast            : char_length(NULL)
raw expr       : char_length(NULL)
checked expr   : char_length<NULL>(NULL)
output type    : NULL
output domain  : {NULL}
output         : NULL


ast            : character_length(a)
raw expr       : character_length(ColumnRef(0)::String)
checked expr   : char_length<String>(ColumnRef(0))
evaluation:
+--------+-----------------------------------+----------------------------+
|        | a                                 | Output                     |
+--------+-----------------------------------+----------------------------+
| Type   | String                            | UInt64                     |
| Domain | {"latin"..="–∫–∏—Ä–∏–ª–ª–∏—Ü–∞ and latin"} | {0..=18446744073709551615} |
| Row 0  | "latin"                           | 5                          |
| Row 1  | "–∫–∏—Ä–∏–ª–ª–∏—Ü–∞"                       | 9                          |
| Row 2  | "–∫–∏—Ä–∏–ª–ª–∏—Ü–∞ and latin"             | 19                         |
+--------+-----------------------------------+----------------------------+
evaluation (internal):
+--------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                                                                                                                                                                                               |
+--------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| a      | String(StringColumn { data: [108, 97, 116, 105, 110, 208, 186, 208, 184, 209, 128, 208, 184, 208, 187, 208, 187, 208, 184, 209, 134, 208, 176, 208, 186, 208, 184, 209, 128, 208, 184, 208, 187, 208, 187, 208, 184, 209, 134, 208, 176, 32, 97, 110, 100, 32, 108, 97, 116, 105, 110], offsets: [0, 5, 23, 51] }) |
| Output | UInt64([5, 9, 19])                                                                                                                                                                                                                                                                                                 |
+--------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+


ast            : to_base64('Abc')
raw expr       : to_base64("Abc")
checked expr   : to_base64<String>("Abc")
output type    : String
output domain  : {""..}
output         : "QWJj"


ast            : to_base64('123')
raw expr       : to_base64("123")
checked expr   : to_base64<String>("123")
output type    : String
output domain  : {""..}
output         : "MTIz"


ast            : to_base64(Null)
raw expr       : to_base64(NULL)
checked expr   : to_base64<NULL>(NULL)
output type    : NULL
output domain  : {NULL}
output         : NULL


ast            : to_base64(a)
raw expr       : to_base64(ColumnRef(0)::String)
checked expr   : to_base64<String>(ColumnRef(0))
evaluation:
+--------+-----------------+--------+
|        | a               | Output |
+--------+-----------------+--------+
| Type   | String          | String |
| Domain | {"123"..="Abc"} | {""..} |
| Row 0  | "Abc"           | "QWJj" |
| Row 1  | "123"           | "MTIz" |
+--------+-----------------+--------+
evaluation (internal):
+--------+---------------------------------------------------------------------------------------+
| Column | Data                                                                                  |
+--------+---------------------------------------------------------------------------------------+
| a      | String(StringColumn { data: [65, 98, 99, 49, 50, 51], offsets: [0, 3, 6] })           |
| Output | String(StringColumn { data: [81, 87, 74, 106, 77, 84, 73, 122], offsets: [0, 4, 8] }) |
+--------+---------------------------------------------------------------------------------------+


ast            : from_base64('QWJj')
raw expr       : from_base64("QWJj")
checked expr   : from_base64<String>("QWJj")
output type    : String
output domain  : {""..}
output         : "Abc"


ast            : from_base64('MTIz')
raw expr       : from_base64("MTIz")
checked expr   : from_base64<String>("MTIz")
output type    : String
output domain  : {""..}
output         : "123"


ast            : from_base64(Null)
raw expr       : from_base64(NULL)
checked expr   : from_base64<NULL>(NULL)
output type    : NULL
output domain  : {NULL}
output         : NULL


ast            : from_base64(a)
raw expr       : from_base64(ColumnRef(0)::String)
checked expr   : from_base64<String>(ColumnRef(0))
evaluation:
+--------+-------------------+--------+
|        | a                 | Output |
+--------+-------------------+--------+
| Type   | String            | String |
| Domain | {"MTIz"..="QWJj"} | {""..} |
| Row 0  | "QWJj"            | "Abc"  |
| Row 1  | "MTIz"            | "123"  |
+--------+-------------------+--------+
evaluation (internal):
+--------+---------------------------------------------------------------------------------------+
| Column | Data                                                                                  |
+--------+---------------------------------------------------------------------------------------+
| a      | String(StringColumn { data: [81, 87, 74, 106, 77, 84, 73, 122], offsets: [0, 4, 8] }) |
| Output | String(StringColumn { data: [65, 98, 99, 49, 50, 51], offsets: [0, 3, 6] })           |
+--------+---------------------------------------------------------------------------------------+


ast            : quote('a\0b')
raw expr       : quote("a\0b")
checked expr   : quote<String>("a\0b")
output type    : String
output domain  : {""..}
output         : "a\\0b"


ast            : quote('a\'b')
raw expr       : quote("a'b")
checked expr   : quote<String>("a'b")
output type    : String
output domain  : {""..}
output         : "a\\'b"


ast            : quote('a\"b')
raw expr       : quote("a\"b")
checked expr   : quote<String>("a\"b")
output type    : String
output domain  : {""..}
output         : "a\\\"b"


ast            : quote('a\bb')
raw expr       : quote("a\u{8}b")
checked expr   : quote<String>("a\u{8}b")
output type    : String
output domain  : {""..}
output         : "a\\bb"


ast            : quote('a\nb')
raw expr       : quote("a\nb")
checked expr   : quote<String>("a\nb")
output type    : String
output domain  : {""..}
output         : "a\\nb"


ast            : quote('a\rb')
raw expr       : quote("a\rb")
checked expr   : quote<String>("a\rb")
output type    : String
output domain  : {""..}
output         : "a\\rb"


ast            : quote('a\tb')
raw expr       : quote("a\tb")
checked expr   : quote<String>("a\tb")
output type    : String
output domain  : {""..}
output         : "a\\tb"


ast            : quote('a\\b')
raw expr       : quote("a\\b")
checked expr   : quote<String>("a\\b")
output type    : String
output domain  : {""..}
output         : "a\\\\b"


ast            : quote('‰Ω†Â•Ω')
raw expr       : quote("‰Ω†Â•Ω")
checked expr   : quote<String>("‰Ω†Â•Ω")
output type    : String
output domain  : {""..}
output         : "‰Ω†Â•Ω"


ast            : quote('√üüòÄÂ±±')
raw expr       : quote("√üüòÄÂ±±")
checked expr   : quote<String>("√üüòÄÂ±±")
output type    : String
output domain  : {""..}
output         : "√üüòÄÂ±±"


ast            : quote('Dobr√Ω den')
raw expr       : quote("Dobr√Ω den")
checked expr   : quote<String>("Dobr√Ω den")
output type    : String
output domain  : {""..}
output         : "Dobr√Ω den"


ast            : quote(Null)
raw expr       : quote(NULL)
checked expr   : quote<NULL>(NULL)
output type    : NULL
output domain  : {NULL}
output         : NULL


ast            : quote(a)
raw expr       : quote(ColumnRef(0)::String)
checked expr   : quote<String>(ColumnRef(0))
evaluation:
+--------+---------------------+-------------+
|        | a                   | Output      |
+--------+---------------------+-------------+
| Type   | String              | String      |
| Domain | {"a\\'b"..="a\\nb"} | {""..}      |
| Row 0  | "a\\0b"             | "a\\\\0b"   |
| Row 1  | "a\\'b"             | "a\\\\\\'b" |
| Row 2  | "a\\nb"             | "a\\\\nb"   |
+--------+---------------------+-------------+
evaluation (internal):
+--------+---------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                      |
+--------+---------------------------------------------------------------------------------------------------------------------------+
| a      | String(StringColumn { data: [97, 92, 48, 98, 97, 92, 39, 98, 97, 92, 110, 98], offsets: [0, 4, 8, 12] })                  |
| Output | String(StringColumn { data: [97, 92, 92, 48, 98, 97, 92, 92, 92, 39, 98, 97, 92, 92, 110, 98], offsets: [0, 5, 11, 16] }) |
+--------+---------------------------------------------------------------------------------------------------------------------------+


ast            : reverse('abc')
raw expr       : reverse("abc")
checked expr   : reverse<String>("abc")
output type    : String
output domain  : {""..}
output         : "cba"


ast            : reverse('a')
raw expr       : reverse("a")
checked expr   : reverse<String>("a")
output type    : String
output domain  : {""..}
output         : "a"


ast            : reverse('')
raw expr       : reverse("")
checked expr   : reverse<String>("")
output type    : String
output domain  : {""..}
output         : ""


ast            : reverse('‰Ω†Â•Ω')
raw expr       : reverse("‰Ω†Â•Ω")
checked expr   : reverse<String>("‰Ω†Â•Ω")
output type    : String
output domain  : {""..}
output         : "ÔøΩÔøΩÂ†ΩÔøΩ"


ast            : reverse('√üüòÄÂ±±')
raw expr       : reverse("√üüòÄÂ±±")
checked expr   : reverse<String>("√üüòÄÂ±±")
output type    : String
output domain  : {""..}
output         : "ÔøΩÔøΩÂÄòÔøΩÔøΩÔøΩ"


ast            : reverse('Dobr√Ω den')
raw expr       : reverse("Dobr√Ω den")
checked expr   : reverse<String>("Dobr√Ω den")
output type    : String
output domain  : {""..}
output         : "ned ÔøΩÔøΩrboD"


ast            : reverse(Null)
raw expr       : reverse(NULL)
checked expr   : reverse<NULL>(NULL)
output type    : NULL
output domain  : {NULL}
output         : NULL


ast            : reverse(a)
raw expr       : reverse(ColumnRef(0)::String)
checked expr   : reverse<String>(ColumnRef(0))
evaluation:
+--------+--------------+--------+
|        | a            | Output |
+--------+--------------+--------+
| Type   | String       | String |
| Domain | {""..="abc"} | {""..} |
| Row 0  | "abc"        | "cba"  |
| Row 1  | "a"          | "a"    |
| Row 2  | ""           | ""     |
+--------+--------------+--------+
evaluation (internal):
+--------+------------------------------------------------------------------------+
| Column | Data                                                                   |
+--------+------------------------------------------------------------------------+
| a      | String(StringColumn { data: [97, 98, 99, 97], offsets: [0, 3, 4, 4] }) |
| Output | String(StringColumn { data: [99, 98, 97, 97], offsets: [0, 3, 4, 4] }) |
+--------+------------------------------------------------------------------------+


ast            : ascii('1')
raw expr       : ascii("1")
checked expr   : ascii<String>("1")
output type    : UInt8
output domain  : {49..=49}
output         : 49


ast            : ascii('123')
raw expr       : ascii("123")
checked expr   : ascii<String>("123")
output type    : UInt8
output domain  : {49..=49}
output         : 49


ast            : ascii('-1')
raw expr       : ascii("-1")
checked expr   : ascii<String>("-1")
output type    : UInt8
output domain  : {45..=45}
output         : 45


ast            : ascii('')
raw expr       : ascii("")
checked expr   : ascii<String>("")
output type    : UInt8
output domain  : {0..=0}
output         : 0


ast            : ascii('‰Ω†Â•Ω')
raw expr       : ascii("‰Ω†Â•Ω")
checked expr   : ascii<String>("‰Ω†Â•Ω")
output type    : UInt8
output domain  : {228..=228}
output         : 228


ast            : ascii('üòÄ123')
raw expr       : ascii("üòÄ123")
checked expr   : ascii<String>("üòÄ123")
output type    : UInt8
output domain  : {240..=240}
output         : 240


ast            : ascii(Null)
raw expr       : ascii(NULL)
checked expr   : ascii<NULL>(NULL)
output type    : NULL
output domain  : {NULL}
output         : NULL


ast            : ascii(a)
raw expr       : ascii(ColumnRef(0)::String)
checked expr   : ascii<String>(ColumnRef(0))
evaluation:
+--------+-----------------+------------+
|        | a               | Output     |
+--------+-----------------+------------+
| Type   | String          | UInt8      |
| Domain | {"-1"..="‰Ω†Â•Ω"} | {45..=228} |
| Row 0  | "1"             | 49         |
| Row 1  | "123"           | 49         |
| Row 2  | "-1"            | 45         |
| Row 3  | "‰Ω†Â•Ω"          | 228        |
+--------+-----------------+------------+
evaluation (internal):
+--------+------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                             |
+--------+------------------------------------------------------------------------------------------------------------------+
| a      | String(StringColumn { data: [49, 49, 50, 51, 45, 49, 228, 189, 160, 229, 165, 189], offsets: [0, 1, 4, 6, 12] }) |
| Output | UInt8([49, 49, 45, 228])                                                                                         |
+--------+------------------------------------------------------------------------------------------------------------------+


ast            : ascii(b)
raw expr       : ascii(ColumnRef(0)::String)
checked expr   : ascii<String>(ColumnRef(0))
evaluation:
+--------+-----------+---------+
|        | b         | Output  |
+--------+-----------+---------+
| Type   | String    | UInt8   |
| Domain | {""..=""} | {0..=0} |
| Row 0  | ""        | 0       |
+--------+-----------+---------+
evaluation (internal):
+--------+----------------------------------------------------+
| Column | Data                                               |
+--------+----------------------------------------------------+
| b      | String(StringColumn { data: [], offsets: [0, 0] }) |
| Output | UInt8([0])                                         |
+--------+----------------------------------------------------+


