---------- Input ----------
CREATE TABLE t1 (a INT, b INT, c INT);
INSERT INTO t1 VALUES (1, 2, 3);
DROP TABLE t1;
---------- Output ---------
QUERY CREATE TABLE t1 (a Int32, b Int32, c Int32), __unused_result0(0)
QUERY INSERT INTO t1 VALUES (1, 2, 3), __unused_result1(1)
QUERY DROP TABLE t1, __unused_result2(2)


---------- Input ----------
LET x := 1;
LET y := x + 1;
LET z RESULTSET := SELECT :y + 1;
---------- Output ---------
QUERY SELECT 1, __expr_result1(1)
ITER __expr_result1(1), __expr_result_iter2(2)
READ __expr_result_iter2(2), $0, x(0)
QUERY SELECT :0 + 1, __expr_result4(4)
ITER __expr_result4(4), __expr_result_iter5(5)
READ __expr_result_iter5(5), $0, y(3)
QUERY SELECT :3 + 1, z(6)


---------- Input ----------
RETURN;
---------- Output ---------
RETURN


---------- Input ----------
LET x := 1;
IF x < 0 THEN
    RETURN 'LESS THAN 0';
ELSEIF x = 0 THEN
    RETURN 'EQUAL TO 0';
ELSE
    RETURN 'GREATER THAN 0';
END IF;
---------- Output ---------
QUERY SELECT 1, __expr_result1(1)
ITER __expr_result1(1), __expr_result_iter2(2)
READ __expr_result_iter2(2), $0, x(0)
QUERY SELECT is_true(:0 < 0), __expr_result7(7)
ITER __expr_result7(7), __expr_result_iter8(8)
READ __expr_result_iter8(8), $0, __condition6(6)
JUMP_IF_TRUE __condition6(6), __IF_THEN3(3)
QUERY SELECT is_true(:0 = 0), __expr_result10(10)
ITER __expr_result10(10), __expr_result_iter11(11)
READ __expr_result_iter11(11), $0, __condition9(9)
JUMP_IF_TRUE __condition9(9), __IF_THEN4(4)
QUERY SELECT 'GREATER THAN 0', __expr_result13(13)
ITER __expr_result13(13), __expr_result_iter14(14)
READ __expr_result_iter14(14), $0, __return_val12(12)
RETURN __return_val12(12)
GOTO __IF_END5(5)
__IF_THEN3(3):
QUERY SELECT 'LESS THAN 0', __expr_result16(16)
ITER __expr_result16(16), __expr_result_iter17(17)
READ __expr_result_iter17(17), $0, __return_val15(15)
RETURN __return_val15(15)
GOTO __IF_END5(5)
__IF_THEN4(4):
QUERY SELECT 'EQUAL TO 0', __expr_result19(19)
ITER __expr_result19(19), __expr_result_iter20(20)
READ __expr_result_iter20(20), $0, __return_val18(18)
RETURN __return_val18(18)
GOTO __IF_END5(5)
__IF_END5(5):


---------- Input ----------
LET x := 1;
LET sum := 0;
FOR x IN x TO x + 10 DO
    sum := sum + x;
END FOR;
---------- Output ---------
QUERY SELECT 1, __expr_result1(1)
ITER __expr_result1(1), __expr_result_iter2(2)
READ __expr_result_iter2(2), $0, x(0)
QUERY SELECT 0, __expr_result4(4)
ITER __expr_result4(4), __expr_result_iter5(5)
READ __expr_result_iter5(5), $0, sum(3)
QUERY SELECT * FROM generate_series(x, x + 10, 1), __for_index_set8(8)
ITER __for_index_set8(8), __for_index_iter9(9)
__LOOP6(6):
JUMP_IF_ENDED __for_index_iter9(9), __LOOP_END7(7)
READ __for_index_iter9(9), $0, x(10)
QUERY SELECT :3 + :10, __expr_result11(11)
ITER __expr_result11(11), __expr_result_iter12(12)
READ __expr_result_iter12(12), $0, sum(3)
NEXT __for_index_iter9(9)
GOTO __LOOP6(6)
__LOOP_END7(7):


---------- Input ----------
FOR x IN REVERSE -100 TO 100 DO
    CONTINUE;
END FOR;
---------- Output ---------
QUERY SELECT * FROM generate_series(100, - 100, -1), __for_index_set2(2)
ITER __for_index_set2(2), __for_index_iter3(3)
__LOOP0(0):
JUMP_IF_ENDED __for_index_iter3(3), __LOOP_END1(1)
READ __for_index_iter3(3), $0, x(4)
GOTO __LOOP0(0)
NEXT __for_index_iter3(3)
GOTO __LOOP0(0)
__LOOP_END1(1):


---------- Input ----------
LET x RESULTSET := SELECT * FROM numbers(10);
FOR row IN x DO
    LET y := row.number;
END FOR;
---------- Output ---------
QUERY SELECT * FROM numbers(10), x(0)
ITER x(0), row(3)
__LOOP1(1):
JUMP_IF_ENDED row(3), __LOOP_END2(2)
READ row(3), "number", __row.number5(5)
QUERY SELECT :__row.number5(5), __expr_result6(6)
ITER __expr_result6(6), __expr_result_iter7(7)
READ __expr_result_iter7(7), $0, y(4)
NEXT row(3)
GOTO __LOOP1(1)
__LOOP_END2(2):


---------- Input ----------
LET x := 1;
WHILE x < 5 DO
    x := x + 1;
END WHILE;
RETURN x;
---------- Output ---------
QUERY SELECT 1, __expr_result1(1)
ITER __expr_result1(1), __expr_result_iter2(2)
READ __expr_result_iter2(2), $0, x(0)
__LOOP3(3):
QUERY SELECT NOT is_true(:0 < 5), __expr_result6(6)
ITER __expr_result6(6), __expr_result_iter7(7)
READ __expr_result_iter7(7), $0, __break_condition5(5)
JUMP_IF_TRUE __break_condition5(5), __LOOP_END4(4)
QUERY SELECT :0 + 1, __expr_result8(8)
ITER __expr_result8(8), __expr_result_iter9(9)
READ __expr_result_iter9(9), $0, x(0)
GOTO __LOOP3(3)
__LOOP_END4(4):
QUERY SELECT :0, __expr_result11(11)
ITER __expr_result11(11), __expr_result_iter12(12)
READ __expr_result_iter12(12), $0, __return_val10(10)
RETURN __return_val10(10)


---------- Input ----------
LET x := 1;
REPEAT
    x := x + 1;
UNTIL x = 5
END REPEAT;
---------- Output ---------
QUERY SELECT 1, __expr_result1(1)
ITER __expr_result1(1), __expr_result_iter2(2)
READ __expr_result_iter2(2), $0, x(0)
__LOOP3(3):
QUERY SELECT :0 + 1, __expr_result5(5)
ITER __expr_result5(5), __expr_result_iter6(6)
READ __expr_result_iter6(6), $0, x(0)
QUERY SELECT is_true(:0 = 5), __expr_result8(8)
ITER __expr_result8(8), __expr_result_iter9(9)
READ __expr_result_iter9(9), $0, __break_condition7(7)
JUMP_IF_TRUE __break_condition7(7), __LOOP_END4(4)
GOTO __LOOP3(3)
__LOOP_END4(4):


---------- Input ----------
LOOP
    LOOP
        IF rand() < 0.5 THEN BREAK;
        ELSE CONTINUE loop_label;
        END IF;
    END LOOP;
END LOOP loop_label;
---------- Output ---------
loop_label_LOOP(0):
__LOOP2(2):
QUERY SELECT is_true(rand() < 0.5), __expr_result7(7)
ITER __expr_result7(7), __expr_result_iter8(8)
READ __expr_result_iter8(8), $0, __condition6(6)
JUMP_IF_TRUE __condition6(6), __IF_THEN4(4)
GOTO loop_label_LOOP(0)
GOTO __IF_END5(5)
__IF_THEN4(4):
GOTO __LOOP_END3(3)
GOTO __IF_END5(5)
__IF_END5(5):
GOTO __LOOP2(2)
__LOOP_END3(3):
GOTO loop_label_LOOP(0)
loop_label_LOOP_END(1):


