<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="966" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="949.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="949.00"> </text><svg id="frames" x="10" width="1180" total_samples="49364"><g><title>Security`SecTrustEvaluateInternal (6 samples, 0.01%)</title><rect x="0.0162%" y="629" width="0.0122%" height="15" fill="rgb(227,0,7)" fg:x="8" fg:w="6"/><text x="0.2662%" y="639.50"></text></g><g><title>Security`SecTrustEvaluateIfNecessary (6 samples, 0.01%)</title><rect x="0.0162%" y="613" width="0.0122%" height="15" fill="rgb(217,0,24)" fg:x="8" fg:w="6"/><text x="0.2662%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (6 samples, 0.01%)</title><rect x="0.0162%" y="597" width="0.0122%" height="15" fill="rgb(221,193,54)" fg:x="8" fg:w="6"/><text x="0.2662%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (6 samples, 0.01%)</title><rect x="0.0162%" y="581" width="0.0122%" height="15" fill="rgb(248,212,6)" fg:x="8" fg:w="6"/><text x="0.2662%" y="591.50"></text></g><g><title>Security`__SecTrustEvaluateIfNecessary_block_invoke (6 samples, 0.01%)</title><rect x="0.0162%" y="565" width="0.0122%" height="15" fill="rgb(208,68,35)" fg:x="8" fg:w="6"/><text x="0.2662%" y="575.50"></text></g><g><title>libsystem_trace.dylib`_os_activity_initiate_impl (5 samples, 0.01%)</title><rect x="0.0182%" y="549" width="0.0101%" height="15" fill="rgb(232,128,0)" fg:x="9" fg:w="5"/><text x="0.2682%" y="559.50"></text></g><g><title>Security`__SecTrustEvaluateIfNecessary_block_invoke_2 (5 samples, 0.01%)</title><rect x="0.0182%" y="533" width="0.0101%" height="15" fill="rgb(207,160,47)" fg:x="9" fg:w="5"/><text x="0.2682%" y="543.50"></text></g><g><title>Security`SecOSStatusWith (5 samples, 0.01%)</title><rect x="0.0182%" y="517" width="0.0101%" height="15" fill="rgb(228,23,34)" fg:x="9" fg:w="5"/><text x="0.2682%" y="527.50"></text></g><g><title>Security`__SecTrustEvaluateIfNecessary_block_invoke_3 (5 samples, 0.01%)</title><rect x="0.0182%" y="501" width="0.0101%" height="15" fill="rgb(218,30,26)" fg:x="9" fg:w="5"/><text x="0.2682%" y="511.50"></text></g><g><title>Security`securityd_send_sync_and_do (5 samples, 0.01%)</title><rect x="0.0182%" y="485" width="0.0101%" height="15" fill="rgb(220,122,19)" fg:x="9" fg:w="5"/><text x="0.2682%" y="495.50"></text></g><g><title>databend-query`security_framework::trust_settings::TrustSettings::iter (21 samples, 0.04%)</title><rect x="0.0142%" y="661" width="0.0425%" height="15" fill="rgb(250,228,42)" fg:x="7" fg:w="21"/><text x="0.2642%" y="671.50"></text></g><g><title>Security`SecTrustSettingsCopyCertificates (21 samples, 0.04%)</title><rect x="0.0142%" y="645" width="0.0425%" height="15" fill="rgb(240,193,28)" fg:x="7" fg:w="21"/><text x="0.2642%" y="655.50"></text></g><g><title>Security`Security::KeychainCore::TrustSettings::findQualifiedCerts(std::__1::vector&lt;Security::KeychainCore::Keychain, std::__1::allocator (9 samples, 0.02%)</title><rect x="0.0385%" y="629" width="0.0182%" height="15" fill="rgb(216,20,37)" fg:x="19" fg:w="9"/><text x="0.2885%" y="639.50"></text></g><g><title>Security`Security::KeychainCore::KCCursorImpl::next (7 samples, 0.01%)</title><rect x="0.0425%" y="613" width="0.0142%" height="15" fill="rgb(206,188,39)" fg:x="21" fg:w="7"/><text x="0.2925%" y="623.50"></text></g><g><title>CoreFoundation`CFStringCreateMutableCopy (5 samples, 0.01%)</title><rect x="0.0891%" y="453" width="0.0101%" height="15" fill="rgb(217,207,13)" fg:x="44" fg:w="5"/><text x="0.3391%" y="463.50"></text></g><g><title>CoreFoundation`parseStringTag (7 samples, 0.01%)</title><rect x="0.0871%" y="469" width="0.0142%" height="15" fill="rgb(231,73,38)" fg:x="43" fg:w="7"/><text x="0.3371%" y="479.50"></text></g><g><title>CoreFoundation`parseStringTag (9 samples, 0.02%)</title><rect x="0.1540%" y="453" width="0.0182%" height="15" fill="rgb(225,20,46)" fg:x="76" fg:w="9"/><text x="0.4040%" y="463.50"></text></g><g><title>CoreFoundation`parseXMLElement (39 samples, 0.08%)</title><rect x="0.1013%" y="469" width="0.0790%" height="15" fill="rgb(210,31,41)" fg:x="50" fg:w="39"/><text x="0.3513%" y="479.50"></text></g><g><title>CoreFoundation`parseXMLElement (54 samples, 0.11%)</title><rect x="0.0729%" y="485" width="0.1094%" height="15" fill="rgb(221,200,47)" fg:x="36" fg:w="54"/><text x="0.3229%" y="495.50"></text></g><g><title>Security`Security::KeychainCore::TrustSettings::initFromData (63 samples, 0.13%)</title><rect x="0.0567%" y="597" width="0.1276%" height="15" fill="rgb(226,26,5)" fg:x="28" fg:w="63"/><text x="0.3067%" y="607.50"></text></g><g><title>CoreFoundation`CFPropertyListCreateFromXMLData (63 samples, 0.13%)</title><rect x="0.0567%" y="581" width="0.1276%" height="15" fill="rgb(249,33,26)" fg:x="28" fg:w="63"/><text x="0.3067%" y="591.50"></text></g><g><title>CoreFoundation`_CFPropertyListCreateWithData (63 samples, 0.13%)</title><rect x="0.0567%" y="565" width="0.1276%" height="15" fill="rgb(235,183,28)" fg:x="28" fg:w="63"/><text x="0.3067%" y="575.50"></text></g><g><title>CoreFoundation`_CFPropertyListCreateFromUTF8Data (63 samples, 0.13%)</title><rect x="0.0567%" y="549" width="0.1276%" height="15" fill="rgb(221,5,38)" fg:x="28" fg:w="63"/><text x="0.3067%" y="559.50"></text></g><g><title>CoreFoundation`parseXMLElement (63 samples, 0.13%)</title><rect x="0.0567%" y="533" width="0.1276%" height="15" fill="rgb(247,18,42)" fg:x="28" fg:w="63"/><text x="0.3067%" y="543.50"></text></g><g><title>CoreFoundation`parseXMLElement (63 samples, 0.13%)</title><rect x="0.0567%" y="517" width="0.1276%" height="15" fill="rgb(241,131,45)" fg:x="28" fg:w="63"/><text x="0.3067%" y="527.50"></text></g><g><title>CoreFoundation`parseXMLElement (63 samples, 0.13%)</title><rect x="0.0567%" y="501" width="0.1276%" height="15" fill="rgb(249,31,29)" fg:x="28" fg:w="63"/><text x="0.3067%" y="511.50"></text></g><g><title>Security`Security::KeychainCore::TrustSettings::CreateTrustSettings (73 samples, 0.15%)</title><rect x="0.0567%" y="613" width="0.1479%" height="15" fill="rgb(225,111,53)" fg:x="28" fg:w="73"/><text x="0.3067%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__open (5 samples, 0.01%)</title><rect x="0.1945%" y="597" width="0.0101%" height="15" fill="rgb(238,160,17)" fg:x="96" fg:w="5"/><text x="0.4445%" y="607.50"></text></g><g><title>CoreFoundation`cow_cleanup (6 samples, 0.01%)</title><rect x="0.2066%" y="549" width="0.0122%" height="15" fill="rgb(214,148,48)" fg:x="102" fg:w="6"/><text x="0.4566%" y="559.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM dealloc] (7 samples, 0.01%)</title><rect x="0.2066%" y="565" width="0.0142%" height="15" fill="rgb(232,36,49)" fg:x="102" fg:w="7"/><text x="0.4566%" y="575.50"></text></g><g><title>Security`Security::KeychainCore::TrustSettings::~TrustSettings (10 samples, 0.02%)</title><rect x="0.2046%" y="613" width="0.0203%" height="15" fill="rgb(209,103,24)" fg:x="101" fg:w="10"/><text x="0.4546%" y="623.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM dealloc] (10 samples, 0.02%)</title><rect x="0.2046%" y="597" width="0.0203%" height="15" fill="rgb(229,88,8)" fg:x="101" fg:w="10"/><text x="0.4546%" y="607.50"></text></g><g><title>CoreFoundation`cow_cleanup (10 samples, 0.02%)</title><rect x="0.2046%" y="581" width="0.0203%" height="15" fill="rgb(213,181,19)" fg:x="101" fg:w="10"/><text x="0.4546%" y="591.50"></text></g><g><title>databend-query`reqwest::async_impl::client::ClientBuilder::build (106 samples, 0.21%)</title><rect x="0.0122%" y="693" width="0.2147%" height="15" fill="rgb(254,191,54)" fg:x="6" fg:w="106"/><text x="0.2622%" y="703.50"></text></g><g><title>databend-query`rustls_native_certs::load_native_certs (106 samples, 0.21%)</title><rect x="0.0122%" y="677" width="0.2147%" height="15" fill="rgb(241,83,37)" fg:x="6" fg:w="106"/><text x="0.2622%" y="687.50"></text></g><g><title>databend-query`security_framework::trust_settings::TrustSettings::tls_trust_settings_for_certificate (84 samples, 0.17%)</title><rect x="0.0567%" y="661" width="0.1702%" height="15" fill="rgb(233,36,39)" fg:x="28" fg:w="84"/><text x="0.3067%" y="671.50"></text></g><g><title>Security`SecTrustSettingsCopyTrustSettings (84 samples, 0.17%)</title><rect x="0.0567%" y="645" width="0.1702%" height="15" fill="rgb(226,3,54)" fg:x="28" fg:w="84"/><text x="0.3067%" y="655.50"></text></g><g><title>Security`tsCopyTrustSettings(__SecCertificate*, SecTrustSettingsDomain, __CFArray const**, __CFDate const**) (84 samples, 0.17%)</title><rect x="0.0567%" y="629" width="0.1702%" height="15" fill="rgb(245,192,40)" fg:x="28" fg:w="84"/><text x="0.3067%" y="639.50"></text></g><g><title>Security`SecTrustEvaluateInternal (5 samples, 0.01%)</title><rect x="0.2309%" y="565" width="0.0101%" height="15" fill="rgb(238,167,29)" fg:x="114" fg:w="5"/><text x="0.4809%" y="575.50"></text></g><g><title>Security`SecTrustEvaluateIfNecessary (5 samples, 0.01%)</title><rect x="0.2309%" y="549" width="0.0101%" height="15" fill="rgb(232,182,51)" fg:x="114" fg:w="5"/><text x="0.4809%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (5 samples, 0.01%)</title><rect x="0.2309%" y="533" width="0.0101%" height="15" fill="rgb(231,60,39)" fg:x="114" fg:w="5"/><text x="0.4809%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (5 samples, 0.01%)</title><rect x="0.2309%" y="517" width="0.0101%" height="15" fill="rgb(208,69,12)" fg:x="114" fg:w="5"/><text x="0.4809%" y="527.50"></text></g><g><title>Security`__SecTrustEvaluateIfNecessary_block_invoke (5 samples, 0.01%)</title><rect x="0.2309%" y="501" width="0.0101%" height="15" fill="rgb(235,93,37)" fg:x="114" fg:w="5"/><text x="0.4809%" y="511.50"></text></g><g><title>libsystem_trace.dylib`_os_activity_initiate_impl (5 samples, 0.01%)</title><rect x="0.2309%" y="485" width="0.0101%" height="15" fill="rgb(213,116,39)" fg:x="114" fg:w="5"/><text x="0.4809%" y="495.50"></text></g><g><title>Security`__SecTrustEvaluateIfNecessary_block_invoke_2 (5 samples, 0.01%)</title><rect x="0.2309%" y="469" width="0.0101%" height="15" fill="rgb(222,207,29)" fg:x="114" fg:w="5"/><text x="0.4809%" y="479.50"></text></g><g><title>Security`SecOSStatusWith (5 samples, 0.01%)</title><rect x="0.2309%" y="453" width="0.0101%" height="15" fill="rgb(206,96,30)" fg:x="114" fg:w="5"/><text x="0.4809%" y="463.50"></text></g><g><title>Security`__SecTrustEvaluateIfNecessary_block_invoke_3 (5 samples, 0.01%)</title><rect x="0.2309%" y="437" width="0.0101%" height="15" fill="rgb(218,138,4)" fg:x="114" fg:w="5"/><text x="0.4809%" y="447.50"></text></g><g><title>Security`securityd_send_sync_and_do (5 samples, 0.01%)</title><rect x="0.2309%" y="421" width="0.0101%" height="15" fill="rgb(250,191,14)" fg:x="114" fg:w="5"/><text x="0.4809%" y="431.50"></text></g><g><title>databend-query`security_framework::trust_settings::TrustSettings::iter (13 samples, 0.03%)</title><rect x="0.2289%" y="597" width="0.0263%" height="15" fill="rgb(239,60,40)" fg:x="113" fg:w="13"/><text x="0.4789%" y="607.50"></text></g><g><title>Security`SecTrustSettingsCopyCertificates (13 samples, 0.03%)</title><rect x="0.2289%" y="581" width="0.0263%" height="15" fill="rgb(206,27,48)" fg:x="113" fg:w="13"/><text x="0.4789%" y="591.50"></text></g><g><title>Security`Security::KeychainCore::TrustSettings::findQualifiedCerts(std::__1::vector&lt;Security::KeychainCore::Keychain, std::__1::allocator (6 samples, 0.01%)</title><rect x="0.2431%" y="565" width="0.0122%" height="15" fill="rgb(225,35,8)" fg:x="120" fg:w="6"/><text x="0.4931%" y="575.50"></text></g><g><title>CoreFoundation`__CFDataInit (7 samples, 0.01%)</title><rect x="0.3363%" y="389" width="0.0142%" height="15" fill="rgb(250,213,24)" fg:x="166" fg:w="7"/><text x="0.5863%" y="399.50"></text></g><g><title>CoreFoundation`CFStringCreateMutableCopy (5 samples, 0.01%)</title><rect x="0.3586%" y="373" width="0.0101%" height="15" fill="rgb(247,123,22)" fg:x="177" fg:w="5"/><text x="0.6086%" y="383.50"></text></g><g><title>CoreFoundation`parseStringTag (13 samples, 0.03%)</title><rect x="0.3545%" y="389" width="0.0263%" height="15" fill="rgb(231,138,38)" fg:x="175" fg:w="13"/><text x="0.6045%" y="399.50"></text></g><g><title>CoreFoundation`parseXMLElement (51 samples, 0.10%)</title><rect x="0.2877%" y="405" width="0.1033%" height="15" fill="rgb(231,145,46)" fg:x="142" fg:w="51"/><text x="0.5377%" y="415.50"></text></g><g><title>Security`Security::KeychainCore::TrustSettings::initFromData (66 samples, 0.13%)</title><rect x="0.2593%" y="533" width="0.1337%" height="15" fill="rgb(251,118,11)" fg:x="128" fg:w="66"/><text x="0.5093%" y="543.50"></text></g><g><title>CoreFoundation`CFPropertyListCreateFromXMLData (66 samples, 0.13%)</title><rect x="0.2593%" y="517" width="0.1337%" height="15" fill="rgb(217,147,25)" fg:x="128" fg:w="66"/><text x="0.5093%" y="527.50"></text></g><g><title>CoreFoundation`_CFPropertyListCreateWithData (66 samples, 0.13%)</title><rect x="0.2593%" y="501" width="0.1337%" height="15" fill="rgb(247,81,37)" fg:x="128" fg:w="66"/><text x="0.5093%" y="511.50"></text></g><g><title>CoreFoundation`_CFPropertyListCreateFromUTF8Data (66 samples, 0.13%)</title><rect x="0.2593%" y="485" width="0.1337%" height="15" fill="rgb(209,12,38)" fg:x="128" fg:w="66"/><text x="0.5093%" y="495.50"></text></g><g><title>CoreFoundation`parseXMLElement (66 samples, 0.13%)</title><rect x="0.2593%" y="469" width="0.1337%" height="15" fill="rgb(227,1,9)" fg:x="128" fg:w="66"/><text x="0.5093%" y="479.50"></text></g><g><title>CoreFoundation`parseXMLElement (66 samples, 0.13%)</title><rect x="0.2593%" y="453" width="0.1337%" height="15" fill="rgb(248,47,43)" fg:x="128" fg:w="66"/><text x="0.5093%" y="463.50"></text></g><g><title>CoreFoundation`parseXMLElement (66 samples, 0.13%)</title><rect x="0.2593%" y="437" width="0.1337%" height="15" fill="rgb(221,10,30)" fg:x="128" fg:w="66"/><text x="0.5093%" y="447.50"></text></g><g><title>CoreFoundation`parseXMLElement (65 samples, 0.13%)</title><rect x="0.2613%" y="421" width="0.1317%" height="15" fill="rgb(210,229,1)" fg:x="129" fg:w="65"/><text x="0.5113%" y="431.50"></text></g><g><title>Security`Security::KeychainCore::TrustSettings::CreateTrustSettings (71 samples, 0.14%)</title><rect x="0.2552%" y="549" width="0.1438%" height="15" fill="rgb(222,148,37)" fg:x="126" fg:w="71"/><text x="0.5052%" y="559.50"></text></g><g><title>CoreFoundation`_CFRelease (8 samples, 0.02%)</title><rect x="0.4011%" y="469" width="0.0162%" height="15" fill="rgb(234,67,33)" fg:x="198" fg:w="8"/><text x="0.6511%" y="479.50"></text></g><g><title>CoreFoundation`cow_cleanup (10 samples, 0.02%)</title><rect x="0.3991%" y="485" width="0.0203%" height="15" fill="rgb(247,98,35)" fg:x="197" fg:w="10"/><text x="0.6491%" y="495.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM dealloc] (11 samples, 0.02%)</title><rect x="0.3991%" y="501" width="0.0223%" height="15" fill="rgb(247,138,52)" fg:x="197" fg:w="11"/><text x="0.6491%" y="511.50"></text></g><g><title>CoreFoundation`cow_cleanup (13 samples, 0.03%)</title><rect x="0.3991%" y="517" width="0.0263%" height="15" fill="rgb(213,79,30)" fg:x="197" fg:w="13"/><text x="0.6491%" y="527.50"></text></g><g><title>Security`Security::KeychainCore::TrustSettings::~TrustSettings (14 samples, 0.03%)</title><rect x="0.3991%" y="549" width="0.0284%" height="15" fill="rgb(246,177,23)" fg:x="197" fg:w="14"/><text x="0.6491%" y="559.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM dealloc] (14 samples, 0.03%)</title><rect x="0.3991%" y="533" width="0.0284%" height="15" fill="rgb(230,62,27)" fg:x="197" fg:w="14"/><text x="0.6491%" y="543.50"></text></g><g><title>databend-query`common_sharing::share_endpoint::ShareEndpointManager::init (206 samples, 0.42%)</title><rect x="0.0122%" y="725" width="0.4173%" height="15" fill="rgb(216,154,8)" fg:x="6" fg:w="206"/><text x="0.2622%" y="735.50"></text></g><g><title>databend-query`opendal::raw::http_util::client::HttpClient::new (206 samples, 0.42%)</title><rect x="0.0122%" y="709" width="0.4173%" height="15" fill="rgb(244,35,45)" fg:x="6" fg:w="206"/><text x="0.2622%" y="719.50"></text></g><g><title>databend-query`ureq::agent::AgentBuilder::new (99 samples, 0.20%)</title><rect x="0.2289%" y="693" width="0.2006%" height="15" fill="rgb(251,115,12)" fg:x="113" fg:w="99"/><text x="0.4789%" y="703.50"></text></g><g><title>databend-query`once_cell::imp::OnceCell&lt;T&gt;::initialize (99 samples, 0.20%)</title><rect x="0.2289%" y="677" width="0.2006%" height="15" fill="rgb(240,54,50)" fg:x="113" fg:w="99"/><text x="0.4789%" y="687.50"></text></g><g><title>databend-query`once_cell::imp::initialize_or_wait (99 samples, 0.20%)</title><rect x="0.2289%" y="661" width="0.2006%" height="15" fill="rgb(233,84,52)" fg:x="113" fg:w="99"/><text x="0.4789%" y="671.50"></text></g><g><title>databend-query`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (99 samples, 0.20%)</title><rect x="0.2289%" y="645" width="0.2006%" height="15" fill="rgb(207,117,47)" fg:x="113" fg:w="99"/><text x="0.4789%" y="655.50"></text></g><g><title>databend-query`core::ops::function::FnOnce::call_once (99 samples, 0.20%)</title><rect x="0.2289%" y="629" width="0.2006%" height="15" fill="rgb(249,43,39)" fg:x="113" fg:w="99"/><text x="0.4789%" y="639.50"></text></g><g><title>databend-query`rustls_native_certs::load_native_certs (99 samples, 0.20%)</title><rect x="0.2289%" y="613" width="0.2006%" height="15" fill="rgb(209,38,44)" fg:x="113" fg:w="99"/><text x="0.4789%" y="623.50"></text></g><g><title>databend-query`security_framework::trust_settings::TrustSettings::tls_trust_settings_for_certificate (86 samples, 0.17%)</title><rect x="0.2552%" y="597" width="0.1742%" height="15" fill="rgb(236,212,23)" fg:x="126" fg:w="86"/><text x="0.5052%" y="607.50"></text></g><g><title>Security`SecTrustSettingsCopyTrustSettings (86 samples, 0.17%)</title><rect x="0.2552%" y="581" width="0.1742%" height="15" fill="rgb(242,79,21)" fg:x="126" fg:w="86"/><text x="0.5052%" y="591.50"></text></g><g><title>Security`tsCopyTrustSettings(__SecCertificate*, SecTrustSettingsDomain, __CFArray const**, __CFDate const**) (86 samples, 0.17%)</title><rect x="0.2552%" y="565" width="0.1742%" height="15" fill="rgb(211,96,35)" fg:x="126" fg:w="86"/><text x="0.5052%" y="575.50"></text></g><g><title>dyld`start (215 samples, 0.44%)</title><rect x="0.0000%" y="901" width="0.4355%" height="15" fill="rgb(253,215,40)" fg:x="0" fg:w="215"/><text x="0.2500%" y="911.50"></text></g><g><title>databend-query`main (215 samples, 0.44%)</title><rect x="0.0000%" y="885" width="0.4355%" height="15" fill="rgb(211,81,21)" fg:x="0" fg:w="215"/><text x="0.2500%" y="895.50"></text></g><g><title>databend-query`std::rt::lang_start_internal (215 samples, 0.44%)</title><rect x="0.0000%" y="869" width="0.4355%" height="15" fill="rgb(208,190,38)" fg:x="0" fg:w="215"/><text x="0.2500%" y="879.50"></text></g><g><title>databend-query`std::rt::lang_start::_{{closure}} (215 samples, 0.44%)</title><rect x="0.0000%" y="853" width="0.4355%" height="15" fill="rgb(235,213,38)" fg:x="0" fg:w="215"/><text x="0.2500%" y="863.50"></text></g><g><title>databend-query`std::sys_common::backtrace::__rust_begin_short_backtrace (215 samples, 0.44%)</title><rect x="0.0000%" y="837" width="0.4355%" height="15" fill="rgb(237,122,38)" fg:x="0" fg:w="215"/><text x="0.2500%" y="847.50"></text></g><g><title>databend-query`databend_query::main (215 samples, 0.44%)</title><rect x="0.0000%" y="821" width="0.4355%" height="15" fill="rgb(244,218,35)" fg:x="0" fg:w="215"/><text x="0.2500%" y="831.50"></text></g><g><title>databend-query`tokio::runtime::handle::Handle::block_on (214 samples, 0.43%)</title><rect x="0.0020%" y="805" width="0.4335%" height="15" fill="rgb(240,68,47)" fg:x="1" fg:w="214"/><text x="0.2520%" y="815.50"></text></g><g><title>databend-query`tokio::runtime::park::CachedParkThread::block_on (214 samples, 0.43%)</title><rect x="0.0020%" y="789" width="0.4335%" height="15" fill="rgb(210,16,53)" fg:x="1" fg:w="214"/><text x="0.2520%" y="799.50"></text></g><g><title>databend-query`databend_query::main_entrypoint::_{{closure}} (214 samples, 0.43%)</title><rect x="0.0020%" y="773" width="0.4335%" height="15" fill="rgb(235,124,12)" fg:x="1" fg:w="214"/><text x="0.2520%" y="783.50"></text></g><g><title>databend-query`databend_query::global_services::GlobalServices::init::_{{closure}} (211 samples, 0.43%)</title><rect x="0.0081%" y="757" width="0.4274%" height="15" fill="rgb(224,169,11)" fg:x="4" fg:w="211"/><text x="0.2581%" y="767.50"></text></g><g><title>databend-query`databend_query::global_services::GlobalServices::init_with::_{{closure}} (211 samples, 0.43%)</title><rect x="0.0081%" y="741" width="0.4274%" height="15" fill="rgb(250,166,2)" fg:x="4" fg:w="211"/><text x="0.2581%" y="751.50"></text></g><g><title>databend-query`parking_lot::raw_mutex::RawMutex::lock_slow (5 samples, 0.01%)</title><rect x="0.4457%" y="821" width="0.0101%" height="15" fill="rgb(242,216,29)" fg:x="220" fg:w="5"/><text x="0.6957%" y="831.50"></text></g><g><title>databend-query`std::thread::local::fast::Key&lt;T&gt;::try_initialize (5 samples, 0.01%)</title><rect x="0.4457%" y="805" width="0.0101%" height="15" fill="rgb(230,116,27)" fg:x="220" fg:w="5"/><text x="0.6957%" y="815.50"></text></g><g><title>databend-query`parking_lot_core::parking_lot::ThreadData::new (5 samples, 0.01%)</title><rect x="0.4457%" y="789" width="0.0101%" height="15" fill="rgb(228,99,48)" fg:x="220" fg:w="5"/><text x="0.6957%" y="799.50"></text></g><g><title>databend-query`tokio::runtime::time::Driver::park_internal (6 samples, 0.01%)</title><rect x="0.4680%" y="773" width="0.0122%" height="15" fill="rgb(253,11,6)" fg:x="231" fg:w="6"/><text x="0.7180%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`kevent (5 samples, 0.01%)</title><rect x="0.4700%" y="757" width="0.0101%" height="15" fill="rgb(247,143,39)" fg:x="232" fg:w="5"/><text x="0.7200%" y="767.50"></text></g><g><title>databend-query`tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (10 samples, 0.02%)</title><rect x="0.4619%" y="789" width="0.0203%" height="15" fill="rgb(236,97,10)" fg:x="228" fg:w="10"/><text x="0.7119%" y="799.50"></text></g><g><title>databend-query`databend_query::interpreters::interpreter_select::SelectInterpreter::build_physical_plan::_{{closure}} (18 samples, 0.04%)</title><rect x="0.4902%" y="661" width="0.0365%" height="15" fill="rgb(233,208,19)" fg:x="242" fg:w="18"/><text x="0.7402%" y="671.50"></text></g><g><title>databend-query`common_sql::executor::physical_plan_builder::PhysicalPlanBuilder::build::_{{closure}} (18 samples, 0.04%)</title><rect x="0.4902%" y="645" width="0.0365%" height="15" fill="rgb(216,164,2)" fg:x="242" fg:w="18"/><text x="0.7402%" y="655.50"></text></g><g><title>databend-query`common_sql::executor::physical_plan_builder::PhysicalPlanBuilder::build::_{{closure}} (18 samples, 0.04%)</title><rect x="0.4902%" y="629" width="0.0365%" height="15" fill="rgb(220,129,5)" fg:x="242" fg:w="18"/><text x="0.7402%" y="639.50"></text></g><g><title>databend-query`common_sql::executor::physical_plan_builder::PhysicalPlanBuilder::build::_{{closure}} (18 samples, 0.04%)</title><rect x="0.4902%" y="613" width="0.0365%" height="15" fill="rgb(242,17,10)" fg:x="242" fg:w="18"/><text x="0.7402%" y="623.50"></text></g><g><title>databend-query`common_sql::executor::physical_plan_builder::PhysicalPlanBuilder::push_downs (18 samples, 0.04%)</title><rect x="0.4902%" y="597" width="0.0365%" height="15" fill="rgb(242,107,0)" fg:x="242" fg:w="18"/><text x="0.7402%" y="607.50"></text></g><g><title>databend-query`&lt;databend_query::sessions::query_ctx::QueryContext as common_catalog::table_context::TableContext&gt;::get_function_context (18 samples, 0.04%)</title><rect x="0.4902%" y="581" width="0.0365%" height="15" fill="rgb(251,28,31)" fg:x="242" fg:w="18"/><text x="0.7402%" y="591.50"></text></g><g><title>databend-query`once_cell::imp::OnceCell&lt;T&gt;::initialize (18 samples, 0.04%)</title><rect x="0.4902%" y="565" width="0.0365%" height="15" fill="rgb(233,223,10)" fg:x="242" fg:w="18"/><text x="0.7402%" y="575.50"></text></g><g><title>databend-query`once_cell::imp::initialize_or_wait (18 samples, 0.04%)</title><rect x="0.4902%" y="549" width="0.0365%" height="15" fill="rgb(215,21,27)" fg:x="242" fg:w="18"/><text x="0.7402%" y="559.50"></text></g><g><title>databend-query`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (18 samples, 0.04%)</title><rect x="0.4902%" y="533" width="0.0365%" height="15" fill="rgb(232,23,21)" fg:x="242" fg:w="18"/><text x="0.7402%" y="543.50"></text></g><g><title>databend-query`core::ops::function::FnOnce::call_once (18 samples, 0.04%)</title><rect x="0.4902%" y="517" width="0.0365%" height="15" fill="rgb(244,5,23)" fg:x="242" fg:w="18"/><text x="0.7402%" y="527.50"></text></g><g><title>databend-query`common_expression::utils::date_helper::TzFactory::get (18 samples, 0.04%)</title><rect x="0.4902%" y="501" width="0.0365%" height="15" fill="rgb(226,81,46)" fg:x="242" fg:w="18"/><text x="0.7402%" y="511.50"></text></g><g><title>databend-query`common_expression::utils::date_helper::TzLUT::new (18 samples, 0.04%)</title><rect x="0.4902%" y="485" width="0.0365%" height="15" fill="rgb(247,70,30)" fg:x="242" fg:w="18"/><text x="0.7402%" y="495.50"></text></g><g><title>databend-query`chrono_tz::timezone_impl::_&lt;impl chrono::offset::TimeZone for chrono_tz::timezones::Tz&gt;::offset_from_local_datetime (12 samples, 0.02%)</title><rect x="0.5024%" y="469" width="0.0243%" height="15" fill="rgb(212,68,19)" fg:x="248" fg:w="12"/><text x="0.7524%" y="479.50"></text></g><g><title>databend-query`&lt;databend_query::interpreters::interpreter_select::SelectInterpreter as databend_query::interpreters::interpreter::Interpreter&gt;::execute2::_{{closure}} (19 samples, 0.04%)</title><rect x="0.4902%" y="693" width="0.0385%" height="15" fill="rgb(240,187,13)" fg:x="242" fg:w="19"/><text x="0.7402%" y="703.50"></text></g><g><title>databend-query`&lt;databend_query::interpreters::interpreter_select::SelectInterpreter as databend_query::interpreters::interpreter::Interpreter&gt;::execute2::_{{closure}}::_{{closure}} (19 samples, 0.04%)</title><rect x="0.4902%" y="677" width="0.0385%" height="15" fill="rgb(223,113,26)" fg:x="242" fg:w="19"/><text x="0.7402%" y="687.50"></text></g><g><title>databend-query`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (22 samples, 0.04%)</title><rect x="0.4902%" y="725" width="0.0446%" height="15" fill="rgb(206,192,2)" fg:x="242" fg:w="22"/><text x="0.7402%" y="735.50"></text></g><g><title>databend-query`databend_query::interpreters::interpreter::Interpreter::execute::_{{closure}} (22 samples, 0.04%)</title><rect x="0.4902%" y="709" width="0.0446%" height="15" fill="rgb(241,108,4)" fg:x="242" fg:w="22"/><text x="0.7402%" y="719.50"></text></g><g><title>databend-query`common_sql::planner::binder::binder::Binder::bind_statement::_{{closure}} (14 samples, 0.03%)</title><rect x="0.5449%" y="613" width="0.0284%" height="15" fill="rgb(247,173,49)" fg:x="269" fg:w="14"/><text x="0.7949%" y="623.50"></text></g><g><title>databend-query`common_sql::planner::binder::select::_&lt;impl common_sql::planner::binder::binder::Binder&gt;::bind_query::_{{closure}} (14 samples, 0.03%)</title><rect x="0.5449%" y="597" width="0.0284%" height="15" fill="rgb(224,114,35)" fg:x="269" fg:w="14"/><text x="0.7949%" y="607.50"></text></g><g><title>databend-query`common_sql::planner::binder::select::_&lt;impl common_sql::planner::binder::binder::Binder&gt;::bind_set_expr::_{{closure}} (14 samples, 0.03%)</title><rect x="0.5449%" y="581" width="0.0284%" height="15" fill="rgb(245,159,27)" fg:x="269" fg:w="14"/><text x="0.7949%" y="591.50"></text></g><g><title>databend-query`common_sql::planner::binder::select::_&lt;impl common_sql::planner::binder::binder::Binder&gt;::bind_select_stmt::_{{closure}} (14 samples, 0.03%)</title><rect x="0.5449%" y="565" width="0.0284%" height="15" fill="rgb(245,172,44)" fg:x="269" fg:w="14"/><text x="0.7949%" y="575.50"></text></g><g><title>databend-query`common_sql::planner::binder::table::_&lt;impl common_sql::planner::binder::binder::Binder&gt;::bind_table_reference::_{{closure}} (11 samples, 0.02%)</title><rect x="0.5510%" y="549" width="0.0223%" height="15" fill="rgb(236,23,11)" fg:x="272" fg:w="11"/><text x="0.8010%" y="559.50"></text></g><g><title>databend-query`common_sql::planner::binder::table::_&lt;impl common_sql::planner::binder::binder::Binder&gt;::bind_single_table::_{{closure}} (10 samples, 0.02%)</title><rect x="0.5530%" y="533" width="0.0203%" height="15" fill="rgb(205,117,38)" fg:x="273" fg:w="10"/><text x="0.8030%" y="543.50"></text></g><g><title>databend-query`common_sql::planner::binder::table::_&lt;impl common_sql::planner::binder::binder::Binder&gt;::resolve_data_source::_{{closure}} (6 samples, 0.01%)</title><rect x="0.5611%" y="517" width="0.0122%" height="15" fill="rgb(237,72,25)" fg:x="277" fg:w="6"/><text x="0.8111%" y="527.50"></text></g><g><title>databend-query`&lt;databend_query::catalogs::default::database_catalog::DatabaseCatalog as common_catalog::catalog::interface::Catalog&gt;::get_table::_{{closure}} (6 samples, 0.01%)</title><rect x="0.5611%" y="501" width="0.0122%" height="15" fill="rgb(244,70,9)" fg:x="277" fg:w="6"/><text x="0.8111%" y="511.50"></text></g><g><title>databend-query`&lt;databend_query::catalogs::default::mutable_catalog::MutableCatalog as common_catalog::catalog::interface::Catalog&gt;::get_table::_{{closure}} (6 samples, 0.01%)</title><rect x="0.5611%" y="485" width="0.0122%" height="15" fill="rgb(217,125,39)" fg:x="277" fg:w="6"/><text x="0.8111%" y="495.50"></text></g><g><title>databend-query`common_sql::planner::binder::binder::Binder::bind_statement::_{{closure}} (16 samples, 0.03%)</title><rect x="0.5449%" y="629" width="0.0324%" height="15" fill="rgb(235,36,10)" fg:x="269" fg:w="16"/><text x="0.7949%" y="639.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::heuristic::heuristic::HeuristicOptimizer::apply_transform_rules (5 samples, 0.01%)</title><rect x="0.5996%" y="197" width="0.0101%" height="15" fill="rgb(251,123,47)" fg:x="296" fg:w="5"/><text x="0.8496%" y="207.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::heuristic::heuristic::HeuristicOptimizer::optimize_expression (5 samples, 0.01%)</title><rect x="0.5996%" y="181" width="0.0101%" height="15" fill="rgb(221,13,13)" fg:x="296" fg:w="5"/><text x="0.8496%" y="191.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::heuristic::heuristic::HeuristicOptimizer::optimize_expression (5 samples, 0.01%)</title><rect x="0.5996%" y="165" width="0.0101%" height="15" fill="rgb(238,131,9)" fg:x="296" fg:w="5"/><text x="0.8496%" y="175.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::heuristic::heuristic::HeuristicOptimizer::apply_transform_rules (7 samples, 0.01%)</title><rect x="0.5996%" y="245" width="0.0142%" height="15" fill="rgb(211,50,8)" fg:x="296" fg:w="7"/><text x="0.8496%" y="255.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::heuristic::heuristic::HeuristicOptimizer::optimize_expression (7 samples, 0.01%)</title><rect x="0.5996%" y="229" width="0.0142%" height="15" fill="rgb(245,182,24)" fg:x="296" fg:w="7"/><text x="0.8496%" y="239.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::heuristic::heuristic::HeuristicOptimizer::optimize_expression (7 samples, 0.01%)</title><rect x="0.5996%" y="213" width="0.0142%" height="15" fill="rgb(242,14,37)" fg:x="296" fg:w="7"/><text x="0.8496%" y="223.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::heuristic::heuristic::HeuristicOptimizer::optimize_expression (8 samples, 0.02%)</title><rect x="0.5996%" y="277" width="0.0162%" height="15" fill="rgb(246,228,12)" fg:x="296" fg:w="8"/><text x="0.8496%" y="287.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::heuristic::heuristic::HeuristicOptimizer::optimize_expression (8 samples, 0.02%)</title><rect x="0.5996%" y="261" width="0.0162%" height="15" fill="rgb(213,55,15)" fg:x="296" fg:w="8"/><text x="0.8496%" y="271.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::heuristic::heuristic::HeuristicOptimizer::apply_transform_rules (15 samples, 0.03%)</title><rect x="0.5875%" y="437" width="0.0304%" height="15" fill="rgb(209,9,3)" fg:x="290" fg:w="15"/><text x="0.8375%" y="447.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::heuristic::heuristic::HeuristicOptimizer::optimize_expression (13 samples, 0.03%)</title><rect x="0.5915%" y="421" width="0.0263%" height="15" fill="rgb(230,59,30)" fg:x="292" fg:w="13"/><text x="0.8415%" y="431.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::heuristic::heuristic::HeuristicOptimizer::optimize_expression (13 samples, 0.03%)</title><rect x="0.5915%" y="405" width="0.0263%" height="15" fill="rgb(209,121,21)" fg:x="292" fg:w="13"/><text x="0.8415%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::heuristic::heuristic::HeuristicOptimizer::apply_transform_rules (13 samples, 0.03%)</title><rect x="0.5915%" y="389" width="0.0263%" height="15" fill="rgb(220,109,13)" fg:x="292" fg:w="13"/><text x="0.8415%" y="399.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::heuristic::heuristic::HeuristicOptimizer::optimize_expression (11 samples, 0.02%)</title><rect x="0.5956%" y="373" width="0.0223%" height="15" fill="rgb(232,18,1)" fg:x="294" fg:w="11"/><text x="0.8456%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::heuristic::heuristic::HeuristicOptimizer::optimize_expression (11 samples, 0.02%)</title><rect x="0.5956%" y="357" width="0.0223%" height="15" fill="rgb(215,41,42)" fg:x="294" fg:w="11"/><text x="0.8456%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::heuristic::heuristic::HeuristicOptimizer::apply_transform_rules (11 samples, 0.02%)</title><rect x="0.5956%" y="341" width="0.0223%" height="15" fill="rgb(224,123,36)" fg:x="294" fg:w="11"/><text x="0.8456%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::heuristic::heuristic::HeuristicOptimizer::optimize_expression (10 samples, 0.02%)</title><rect x="0.5976%" y="325" width="0.0203%" height="15" fill="rgb(240,125,3)" fg:x="295" fg:w="10"/><text x="0.8476%" y="335.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::heuristic::heuristic::HeuristicOptimizer::optimize_expression (10 samples, 0.02%)</title><rect x="0.5976%" y="309" width="0.0203%" height="15" fill="rgb(205,98,50)" fg:x="295" fg:w="10"/><text x="0.8476%" y="319.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::heuristic::heuristic::HeuristicOptimizer::apply_transform_rules (10 samples, 0.02%)</title><rect x="0.5976%" y="293" width="0.0203%" height="15" fill="rgb(205,185,37)" fg:x="295" fg:w="10"/><text x="0.8476%" y="303.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::heuristic::heuristic::HeuristicOptimizer::apply_transform_rules (18 samples, 0.04%)</title><rect x="0.5834%" y="485" width="0.0365%" height="15" fill="rgb(238,207,15)" fg:x="288" fg:w="18"/><text x="0.8334%" y="495.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::heuristic::heuristic::HeuristicOptimizer::optimize_expression (16 samples, 0.03%)</title><rect x="0.5875%" y="469" width="0.0324%" height="15" fill="rgb(213,199,42)" fg:x="290" fg:w="16"/><text x="0.8375%" y="479.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::heuristic::heuristic::HeuristicOptimizer::optimize_expression (16 samples, 0.03%)</title><rect x="0.5875%" y="453" width="0.0324%" height="15" fill="rgb(235,201,11)" fg:x="290" fg:w="16"/><text x="0.8375%" y="463.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::heuristic::heuristic::HeuristicOptimizer::optimize_expression (22 samples, 0.04%)</title><rect x="0.5773%" y="565" width="0.0446%" height="15" fill="rgb(207,46,11)" fg:x="285" fg:w="22"/><text x="0.8273%" y="575.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::heuristic::heuristic::HeuristicOptimizer::optimize_expression (21 samples, 0.04%)</title><rect x="0.5794%" y="549" width="0.0425%" height="15" fill="rgb(241,35,35)" fg:x="286" fg:w="21"/><text x="0.8294%" y="559.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::heuristic::heuristic::HeuristicOptimizer::apply_transform_rules (21 samples, 0.04%)</title><rect x="0.5794%" y="533" width="0.0425%" height="15" fill="rgb(243,32,47)" fg:x="286" fg:w="21"/><text x="0.8294%" y="543.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::heuristic::heuristic::HeuristicOptimizer::optimize_expression (19 samples, 0.04%)</title><rect x="0.5834%" y="517" width="0.0385%" height="15" fill="rgb(247,202,23)" fg:x="288" fg:w="19"/><text x="0.8334%" y="527.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::heuristic::heuristic::HeuristicOptimizer::optimize_expression (19 samples, 0.04%)</title><rect x="0.5834%" y="501" width="0.0385%" height="15" fill="rgb(219,102,11)" fg:x="288" fg:w="19"/><text x="0.8334%" y="511.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::heuristic::heuristic::HeuristicOptimizer::optimize (24 samples, 0.05%)</title><rect x="0.5773%" y="581" width="0.0486%" height="15" fill="rgb(243,110,44)" fg:x="285" fg:w="24"/><text x="0.8273%" y="591.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (9 samples, 0.02%)</title><rect x="0.6300%" y="485" width="0.0182%" height="15" fill="rgb(222,74,54)" fg:x="311" fg:w="9"/><text x="0.8800%" y="495.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (7 samples, 0.01%)</title><rect x="0.6341%" y="469" width="0.0142%" height="15" fill="rgb(216,99,12)" fg:x="313" fg:w="7"/><text x="0.8841%" y="479.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::join_node::JoinNode::cardinality (15 samples, 0.03%)</title><rect x="0.6300%" y="501" width="0.0304%" height="15" fill="rgb(226,22,26)" fg:x="311" fg:w="15"/><text x="0.8800%" y="511.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::emit_csg_cmp (16 samples, 0.03%)</title><rect x="0.6300%" y="517" width="0.0324%" height="15" fill="rgb(217,163,10)" fg:x="311" fg:w="16"/><text x="0.8800%" y="527.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (6 samples, 0.01%)</title><rect x="0.6645%" y="469" width="0.0122%" height="15" fill="rgb(213,25,53)" fg:x="328" fg:w="6"/><text x="0.9145%" y="479.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="0.6766%" y="453" width="0.0142%" height="15" fill="rgb(252,105,26)" fg:x="334" fg:w="7"/><text x="0.9266%" y="463.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (5 samples, 0.01%)</title><rect x="0.7252%" y="341" width="0.0101%" height="15" fill="rgb(220,39,43)" fg:x="358" fg:w="5"/><text x="0.9752%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (5 samples, 0.01%)</title><rect x="0.7252%" y="325" width="0.0101%" height="15" fill="rgb(229,68,48)" fg:x="358" fg:w="5"/><text x="0.9752%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (7 samples, 0.01%)</title><rect x="0.7232%" y="357" width="0.0142%" height="15" fill="rgb(252,8,32)" fg:x="357" fg:w="7"/><text x="0.9732%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (14 samples, 0.03%)</title><rect x="0.7110%" y="405" width="0.0284%" height="15" fill="rgb(223,20,43)" fg:x="351" fg:w="14"/><text x="0.9610%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (11 samples, 0.02%)</title><rect x="0.7171%" y="389" width="0.0223%" height="15" fill="rgb(229,81,49)" fg:x="354" fg:w="11"/><text x="0.9671%" y="399.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (11 samples, 0.02%)</title><rect x="0.7171%" y="373" width="0.0223%" height="15" fill="rgb(236,28,36)" fg:x="354" fg:w="11"/><text x="0.9671%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (19 samples, 0.04%)</title><rect x="0.7029%" y="437" width="0.0385%" height="15" fill="rgb(249,185,26)" fg:x="347" fg:w="19"/><text x="0.9529%" y="447.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (19 samples, 0.04%)</title><rect x="0.7029%" y="421" width="0.0385%" height="15" fill="rgb(249,174,33)" fg:x="347" fg:w="19"/><text x="0.9529%" y="431.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (33 samples, 0.07%)</title><rect x="0.6766%" y="469" width="0.0669%" height="15" fill="rgb(233,201,37)" fg:x="334" fg:w="33"/><text x="0.9266%" y="479.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (26 samples, 0.05%)</title><rect x="0.6908%" y="453" width="0.0527%" height="15" fill="rgb(221,78,26)" fg:x="341" fg:w="26"/><text x="0.9408%" y="463.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (9 samples, 0.02%)</title><rect x="0.7435%" y="469" width="0.0182%" height="15" fill="rgb(250,127,30)" fg:x="367" fg:w="9"/><text x="0.9935%" y="479.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (5 samples, 0.01%)</title><rect x="0.7617%" y="437" width="0.0101%" height="15" fill="rgb(230,49,44)" fg:x="376" fg:w="5"/><text x="1.0117%" y="447.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (5 samples, 0.01%)</title><rect x="0.7617%" y="421" width="0.0101%" height="15" fill="rgb(229,67,23)" fg:x="376" fg:w="5"/><text x="1.0117%" y="431.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (6 samples, 0.01%)</title><rect x="0.7718%" y="437" width="0.0122%" height="15" fill="rgb(249,83,47)" fg:x="381" fg:w="6"/><text x="1.0218%" y="447.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (6 samples, 0.01%)</title><rect x="0.7718%" y="421" width="0.0122%" height="15" fill="rgb(215,43,3)" fg:x="381" fg:w="6"/><text x="1.0218%" y="431.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (5 samples, 0.01%)</title><rect x="0.7738%" y="405" width="0.0101%" height="15" fill="rgb(238,154,13)" fg:x="382" fg:w="5"/><text x="1.0238%" y="415.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (5 samples, 0.01%)</title><rect x="0.7738%" y="389" width="0.0101%" height="15" fill="rgb(219,56,2)" fg:x="382" fg:w="5"/><text x="1.0238%" y="399.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (12 samples, 0.02%)</title><rect x="0.7617%" y="453" width="0.0243%" height="15" fill="rgb(233,0,4)" fg:x="376" fg:w="12"/><text x="1.0117%" y="463.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::join_node::JoinNode::cardinality (62 samples, 0.13%)</title><rect x="0.6645%" y="485" width="0.1256%" height="15" fill="rgb(235,30,7)" fg:x="328" fg:w="62"/><text x="0.9145%" y="495.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (14 samples, 0.03%)</title><rect x="0.7617%" y="469" width="0.0284%" height="15" fill="rgb(250,79,13)" fg:x="376" fg:w="14"/><text x="1.0117%" y="479.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::emit_csg_cmp (64 samples, 0.13%)</title><rect x="0.6624%" y="501" width="0.1296%" height="15" fill="rgb(211,146,34)" fg:x="327" fg:w="64"/><text x="0.9124%" y="511.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (5 samples, 0.01%)</title><rect x="0.8144%" y="421" width="0.0101%" height="15" fill="rgb(228,22,38)" fg:x="402" fg:w="5"/><text x="1.0644%" y="431.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (12 samples, 0.02%)</title><rect x="0.8042%" y="437" width="0.0243%" height="15" fill="rgb(235,168,5)" fg:x="397" fg:w="12"/><text x="1.0542%" y="447.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (17 samples, 0.03%)</title><rect x="0.7961%" y="453" width="0.0344%" height="15" fill="rgb(221,155,16)" fg:x="393" fg:w="17"/><text x="1.0461%" y="463.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (28 samples, 0.06%)</title><rect x="0.8306%" y="437" width="0.0567%" height="15" fill="rgb(215,215,53)" fg:x="410" fg:w="28"/><text x="1.0806%" y="447.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (7 samples, 0.01%)</title><rect x="0.8873%" y="421" width="0.0142%" height="15" fill="rgb(223,4,10)" fg:x="438" fg:w="7"/><text x="1.1373%" y="431.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (8 samples, 0.02%)</title><rect x="0.9015%" y="421" width="0.0162%" height="15" fill="rgb(234,103,6)" fg:x="445" fg:w="8"/><text x="1.1515%" y="431.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.02%)</title><rect x="0.9015%" y="405" width="0.0162%" height="15" fill="rgb(227,97,0)" fg:x="445" fg:w="8"/><text x="1.1515%" y="415.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="0.9075%" y="389" width="0.0101%" height="15" fill="rgb(234,150,53)" fg:x="448" fg:w="5"/><text x="1.1575%" y="399.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.01%)</title><rect x="0.9177%" y="421" width="0.0142%" height="15" fill="rgb(228,201,54)" fg:x="453" fg:w="7"/><text x="1.1677%" y="431.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="0.9217%" y="405" width="0.0101%" height="15" fill="rgb(222,22,37)" fg:x="455" fg:w="5"/><text x="1.1717%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (5 samples, 0.01%)</title><rect x="0.9906%" y="341" width="0.0101%" height="15" fill="rgb(237,53,32)" fg:x="489" fg:w="5"/><text x="1.2406%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (5 samples, 0.01%)</title><rect x="0.9906%" y="325" width="0.0101%" height="15" fill="rgb(233,25,53)" fg:x="489" fg:w="5"/><text x="1.2406%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.02%)</title><rect x="0.9865%" y="373" width="0.0162%" height="15" fill="rgb(210,40,34)" fg:x="487" fg:w="8"/><text x="1.2365%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="0.9906%" y="357" width="0.0122%" height="15" fill="rgb(241,220,44)" fg:x="489" fg:w="6"/><text x="1.2406%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (37 samples, 0.07%)</title><rect x="0.9319%" y="389" width="0.0750%" height="15" fill="rgb(235,28,35)" fg:x="460" fg:w="37"/><text x="1.1819%" y="399.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (7 samples, 0.01%)</title><rect x="1.0068%" y="373" width="0.0142%" height="15" fill="rgb(210,56,17)" fg:x="497" fg:w="7"/><text x="1.2568%" y="383.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.01%)</title><rect x="1.0088%" y="357" width="0.0122%" height="15" fill="rgb(224,130,29)" fg:x="498" fg:w="6"/><text x="1.2588%" y="367.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="1.0210%" y="357" width="0.0101%" height="15" fill="rgb(235,212,8)" fg:x="504" fg:w="5"/><text x="1.2710%" y="367.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (6 samples, 0.01%)</title><rect x="1.0210%" y="373" width="0.0122%" height="15" fill="rgb(223,33,50)" fg:x="504" fg:w="6"/><text x="1.2710%" y="383.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.01%)</title><rect x="1.0331%" y="373" width="0.0101%" height="15" fill="rgb(219,149,13)" fg:x="510" fg:w="5"/><text x="1.2831%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (13 samples, 0.03%)</title><rect x="1.0433%" y="341" width="0.0263%" height="15" fill="rgb(250,156,29)" fg:x="515" fg:w="13"/><text x="1.2933%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="1.0858%" y="293" width="0.0182%" height="15" fill="rgb(216,193,19)" fg:x="536" fg:w="9"/><text x="1.3358%" y="303.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (12 samples, 0.02%)</title><rect x="1.1040%" y="293" width="0.0243%" height="15" fill="rgb(216,135,14)" fg:x="545" fg:w="12"/><text x="1.3540%" y="303.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (22 samples, 0.04%)</title><rect x="1.0858%" y="325" width="0.0446%" height="15" fill="rgb(241,47,5)" fg:x="536" fg:w="22"/><text x="1.3358%" y="335.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (22 samples, 0.04%)</title><rect x="1.0858%" y="309" width="0.0446%" height="15" fill="rgb(233,42,35)" fg:x="536" fg:w="22"/><text x="1.3358%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (36 samples, 0.07%)</title><rect x="1.0696%" y="341" width="0.0729%" height="15" fill="rgb(231,13,6)" fg:x="528" fg:w="36"/><text x="1.3196%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (52 samples, 0.11%)</title><rect x="1.0433%" y="373" width="0.1053%" height="15" fill="rgb(207,181,40)" fg:x="515" fg:w="52"/><text x="1.2933%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (52 samples, 0.11%)</title><rect x="1.0433%" y="357" width="0.1053%" height="15" fill="rgb(254,173,49)" fg:x="515" fg:w="52"/><text x="1.2933%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (73 samples, 0.15%)</title><rect x="1.0068%" y="389" width="0.1479%" height="15" fill="rgb(221,1,38)" fg:x="497" fg:w="73"/><text x="1.2568%" y="399.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (116 samples, 0.23%)</title><rect x="0.9319%" y="421" width="0.2350%" height="15" fill="rgb(206,124,46)" fg:x="460" fg:w="116"/><text x="1.1819%" y="431.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (116 samples, 0.23%)</title><rect x="0.9319%" y="405" width="0.2350%" height="15" fill="rgb(249,21,11)" fg:x="460" fg:w="116"/><text x="1.1819%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (172 samples, 0.35%)</title><rect x="0.8306%" y="453" width="0.3484%" height="15" fill="rgb(222,201,40)" fg:x="410" fg:w="172"/><text x="1.0806%" y="463.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (144 samples, 0.29%)</title><rect x="0.8873%" y="437" width="0.2917%" height="15" fill="rgb(235,61,29)" fg:x="438" fg:w="144"/><text x="1.1373%" y="447.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (14 samples, 0.03%)</title><rect x="1.1810%" y="437" width="0.0284%" height="15" fill="rgb(219,207,3)" fg:x="583" fg:w="14"/><text x="1.4310%" y="447.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (21 samples, 0.04%)</title><rect x="1.1810%" y="453" width="0.0425%" height="15" fill="rgb(222,56,46)" fg:x="583" fg:w="21"/><text x="1.4310%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_small (6 samples, 0.01%)</title><rect x="1.2114%" y="437" width="0.0122%" height="15" fill="rgb(239,76,54)" fg:x="598" fg:w="6"/><text x="1.4614%" y="447.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (6 samples, 0.01%)</title><rect x="1.2317%" y="405" width="0.0122%" height="15" fill="rgb(231,124,27)" fg:x="608" fg:w="6"/><text x="1.4817%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (14 samples, 0.03%)</title><rect x="1.2236%" y="421" width="0.0284%" height="15" fill="rgb(249,195,6)" fg:x="604" fg:w="14"/><text x="1.4736%" y="431.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (11 samples, 0.02%)</title><rect x="1.2519%" y="389" width="0.0223%" height="15" fill="rgb(237,174,47)" fg:x="618" fg:w="11"/><text x="1.5019%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (6 samples, 0.01%)</title><rect x="1.2742%" y="357" width="0.0122%" height="15" fill="rgb(206,201,31)" fg:x="629" fg:w="6"/><text x="1.5242%" y="367.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (5 samples, 0.01%)</title><rect x="1.2864%" y="341" width="0.0101%" height="15" fill="rgb(231,57,52)" fg:x="635" fg:w="5"/><text x="1.5364%" y="351.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (12 samples, 0.02%)</title><rect x="1.2742%" y="373" width="0.0243%" height="15" fill="rgb(248,177,22)" fg:x="629" fg:w="12"/><text x="1.5242%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (6 samples, 0.01%)</title><rect x="1.2864%" y="357" width="0.0122%" height="15" fill="rgb(215,211,37)" fg:x="635" fg:w="6"/><text x="1.5364%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (14 samples, 0.03%)</title><rect x="1.2742%" y="389" width="0.0284%" height="15" fill="rgb(241,128,51)" fg:x="629" fg:w="14"/><text x="1.5242%" y="399.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (26 samples, 0.05%)</title><rect x="1.2519%" y="405" width="0.0527%" height="15" fill="rgb(227,165,31)" fg:x="618" fg:w="26"/><text x="1.5019%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (28 samples, 0.06%)</title><rect x="1.2519%" y="421" width="0.0567%" height="15" fill="rgb(228,167,24)" fg:x="618" fg:w="28"/><text x="1.5019%" y="431.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (43 samples, 0.09%)</title><rect x="1.2236%" y="437" width="0.0871%" height="15" fill="rgb(228,143,12)" fg:x="604" fg:w="43"/><text x="1.4736%" y="447.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (46 samples, 0.09%)</title><rect x="1.2236%" y="453" width="0.0932%" height="15" fill="rgb(249,149,8)" fg:x="604" fg:w="46"/><text x="1.4736%" y="463.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::join_node::JoinNode::cardinality (258 samples, 0.52%)</title><rect x="0.7961%" y="469" width="0.5226%" height="15" fill="rgb(243,35,44)" fg:x="393" fg:w="258"/><text x="1.0461%" y="479.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::emit_csg_cmp (266 samples, 0.54%)</title><rect x="0.7921%" y="485" width="0.5389%" height="15" fill="rgb(246,89,9)" fg:x="391" fg:w="266"/><text x="1.0421%" y="495.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="1.3309%" y="453" width="0.0162%" height="15" fill="rgb(233,213,13)" fg:x="657" fg:w="8"/><text x="1.5809%" y="463.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="1.3330%" y="437" width="0.0142%" height="15" fill="rgb(233,141,41)" fg:x="658" fg:w="7"/><text x="1.5830%" y="447.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="1.3330%" y="421" width="0.0142%" height="15" fill="rgb(239,167,4)" fg:x="658" fg:w="7"/><text x="1.5830%" y="431.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="1.3633%" y="405" width="0.0162%" height="15" fill="rgb(209,217,16)" fg:x="673" fg:w="8"/><text x="1.6133%" y="415.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="1.3654%" y="389" width="0.0142%" height="15" fill="rgb(219,88,35)" fg:x="674" fg:w="7"/><text x="1.6154%" y="399.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="1.3978%" y="341" width="0.0101%" height="15" fill="rgb(220,193,23)" fg:x="690" fg:w="5"/><text x="1.6478%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="1.3958%" y="357" width="0.0142%" height="15" fill="rgb(230,90,52)" fg:x="689" fg:w="7"/><text x="1.6458%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (16 samples, 0.03%)</title><rect x="1.3795%" y="405" width="0.0324%" height="15" fill="rgb(252,106,19)" fg:x="681" fg:w="16"/><text x="1.6295%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (11 samples, 0.02%)</title><rect x="1.3897%" y="389" width="0.0223%" height="15" fill="rgb(206,74,20)" fg:x="686" fg:w="11"/><text x="1.6397%" y="399.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (8 samples, 0.02%)</title><rect x="1.3958%" y="373" width="0.0162%" height="15" fill="rgb(230,138,44)" fg:x="689" fg:w="8"/><text x="1.6458%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (32 samples, 0.06%)</title><rect x="1.3492%" y="437" width="0.0648%" height="15" fill="rgb(235,182,43)" fg:x="666" fg:w="32"/><text x="1.5992%" y="447.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (25 samples, 0.05%)</title><rect x="1.3633%" y="421" width="0.0506%" height="15" fill="rgb(242,16,51)" fg:x="673" fg:w="25"/><text x="1.6133%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.01%)</title><rect x="1.5335%" y="389" width="0.0101%" height="15" fill="rgb(248,9,4)" fg:x="757" fg:w="5"/><text x="1.7835%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.03%)</title><rect x="1.5315%" y="405" width="0.0324%" height="15" fill="rgb(210,31,22)" fg:x="756" fg:w="16"/><text x="1.7815%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="1.5436%" y="389" width="0.0203%" height="15" fill="rgb(239,54,39)" fg:x="762" fg:w="10"/><text x="1.7936%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (8 samples, 0.02%)</title><rect x="1.5477%" y="373" width="0.0162%" height="15" fill="rgb(230,99,41)" fg:x="764" fg:w="8"/><text x="1.7977%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (6 samples, 0.01%)</title><rect x="1.5517%" y="357" width="0.0122%" height="15" fill="rgb(253,106,12)" fg:x="766" fg:w="6"/><text x="1.8017%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (74 samples, 0.15%)</title><rect x="1.4160%" y="421" width="0.1499%" height="15" fill="rgb(213,46,41)" fg:x="699" fg:w="74"/><text x="1.6660%" y="431.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.02%)</title><rect x="1.5720%" y="389" width="0.0203%" height="15" fill="rgb(215,133,35)" fg:x="776" fg:w="10"/><text x="1.8220%" y="399.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (13 samples, 0.03%)</title><rect x="1.5679%" y="405" width="0.0263%" height="15" fill="rgb(213,28,5)" fg:x="774" fg:w="13"/><text x="1.8179%" y="415.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.02%)</title><rect x="1.5943%" y="389" width="0.0182%" height="15" fill="rgb(215,77,49)" fg:x="787" fg:w="9"/><text x="1.8443%" y="399.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (12 samples, 0.02%)</title><rect x="1.5943%" y="405" width="0.0243%" height="15" fill="rgb(248,100,22)" fg:x="787" fg:w="12"/><text x="1.8443%" y="415.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (12 samples, 0.02%)</title><rect x="1.6287%" y="389" width="0.0243%" height="15" fill="rgb(208,67,9)" fg:x="804" fg:w="12"/><text x="1.8787%" y="399.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (18 samples, 0.04%)</title><rect x="1.6186%" y="405" width="0.0365%" height="15" fill="rgb(219,133,21)" fg:x="799" fg:w="18"/><text x="1.8686%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (12 samples, 0.02%)</title><rect x="1.7746%" y="357" width="0.0243%" height="15" fill="rgb(246,46,29)" fg:x="876" fg:w="12"/><text x="2.0246%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="1.7847%" y="341" width="0.0142%" height="15" fill="rgb(246,185,52)" fg:x="881" fg:w="7"/><text x="2.0347%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (7 samples, 0.01%)</title><rect x="1.7847%" y="325" width="0.0142%" height="15" fill="rgb(252,136,11)" fg:x="881" fg:w="7"/><text x="2.0347%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (6 samples, 0.01%)</title><rect x="1.7867%" y="309" width="0.0122%" height="15" fill="rgb(219,138,53)" fg:x="882" fg:w="6"/><text x="2.0367%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (72 samples, 0.15%)</title><rect x="1.6571%" y="373" width="0.1459%" height="15" fill="rgb(211,51,23)" fg:x="818" fg:w="72"/><text x="1.9071%" y="383.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="1.8070%" y="341" width="0.0101%" height="15" fill="rgb(247,221,28)" fg:x="892" fg:w="5"/><text x="2.0570%" y="351.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (9 samples, 0.02%)</title><rect x="1.8050%" y="357" width="0.0182%" height="15" fill="rgb(251,222,45)" fg:x="891" fg:w="9"/><text x="2.0550%" y="367.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="1.8232%" y="341" width="0.0101%" height="15" fill="rgb(217,162,53)" fg:x="900" fg:w="5"/><text x="2.0732%" y="351.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (6 samples, 0.01%)</title><rect x="1.8232%" y="357" width="0.0122%" height="15" fill="rgb(229,93,14)" fg:x="900" fg:w="6"/><text x="2.0732%" y="367.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.01%)</title><rect x="1.8394%" y="341" width="0.0122%" height="15" fill="rgb(209,67,49)" fg:x="908" fg:w="6"/><text x="2.0894%" y="351.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.02%)</title><rect x="1.8353%" y="357" width="0.0182%" height="15" fill="rgb(213,87,29)" fg:x="906" fg:w="9"/><text x="2.0853%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (10 samples, 0.02%)</title><rect x="1.9184%" y="277" width="0.0203%" height="15" fill="rgb(205,151,52)" fg:x="947" fg:w="10"/><text x="2.1684%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (7 samples, 0.01%)</title><rect x="1.9245%" y="261" width="0.0142%" height="15" fill="rgb(253,215,39)" fg:x="950" fg:w="7"/><text x="2.1745%" y="271.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (44 samples, 0.09%)</title><rect x="1.8536%" y="325" width="0.0891%" height="15" fill="rgb(221,220,41)" fg:x="915" fg:w="44"/><text x="2.1036%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (13 samples, 0.03%)</title><rect x="1.9164%" y="309" width="0.0263%" height="15" fill="rgb(218,133,21)" fg:x="946" fg:w="13"/><text x="2.1664%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.03%)</title><rect x="1.9164%" y="293" width="0.0263%" height="15" fill="rgb(221,193,43)" fg:x="946" fg:w="13"/><text x="2.1664%" y="303.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.01%)</title><rect x="1.9589%" y="293" width="0.0142%" height="15" fill="rgb(240,128,52)" fg:x="967" fg:w="7"/><text x="2.2089%" y="303.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (13 samples, 0.03%)</title><rect x="1.9569%" y="309" width="0.0263%" height="15" fill="rgb(253,114,12)" fg:x="966" fg:w="13"/><text x="2.2069%" y="319.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="1.9893%" y="293" width="0.0101%" height="15" fill="rgb(215,223,47)" fg:x="982" fg:w="5"/><text x="2.2393%" y="303.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.02%)</title><rect x="1.9832%" y="309" width="0.0182%" height="15" fill="rgb(248,225,23)" fg:x="979" fg:w="9"/><text x="2.2332%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (29 samples, 0.06%)</title><rect x="2.0015%" y="277" width="0.0587%" height="15" fill="rgb(250,108,0)" fg:x="988" fg:w="29"/><text x="2.2515%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="2.0501%" y="261" width="0.0101%" height="15" fill="rgb(228,208,7)" fg:x="1012" fg:w="5"/><text x="2.3001%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="2.0501%" y="245" width="0.0101%" height="15" fill="rgb(244,45,10)" fg:x="1012" fg:w="5"/><text x="2.3001%" y="255.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.01%)</title><rect x="2.0643%" y="245" width="0.0122%" height="15" fill="rgb(207,125,25)" fg:x="1019" fg:w="6"/><text x="2.3143%" y="255.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (7 samples, 0.01%)</title><rect x="2.0643%" y="261" width="0.0142%" height="15" fill="rgb(210,195,18)" fg:x="1019" fg:w="7"/><text x="2.3143%" y="271.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (6 samples, 0.01%)</title><rect x="2.0784%" y="261" width="0.0122%" height="15" fill="rgb(249,80,12)" fg:x="1026" fg:w="6"/><text x="2.3284%" y="271.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="2.0926%" y="229" width="0.0203%" height="15" fill="rgb(221,65,9)" fg:x="1033" fg:w="10"/><text x="2.3426%" y="239.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (7 samples, 0.01%)</title><rect x="2.1271%" y="213" width="0.0142%" height="15" fill="rgb(235,49,36)" fg:x="1050" fg:w="7"/><text x="2.3771%" y="223.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (7 samples, 0.01%)</title><rect x="2.1271%" y="197" width="0.0142%" height="15" fill="rgb(225,32,20)" fg:x="1050" fg:w="7"/><text x="2.3771%" y="207.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="2.1271%" y="181" width="0.0142%" height="15" fill="rgb(215,141,46)" fg:x="1050" fg:w="7"/><text x="2.3771%" y="191.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (17 samples, 0.03%)</title><rect x="2.1129%" y="229" width="0.0344%" height="15" fill="rgb(250,160,47)" fg:x="1043" fg:w="17"/><text x="2.3629%" y="239.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (31 samples, 0.06%)</title><rect x="2.0926%" y="261" width="0.0628%" height="15" fill="rgb(216,222,40)" fg:x="1033" fg:w="31"/><text x="2.3426%" y="271.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (31 samples, 0.06%)</title><rect x="2.0926%" y="245" width="0.0628%" height="15" fill="rgb(234,217,39)" fg:x="1033" fg:w="31"/><text x="2.3426%" y="255.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (56 samples, 0.11%)</title><rect x="2.0602%" y="277" width="0.1134%" height="15" fill="rgb(207,178,40)" fg:x="1017" fg:w="56"/><text x="2.3102%" y="287.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (88 samples, 0.18%)</title><rect x="2.0015%" y="309" width="0.1783%" height="15" fill="rgb(221,136,13)" fg:x="988" fg:w="88"/><text x="2.2515%" y="319.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (88 samples, 0.18%)</title><rect x="2.0015%" y="293" width="0.1783%" height="15" fill="rgb(249,199,10)" fg:x="988" fg:w="88"/><text x="2.2515%" y="303.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (121 samples, 0.25%)</title><rect x="1.9427%" y="325" width="0.2451%" height="15" fill="rgb(249,222,13)" fg:x="959" fg:w="121"/><text x="2.1927%" y="335.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (167 samples, 0.34%)</title><rect x="1.8536%" y="357" width="0.3383%" height="15" fill="rgb(244,185,38)" fg:x="915" fg:w="167"/><text x="2.1036%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (167 samples, 0.34%)</title><rect x="1.8536%" y="341" width="0.3383%" height="15" fill="rgb(236,202,9)" fg:x="915" fg:w="167"/><text x="2.1036%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (195 samples, 0.40%)</title><rect x="1.8029%" y="373" width="0.3950%" height="15" fill="rgb(250,229,37)" fg:x="890" fg:w="195"/><text x="2.0529%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (271 samples, 0.55%)</title><rect x="1.6571%" y="405" width="0.5490%" height="15" fill="rgb(206,174,23)" fg:x="818" fg:w="271"/><text x="1.9071%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (271 samples, 0.55%)</title><rect x="1.6571%" y="389" width="0.5490%" height="15" fill="rgb(211,33,43)" fg:x="818" fg:w="271"/><text x="1.9071%" y="399.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (323 samples, 0.65%)</title><rect x="1.5659%" y="421" width="0.6543%" height="15" fill="rgb(245,58,50)" fg:x="773" fg:w="323"/><text x="1.8159%" y="431.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (400 samples, 0.81%)</title><rect x="1.4140%" y="437" width="0.8103%" height="15" fill="rgb(244,68,36)" fg:x="698" fg:w="400"/><text x="1.6640%" y="447.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (23 samples, 0.05%)</title><rect x="2.2243%" y="421" width="0.0466%" height="15" fill="rgb(232,229,15)" fg:x="1098" fg:w="23"/><text x="2.4743%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_small (19 samples, 0.04%)</title><rect x="2.2830%" y="421" width="0.0385%" height="15" fill="rgb(254,30,23)" fg:x="1127" fg:w="19"/><text x="2.5330%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (8 samples, 0.02%)</title><rect x="2.3053%" y="405" width="0.0162%" height="15" fill="rgb(235,160,14)" fg:x="1138" fg:w="8"/><text x="2.5553%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (50 samples, 0.10%)</title><rect x="2.2243%" y="437" width="0.1013%" height="15" fill="rgb(212,155,44)" fg:x="1098" fg:w="50"/><text x="2.4743%" y="447.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (22 samples, 0.04%)</title><rect x="2.3296%" y="389" width="0.0446%" height="15" fill="rgb(226,2,50)" fg:x="1150" fg:w="22"/><text x="2.5796%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_small (11 samples, 0.02%)</title><rect x="2.3864%" y="389" width="0.0223%" height="15" fill="rgb(234,177,6)" fg:x="1178" fg:w="11"/><text x="2.6364%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (42 samples, 0.09%)</title><rect x="2.3256%" y="405" width="0.0851%" height="15" fill="rgb(217,24,9)" fg:x="1148" fg:w="42"/><text x="2.5756%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (12 samples, 0.02%)</title><rect x="2.4127%" y="357" width="0.0243%" height="15" fill="rgb(220,13,46)" fg:x="1191" fg:w="12"/><text x="2.6627%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_small (5 samples, 0.01%)</title><rect x="2.4492%" y="357" width="0.0101%" height="15" fill="rgb(239,221,27)" fg:x="1209" fg:w="5"/><text x="2.6992%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (26 samples, 0.05%)</title><rect x="2.4107%" y="373" width="0.0527%" height="15" fill="rgb(222,198,25)" fg:x="1190" fg:w="26"/><text x="2.6607%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (8 samples, 0.02%)</title><rect x="2.4633%" y="325" width="0.0162%" height="15" fill="rgb(211,99,13)" fg:x="1216" fg:w="8"/><text x="2.7133%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (13 samples, 0.03%)</title><rect x="2.4633%" y="341" width="0.0263%" height="15" fill="rgb(232,111,31)" fg:x="1216" fg:w="13"/><text x="2.7133%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (7 samples, 0.01%)</title><rect x="2.4917%" y="293" width="0.0142%" height="15" fill="rgb(245,82,37)" fg:x="1230" fg:w="7"/><text x="2.7417%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_small (5 samples, 0.01%)</title><rect x="2.5120%" y="293" width="0.0101%" height="15" fill="rgb(227,149,46)" fg:x="1240" fg:w="5"/><text x="2.7620%" y="303.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (20 samples, 0.04%)</title><rect x="2.4897%" y="309" width="0.0405%" height="15" fill="rgb(218,36,50)" fg:x="1229" fg:w="20"/><text x="2.7397%" y="319.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (5 samples, 0.01%)</title><rect x="2.5322%" y="293" width="0.0101%" height="15" fill="rgb(226,80,48)" fg:x="1250" fg:w="5"/><text x="2.7822%" y="303.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (12 samples, 0.02%)</title><rect x="2.5302%" y="309" width="0.0243%" height="15" fill="rgb(238,224,15)" fg:x="1249" fg:w="12"/><text x="2.7802%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (34 samples, 0.07%)</title><rect x="2.4897%" y="341" width="0.0689%" height="15" fill="rgb(241,136,10)" fg:x="1229" fg:w="34"/><text x="2.7397%" y="351.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (34 samples, 0.07%)</title><rect x="2.4897%" y="325" width="0.0689%" height="15" fill="rgb(208,32,45)" fg:x="1229" fg:w="34"/><text x="2.7397%" y="335.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (48 samples, 0.10%)</title><rect x="2.4633%" y="357" width="0.0972%" height="15" fill="rgb(207,135,9)" fg:x="1216" fg:w="48"/><text x="2.7133%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (52 samples, 0.11%)</title><rect x="2.4633%" y="373" width="0.1053%" height="15" fill="rgb(206,86,44)" fg:x="1216" fg:w="52"/><text x="2.7133%" y="383.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (80 samples, 0.16%)</title><rect x="2.4107%" y="389" width="0.1621%" height="15" fill="rgb(245,177,15)" fg:x="1190" fg:w="80"/><text x="2.6607%" y="399.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (126 samples, 0.26%)</title><rect x="2.3256%" y="421" width="0.2552%" height="15" fill="rgb(206,64,50)" fg:x="1148" fg:w="126"/><text x="2.5756%" y="431.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (84 samples, 0.17%)</title><rect x="2.4107%" y="405" width="0.1702%" height="15" fill="rgb(234,36,40)" fg:x="1190" fg:w="84"/><text x="2.6607%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (129 samples, 0.26%)</title><rect x="2.3256%" y="437" width="0.2613%" height="15" fill="rgb(213,64,8)" fg:x="1148" fg:w="129"/><text x="2.5756%" y="447.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::join_node::JoinNode::cardinality (613 samples, 1.24%)</title><rect x="1.3471%" y="453" width="1.2418%" height="15" fill="rgb(210,75,36)" fg:x="665" fg:w="613"/><text x="1.5971%" y="463.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (5 samples, 0.01%)</title><rect x="2.5930%" y="421" width="0.0101%" height="15" fill="rgb(229,88,21)" fg:x="1280" fg:w="5"/><text x="2.8430%" y="431.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (7 samples, 0.01%)</title><rect x="2.5910%" y="437" width="0.0142%" height="15" fill="rgb(252,204,47)" fg:x="1279" fg:w="7"/><text x="2.8410%" y="447.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::emit_csg_cmp (630 samples, 1.28%)</title><rect x="1.3309%" y="469" width="1.2762%" height="15" fill="rgb(208,77,27)" fg:x="657" fg:w="630"/><text x="1.5809%" y="479.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (9 samples, 0.02%)</title><rect x="2.5889%" y="453" width="0.0182%" height="15" fill="rgb(221,76,26)" fg:x="1278" fg:w="9"/><text x="2.8389%" y="463.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="2.6112%" y="389" width="0.0142%" height="15" fill="rgb(225,139,18)" fg:x="1289" fg:w="7"/><text x="2.8612%" y="399.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="2.6112%" y="421" width="0.0182%" height="15" fill="rgb(230,137,11)" fg:x="1289" fg:w="9"/><text x="2.8612%" y="431.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="2.6112%" y="405" width="0.0182%" height="15" fill="rgb(212,28,1)" fg:x="1289" fg:w="9"/><text x="2.8612%" y="415.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="2.6072%" y="437" width="0.0243%" height="15" fill="rgb(248,164,17)" fg:x="1287" fg:w="12"/><text x="2.8572%" y="447.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="2.6639%" y="341" width="0.0101%" height="15" fill="rgb(222,171,42)" fg:x="1315" fg:w="5"/><text x="2.9139%" y="351.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="2.6781%" y="293" width="0.0142%" height="15" fill="rgb(243,84,45)" fg:x="1322" fg:w="7"/><text x="2.9281%" y="303.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (15 samples, 0.03%)</title><rect x="2.6639%" y="357" width="0.0304%" height="15" fill="rgb(252,49,23)" fg:x="1315" fg:w="15"/><text x="2.9139%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (10 samples, 0.02%)</title><rect x="2.6740%" y="341" width="0.0203%" height="15" fill="rgb(215,19,7)" fg:x="1320" fg:w="10"/><text x="2.9240%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="2.6740%" y="325" width="0.0203%" height="15" fill="rgb(238,81,41)" fg:x="1320" fg:w="10"/><text x="2.9240%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="2.6740%" y="309" width="0.0203%" height="15" fill="rgb(210,199,37)" fg:x="1320" fg:w="10"/><text x="2.9240%" y="319.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (22 samples, 0.04%)</title><rect x="2.6538%" y="373" width="0.0446%" height="15" fill="rgb(244,192,49)" fg:x="1310" fg:w="22"/><text x="2.9038%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (27 samples, 0.05%)</title><rect x="2.6457%" y="389" width="0.0547%" height="15" fill="rgb(226,211,11)" fg:x="1306" fg:w="27"/><text x="2.8957%" y="399.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (32 samples, 0.06%)</title><rect x="2.6375%" y="405" width="0.0648%" height="15" fill="rgb(236,162,54)" fg:x="1302" fg:w="32"/><text x="2.8875%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (35 samples, 0.07%)</title><rect x="2.6355%" y="421" width="0.0709%" height="15" fill="rgb(220,229,9)" fg:x="1301" fg:w="35"/><text x="2.8855%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.01%)</title><rect x="2.8705%" y="373" width="0.0122%" height="15" fill="rgb(250,87,22)" fg:x="1417" fg:w="6"/><text x="3.1205%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (9 samples, 0.02%)</title><rect x="2.8867%" y="357" width="0.0182%" height="15" fill="rgb(239,43,17)" fg:x="1425" fg:w="9"/><text x="3.1367%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (9 samples, 0.02%)</title><rect x="2.8867%" y="341" width="0.0182%" height="15" fill="rgb(231,177,25)" fg:x="1425" fg:w="9"/><text x="3.1367%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (22 samples, 0.04%)</title><rect x="2.8665%" y="389" width="0.0446%" height="15" fill="rgb(219,179,1)" fg:x="1415" fg:w="22"/><text x="3.1165%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.03%)</title><rect x="2.8847%" y="373" width="0.0263%" height="15" fill="rgb(238,219,53)" fg:x="1424" fg:w="13"/><text x="3.1347%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (104 samples, 0.21%)</title><rect x="2.7064%" y="405" width="0.2107%" height="15" fill="rgb(232,167,36)" fg:x="1336" fg:w="104"/><text x="2.9564%" y="415.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.02%)</title><rect x="2.9252%" y="373" width="0.0182%" height="15" fill="rgb(244,19,51)" fg:x="1444" fg:w="9"/><text x="3.1752%" y="383.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (17 samples, 0.03%)</title><rect x="2.9191%" y="389" width="0.0344%" height="15" fill="rgb(224,6,22)" fg:x="1441" fg:w="17"/><text x="3.1691%" y="399.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="2.9434%" y="373" width="0.0101%" height="15" fill="rgb(224,145,5)" fg:x="1453" fg:w="5"/><text x="3.1934%" y="383.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (15 samples, 0.03%)</title><rect x="2.9556%" y="373" width="0.0304%" height="15" fill="rgb(234,130,49)" fg:x="1459" fg:w="15"/><text x="3.2056%" y="383.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (20 samples, 0.04%)</title><rect x="2.9536%" y="389" width="0.0405%" height="15" fill="rgb(254,6,2)" fg:x="1458" fg:w="20"/><text x="3.2036%" y="399.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.02%)</title><rect x="2.9941%" y="389" width="0.0162%" height="15" fill="rgb(208,96,46)" fg:x="1478" fg:w="8"/><text x="3.2441%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (15 samples, 0.03%)</title><rect x="3.1217%" y="341" width="0.0304%" height="15" fill="rgb(239,3,39)" fg:x="1541" fg:w="15"/><text x="3.3717%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="3.1298%" y="325" width="0.0223%" height="15" fill="rgb(233,210,1)" fg:x="1545" fg:w="11"/><text x="3.3798%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (11 samples, 0.02%)</title><rect x="3.1298%" y="309" width="0.0223%" height="15" fill="rgb(244,137,37)" fg:x="1545" fg:w="11"/><text x="3.3798%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (11 samples, 0.02%)</title><rect x="3.1298%" y="293" width="0.0223%" height="15" fill="rgb(240,136,2)" fg:x="1545" fg:w="11"/><text x="3.3798%" y="303.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (70 samples, 0.14%)</title><rect x="3.0123%" y="357" width="0.1418%" height="15" fill="rgb(239,18,37)" fg:x="1487" fg:w="70"/><text x="3.2623%" y="367.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (14 samples, 0.03%)</title><rect x="3.1663%" y="325" width="0.0284%" height="15" fill="rgb(218,185,22)" fg:x="1563" fg:w="14"/><text x="3.4163%" y="335.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="3.1845%" y="309" width="0.0101%" height="15" fill="rgb(225,218,4)" fg:x="1572" fg:w="5"/><text x="3.4345%" y="319.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (20 samples, 0.04%)</title><rect x="3.1602%" y="341" width="0.0405%" height="15" fill="rgb(230,182,32)" fg:x="1560" fg:w="20"/><text x="3.4102%" y="351.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (14 samples, 0.03%)</title><rect x="3.2027%" y="325" width="0.0284%" height="15" fill="rgb(242,56,43)" fg:x="1581" fg:w="14"/><text x="3.4527%" y="335.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.01%)</title><rect x="3.2169%" y="309" width="0.0142%" height="15" fill="rgb(233,99,24)" fg:x="1588" fg:w="7"/><text x="3.4669%" y="319.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (16 samples, 0.03%)</title><rect x="3.2007%" y="341" width="0.0324%" height="15" fill="rgb(234,209,42)" fg:x="1580" fg:w="16"/><text x="3.4507%" y="351.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (14 samples, 0.03%)</title><rect x="3.2331%" y="341" width="0.0284%" height="15" fill="rgb(227,7,12)" fg:x="1596" fg:w="14"/><text x="3.4831%" y="351.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (12 samples, 0.02%)</title><rect x="3.2372%" y="325" width="0.0243%" height="15" fill="rgb(245,203,43)" fg:x="1598" fg:w="12"/><text x="3.4872%" y="335.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="3.2514%" y="309" width="0.0101%" height="15" fill="rgb(238,205,33)" fg:x="1605" fg:w="5"/><text x="3.5014%" y="319.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.02%)</title><rect x="3.3567%" y="293" width="0.0162%" height="15" fill="rgb(231,56,7)" fg:x="1657" fg:w="8"/><text x="3.6067%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.01%)</title><rect x="3.3749%" y="277" width="0.0101%" height="15" fill="rgb(244,186,29)" fg:x="1666" fg:w="5"/><text x="3.6249%" y="287.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (65 samples, 0.13%)</title><rect x="3.2655%" y="309" width="0.1317%" height="15" fill="rgb(234,111,31)" fg:x="1612" fg:w="65"/><text x="3.5155%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (12 samples, 0.02%)</title><rect x="3.3729%" y="293" width="0.0243%" height="15" fill="rgb(241,149,10)" fg:x="1665" fg:w="12"/><text x="3.6229%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="3.3851%" y="277" width="0.0122%" height="15" fill="rgb(249,206,44)" fg:x="1671" fg:w="6"/><text x="3.6351%" y="287.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (6 samples, 0.01%)</title><rect x="3.4013%" y="293" width="0.0122%" height="15" fill="rgb(251,153,30)" fg:x="1679" fg:w="6"/><text x="3.6513%" y="303.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="3.4033%" y="277" width="0.0101%" height="15" fill="rgb(239,152,38)" fg:x="1680" fg:w="5"/><text x="3.6533%" y="287.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (5 samples, 0.01%)</title><rect x="3.4134%" y="293" width="0.0101%" height="15" fill="rgb(249,139,47)" fg:x="1685" fg:w="5"/><text x="3.6634%" y="303.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="3.4134%" y="277" width="0.0101%" height="15" fill="rgb(244,64,35)" fg:x="1685" fg:w="5"/><text x="3.6634%" y="287.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="3.4235%" y="293" width="0.0122%" height="15" fill="rgb(216,46,15)" fg:x="1690" fg:w="6"/><text x="3.6735%" y="303.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (30 samples, 0.06%)</title><rect x="3.4377%" y="261" width="0.0608%" height="15" fill="rgb(250,74,19)" fg:x="1697" fg:w="30"/><text x="3.6877%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.02%)</title><rect x="3.4823%" y="245" width="0.0162%" height="15" fill="rgb(249,42,33)" fg:x="1719" fg:w="8"/><text x="3.7323%" y="255.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (8 samples, 0.02%)</title><rect x="3.5026%" y="245" width="0.0162%" height="15" fill="rgb(242,149,17)" fg:x="1729" fg:w="8"/><text x="3.7526%" y="255.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (9 samples, 0.02%)</title><rect x="3.5188%" y="245" width="0.0182%" height="15" fill="rgb(244,29,21)" fg:x="1737" fg:w="9"/><text x="3.7688%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="3.6119%" y="197" width="0.0142%" height="15" fill="rgb(220,130,37)" fg:x="1783" fg:w="7"/><text x="3.8619%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="3.6160%" y="181" width="0.0101%" height="15" fill="rgb(211,67,2)" fg:x="1785" fg:w="5"/><text x="3.8660%" y="191.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (41 samples, 0.08%)</title><rect x="3.5451%" y="213" width="0.0831%" height="15" fill="rgb(235,68,52)" fg:x="1750" fg:w="41"/><text x="3.7951%" y="223.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (6 samples, 0.01%)</title><rect x="3.6302%" y="197" width="0.0122%" height="15" fill="rgb(246,142,3)" fg:x="1792" fg:w="6"/><text x="3.8802%" y="207.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (6 samples, 0.01%)</title><rect x="3.6423%" y="197" width="0.0122%" height="15" fill="rgb(241,25,7)" fg:x="1798" fg:w="6"/><text x="3.8923%" y="207.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (30 samples, 0.06%)</title><rect x="3.6585%" y="165" width="0.0608%" height="15" fill="rgb(242,119,39)" fg:x="1806" fg:w="30"/><text x="3.9085%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="3.7092%" y="149" width="0.0101%" height="15" fill="rgb(241,98,45)" fg:x="1831" fg:w="5"/><text x="3.9592%" y="159.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (33 samples, 0.07%)</title><rect x="3.6585%" y="197" width="0.0669%" height="15" fill="rgb(254,28,30)" fg:x="1806" fg:w="33"/><text x="3.9085%" y="207.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (33 samples, 0.07%)</title><rect x="3.6585%" y="181" width="0.0669%" height="15" fill="rgb(241,142,54)" fg:x="1806" fg:w="33"/><text x="3.9085%" y="191.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (59 samples, 0.12%)</title><rect x="3.6282%" y="213" width="0.1195%" height="15" fill="rgb(222,85,15)" fg:x="1791" fg:w="59"/><text x="3.8782%" y="223.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (104 samples, 0.21%)</title><rect x="3.5451%" y="245" width="0.2107%" height="15" fill="rgb(210,85,47)" fg:x="1750" fg:w="104"/><text x="3.7951%" y="255.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (104 samples, 0.21%)</title><rect x="3.5451%" y="229" width="0.2107%" height="15" fill="rgb(224,206,25)" fg:x="1750" fg:w="104"/><text x="3.7951%" y="239.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (141 samples, 0.29%)</title><rect x="3.4985%" y="261" width="0.2856%" height="15" fill="rgb(243,201,19)" fg:x="1727" fg:w="141"/><text x="3.7485%" y="271.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (178 samples, 0.36%)</title><rect x="3.4357%" y="293" width="0.3606%" height="15" fill="rgb(236,59,4)" fg:x="1696" fg:w="178"/><text x="3.6857%" y="303.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (178 samples, 0.36%)</title><rect x="3.4357%" y="277" width="0.3606%" height="15" fill="rgb(254,179,45)" fg:x="1696" fg:w="178"/><text x="3.6857%" y="287.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (5 samples, 0.01%)</title><rect x="3.7983%" y="293" width="0.0101%" height="15" fill="rgb(226,14,10)" fg:x="1875" fg:w="5"/><text x="4.0483%" y="303.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="3.7983%" y="277" width="0.0101%" height="15" fill="rgb(244,27,41)" fg:x="1875" fg:w="5"/><text x="4.0483%" y="287.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (208 samples, 0.42%)</title><rect x="3.3972%" y="309" width="0.4214%" height="15" fill="rgb(235,35,32)" fg:x="1677" fg:w="208"/><text x="3.6472%" y="319.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (279 samples, 0.57%)</title><rect x="3.2615%" y="341" width="0.5652%" height="15" fill="rgb(218,68,31)" fg:x="1610" fg:w="279"/><text x="3.5115%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (279 samples, 0.57%)</title><rect x="3.2615%" y="325" width="0.5652%" height="15" fill="rgb(207,120,37)" fg:x="1610" fg:w="279"/><text x="3.5115%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (340 samples, 0.69%)</title><rect x="3.1541%" y="357" width="0.6888%" height="15" fill="rgb(227,98,0)" fg:x="1557" fg:w="340"/><text x="3.4041%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (417 samples, 0.84%)</title><rect x="3.0123%" y="389" width="0.8447%" height="15" fill="rgb(207,7,3)" fg:x="1487" fg:w="417"/><text x="3.2623%" y="399.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (417 samples, 0.84%)</title><rect x="3.0123%" y="373" width="0.8447%" height="15" fill="rgb(206,98,19)" fg:x="1487" fg:w="417"/><text x="3.2623%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (472 samples, 0.96%)</title><rect x="2.9171%" y="405" width="0.9562%" height="15" fill="rgb(217,5,26)" fg:x="1440" fg:w="472"/><text x="3.1671%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (583 samples, 1.18%)</title><rect x="2.7064%" y="421" width="1.1810%" height="15" fill="rgb(235,190,38)" fg:x="1336" fg:w="583"/><text x="2.9564%" y="431.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (42 samples, 0.09%)</title><rect x="3.8996%" y="405" width="0.0851%" height="15" fill="rgb(247,86,24)" fg:x="1925" fg:w="42"/><text x="4.1496%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_small (12 samples, 0.02%)</title><rect x="4.0009%" y="405" width="0.0243%" height="15" fill="rgb(205,101,16)" fg:x="1975" fg:w="12"/><text x="4.2509%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (5 samples, 0.01%)</title><rect x="4.0151%" y="389" width="0.0101%" height="15" fill="rgb(246,168,33)" fg:x="1982" fg:w="5"/><text x="4.2651%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (70 samples, 0.14%)</title><rect x="3.8895%" y="421" width="0.1418%" height="15" fill="rgb(231,114,1)" fg:x="1920" fg:w="70"/><text x="4.1395%" y="431.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (18 samples, 0.04%)</title><rect x="4.0374%" y="373" width="0.0365%" height="15" fill="rgb(207,184,53)" fg:x="1993" fg:w="18"/><text x="4.2874%" y="383.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (9 samples, 0.02%)</title><rect x="4.0738%" y="373" width="0.0182%" height="15" fill="rgb(224,95,51)" fg:x="2011" fg:w="9"/><text x="4.3238%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_small (9 samples, 0.02%)</title><rect x="4.0981%" y="373" width="0.0182%" height="15" fill="rgb(212,188,45)" fg:x="2023" fg:w="9"/><text x="4.3481%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (45 samples, 0.09%)</title><rect x="4.0333%" y="389" width="0.0912%" height="15" fill="rgb(223,154,38)" fg:x="1991" fg:w="45"/><text x="4.2833%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (25 samples, 0.05%)</title><rect x="4.1245%" y="341" width="0.0506%" height="15" fill="rgb(251,22,52)" fg:x="2036" fg:w="25"/><text x="4.3745%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="4.1771%" y="341" width="0.0101%" height="15" fill="rgb(229,209,22)" fg:x="2062" fg:w="5"/><text x="4.4271%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_small (11 samples, 0.02%)</title><rect x="4.1873%" y="341" width="0.0223%" height="15" fill="rgb(234,138,34)" fg:x="2067" fg:w="11"/><text x="4.4373%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (6 samples, 0.01%)</title><rect x="4.1974%" y="325" width="0.0122%" height="15" fill="rgb(212,95,11)" fg:x="2072" fg:w="6"/><text x="4.4474%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (43 samples, 0.09%)</title><rect x="4.1245%" y="357" width="0.0871%" height="15" fill="rgb(240,179,47)" fg:x="2036" fg:w="43"/><text x="4.3745%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (8 samples, 0.02%)</title><rect x="4.2136%" y="309" width="0.0162%" height="15" fill="rgb(240,163,11)" fg:x="2080" fg:w="8"/><text x="4.4636%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (17 samples, 0.03%)</title><rect x="4.2116%" y="325" width="0.0344%" height="15" fill="rgb(236,37,12)" fg:x="2079" fg:w="17"/><text x="4.4616%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (14 samples, 0.03%)</title><rect x="4.2480%" y="277" width="0.0284%" height="15" fill="rgb(232,164,16)" fg:x="2097" fg:w="14"/><text x="4.4980%" y="287.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (20 samples, 0.04%)</title><rect x="4.2460%" y="293" width="0.0405%" height="15" fill="rgb(244,205,15)" fg:x="2096" fg:w="20"/><text x="4.4960%" y="303.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (5 samples, 0.01%)</title><rect x="4.2886%" y="245" width="0.0101%" height="15" fill="rgb(223,117,47)" fg:x="2117" fg:w="5"/><text x="4.5386%" y="255.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (14 samples, 0.03%)</title><rect x="4.2886%" y="261" width="0.0284%" height="15" fill="rgb(244,107,35)" fg:x="2117" fg:w="14"/><text x="4.5386%" y="271.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (9 samples, 0.02%)</title><rect x="4.3169%" y="261" width="0.0182%" height="15" fill="rgb(205,140,8)" fg:x="2131" fg:w="9"/><text x="4.5669%" y="271.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (7 samples, 0.01%)</title><rect x="4.3210%" y="245" width="0.0142%" height="15" fill="rgb(228,84,46)" fg:x="2133" fg:w="7"/><text x="4.5710%" y="255.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (26 samples, 0.05%)</title><rect x="4.2865%" y="277" width="0.0527%" height="15" fill="rgb(254,188,9)" fg:x="2116" fg:w="26"/><text x="4.5365%" y="287.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (33 samples, 0.07%)</title><rect x="4.2865%" y="293" width="0.0669%" height="15" fill="rgb(206,112,54)" fg:x="2116" fg:w="33"/><text x="4.5365%" y="303.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (58 samples, 0.12%)</title><rect x="4.2460%" y="309" width="0.1175%" height="15" fill="rgb(216,84,49)" fg:x="2096" fg:w="58"/><text x="4.4960%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (62 samples, 0.13%)</title><rect x="4.2460%" y="325" width="0.1256%" height="15" fill="rgb(214,194,35)" fg:x="2096" fg:w="62"/><text x="4.4960%" y="335.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (80 samples, 0.16%)</title><rect x="4.2116%" y="341" width="0.1621%" height="15" fill="rgb(249,28,3)" fg:x="2079" fg:w="80"/><text x="4.4616%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (85 samples, 0.17%)</title><rect x="4.2116%" y="357" width="0.1722%" height="15" fill="rgb(222,56,52)" fg:x="2079" fg:w="85"/><text x="4.4616%" y="367.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (134 samples, 0.27%)</title><rect x="4.1245%" y="373" width="0.2715%" height="15" fill="rgb(245,217,50)" fg:x="2036" fg:w="134"/><text x="4.3745%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (139 samples, 0.28%)</title><rect x="4.1245%" y="389" width="0.2816%" height="15" fill="rgb(213,201,24)" fg:x="2036" fg:w="139"/><text x="4.3745%" y="399.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (189 samples, 0.38%)</title><rect x="4.0313%" y="405" width="0.3829%" height="15" fill="rgb(248,116,28)" fg:x="1990" fg:w="189"/><text x="4.2813%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (191 samples, 0.39%)</title><rect x="4.0313%" y="421" width="0.3869%" height="15" fill="rgb(219,72,43)" fg:x="1990" fg:w="191"/><text x="4.2813%" y="431.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::join_node::JoinNode::cardinality (885 samples, 1.79%)</title><rect x="2.6315%" y="437" width="1.7928%" height="15" fill="rgb(209,138,14)" fg:x="1299" fg:w="885"/><text x="2.8815%" y="447.50">d..</text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (7 samples, 0.01%)</title><rect x="4.4304%" y="389" width="0.0142%" height="15" fill="rgb(222,18,33)" fg:x="2187" fg:w="7"/><text x="4.6804%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (8 samples, 0.02%)</title><rect x="4.4304%" y="405" width="0.0162%" height="15" fill="rgb(213,199,7)" fg:x="2187" fg:w="8"/><text x="4.6804%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (9 samples, 0.02%)</title><rect x="4.4304%" y="421" width="0.0182%" height="15" fill="rgb(250,110,10)" fg:x="2187" fg:w="9"/><text x="4.6804%" y="431.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::emit_csg_cmp (911 samples, 1.85%)</title><rect x="2.6072%" y="453" width="1.8455%" height="15" fill="rgb(248,123,6)" fg:x="1287" fg:w="911"/><text x="2.8572%" y="463.50">d..</text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (12 samples, 0.02%)</title><rect x="4.4283%" y="437" width="0.0243%" height="15" fill="rgb(206,91,31)" fg:x="2186" fg:w="12"/><text x="4.6783%" y="447.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (919 samples, 1.86%)</title><rect x="2.6072%" y="469" width="1.8617%" height="15" fill="rgb(211,154,13)" fg:x="1287" fg:w="919"/><text x="2.8572%" y="479.50">d..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (1,554 samples, 3.15%)</title><rect x="1.3309%" y="485" width="3.1480%" height="15" fill="rgb(225,148,7)" fg:x="657" fg:w="1554"/><text x="1.5809%" y="495.50">dat..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::emit_csg (1,906 samples, 3.86%)</title><rect x="0.6260%" y="581" width="3.8611%" height="15" fill="rgb(220,160,43)" fg:x="309" fg:w="1906"/><text x="0.8760%" y="591.50">data..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (1,906 samples, 3.86%)</title><rect x="0.6260%" y="565" width="3.8611%" height="15" fill="rgb(213,52,39)" fg:x="309" fg:w="1906"/><text x="0.8760%" y="575.50">data..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (1,906 samples, 3.86%)</title><rect x="0.6260%" y="549" width="3.8611%" height="15" fill="rgb(243,137,7)" fg:x="309" fg:w="1906"/><text x="0.8760%" y="559.50">data..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (1,904 samples, 3.86%)</title><rect x="0.6300%" y="533" width="3.8571%" height="15" fill="rgb(230,79,13)" fg:x="311" fg:w="1904"/><text x="0.8800%" y="543.50">data..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (1,888 samples, 3.82%)</title><rect x="0.6624%" y="517" width="3.8246%" height="15" fill="rgb(247,105,23)" fg:x="327" fg:w="1888"/><text x="0.9124%" y="527.50">data..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (1,824 samples, 3.70%)</title><rect x="0.7921%" y="501" width="3.6950%" height="15" fill="rgb(223,179,41)" fg:x="391" fg:w="1824"/><text x="1.0421%" y="511.50">data..</text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (6 samples, 0.01%)</title><rect x="4.5073%" y="469" width="0.0122%" height="15" fill="rgb(218,9,34)" fg:x="2225" fg:w="6"/><text x="4.7573%" y="479.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (11 samples, 0.02%)</title><rect x="4.4992%" y="485" width="0.0223%" height="15" fill="rgb(222,106,8)" fg:x="2221" fg:w="11"/><text x="4.7492%" y="495.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::emit_csg_cmp (17 samples, 0.03%)</title><rect x="4.4972%" y="517" width="0.0344%" height="15" fill="rgb(211,220,0)" fg:x="2220" fg:w="17"/><text x="4.7472%" y="527.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::join_node::JoinNode::cardinality (17 samples, 0.03%)</title><rect x="4.4972%" y="501" width="0.0344%" height="15" fill="rgb(229,52,16)" fg:x="2220" fg:w="17"/><text x="4.7472%" y="511.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (16 samples, 0.03%)</title><rect x="4.5418%" y="453" width="0.0324%" height="15" fill="rgb(212,155,18)" fg:x="2242" fg:w="16"/><text x="4.7918%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="4.5620%" y="437" width="0.0122%" height="15" fill="rgb(242,21,14)" fg:x="2252" fg:w="6"/><text x="4.8120%" y="447.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (5 samples, 0.01%)</title><rect x="4.5742%" y="437" width="0.0101%" height="15" fill="rgb(222,19,48)" fg:x="2258" fg:w="5"/><text x="4.8242%" y="447.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="4.5944%" y="405" width="0.0223%" height="15" fill="rgb(232,45,27)" fg:x="2268" fg:w="11"/><text x="4.8444%" y="415.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (7 samples, 0.01%)</title><rect x="4.6167%" y="405" width="0.0142%" height="15" fill="rgb(249,103,42)" fg:x="2279" fg:w="7"/><text x="4.8667%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (19 samples, 0.04%)</title><rect x="4.5944%" y="437" width="0.0385%" height="15" fill="rgb(246,81,33)" fg:x="2268" fg:w="19"/><text x="4.8444%" y="447.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (19 samples, 0.04%)</title><rect x="4.5944%" y="421" width="0.0385%" height="15" fill="rgb(252,33,42)" fg:x="2268" fg:w="19"/><text x="4.8444%" y="431.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (49 samples, 0.10%)</title><rect x="4.5418%" y="469" width="0.0993%" height="15" fill="rgb(209,212,41)" fg:x="2242" fg:w="49"/><text x="4.7918%" y="479.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (33 samples, 0.07%)</title><rect x="4.5742%" y="453" width="0.0669%" height="15" fill="rgb(207,154,6)" fg:x="2258" fg:w="33"/><text x="4.8242%" y="463.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (6 samples, 0.01%)</title><rect x="4.6410%" y="469" width="0.0122%" height="15" fill="rgb(223,64,47)" fg:x="2291" fg:w="6"/><text x="4.8910%" y="479.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (8 samples, 0.02%)</title><rect x="4.6613%" y="421" width="0.0162%" height="15" fill="rgb(211,161,38)" fg:x="2301" fg:w="8"/><text x="4.9113%" y="431.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (6 samples, 0.01%)</title><rect x="4.6653%" y="405" width="0.0122%" height="15" fill="rgb(219,138,40)" fg:x="2303" fg:w="6"/><text x="4.9153%" y="415.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (15 samples, 0.03%)</title><rect x="4.6532%" y="453" width="0.0304%" height="15" fill="rgb(241,228,46)" fg:x="2297" fg:w="15"/><text x="4.9032%" y="463.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (11 samples, 0.02%)</title><rect x="4.6613%" y="437" width="0.0223%" height="15" fill="rgb(223,209,38)" fg:x="2301" fg:w="11"/><text x="4.9113%" y="447.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::join_node::JoinNode::cardinality (75 samples, 0.15%)</title><rect x="4.5337%" y="485" width="0.1519%" height="15" fill="rgb(236,164,45)" fg:x="2238" fg:w="75"/><text x="4.7837%" y="495.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (16 samples, 0.03%)</title><rect x="4.6532%" y="469" width="0.0324%" height="15" fill="rgb(231,15,5)" fg:x="2297" fg:w="16"/><text x="4.9032%" y="479.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::emit_csg_cmp (77 samples, 0.16%)</title><rect x="4.5316%" y="501" width="0.1560%" height="15" fill="rgb(252,35,15)" fg:x="2237" fg:w="77"/><text x="4.7816%" y="511.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="4.6897%" y="453" width="0.0101%" height="15" fill="rgb(248,181,18)" fg:x="2315" fg:w="5"/><text x="4.9397%" y="463.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="4.6897%" y="469" width="0.0122%" height="15" fill="rgb(233,39,42)" fg:x="2315" fg:w="6"/><text x="4.9397%" y="479.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="4.7018%" y="421" width="0.0223%" height="15" fill="rgb(238,110,33)" fg:x="2321" fg:w="11"/><text x="4.9518%" y="431.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="4.7079%" y="405" width="0.0162%" height="15" fill="rgb(233,195,10)" fg:x="2324" fg:w="8"/><text x="4.9579%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (19 samples, 0.04%)</title><rect x="4.7018%" y="437" width="0.0385%" height="15" fill="rgb(254,105,3)" fg:x="2321" fg:w="19"/><text x="4.9518%" y="447.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (7 samples, 0.01%)</title><rect x="4.7261%" y="421" width="0.0142%" height="15" fill="rgb(221,225,9)" fg:x="2333" fg:w="7"/><text x="4.9761%" y="431.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (5 samples, 0.01%)</title><rect x="4.7302%" y="405" width="0.0101%" height="15" fill="rgb(224,227,45)" fg:x="2335" fg:w="5"/><text x="4.9802%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (20 samples, 0.04%)</title><rect x="4.7018%" y="453" width="0.0405%" height="15" fill="rgb(229,198,43)" fg:x="2321" fg:w="20"/><text x="4.9518%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (5 samples, 0.01%)</title><rect x="4.8699%" y="389" width="0.0101%" height="15" fill="rgb(206,209,35)" fg:x="2404" fg:w="5"/><text x="5.1199%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (5 samples, 0.01%)</title><rect x="4.8699%" y="373" width="0.0101%" height="15" fill="rgb(245,195,53)" fg:x="2404" fg:w="5"/><text x="5.1199%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.02%)</title><rect x="4.8639%" y="421" width="0.0182%" height="15" fill="rgb(240,92,26)" fg:x="2401" fg:w="9"/><text x="5.1139%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="4.8699%" y="405" width="0.0122%" height="15" fill="rgb(207,40,23)" fg:x="2404" fg:w="6"/><text x="5.1199%" y="415.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (71 samples, 0.14%)</title><rect x="4.7423%" y="437" width="0.1438%" height="15" fill="rgb(223,111,35)" fg:x="2341" fg:w="71"/><text x="4.9923%" y="447.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (12 samples, 0.02%)</title><rect x="4.8882%" y="405" width="0.0243%" height="15" fill="rgb(229,147,28)" fg:x="2413" fg:w="12"/><text x="5.1382%" y="415.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (18 samples, 0.04%)</title><rect x="4.8862%" y="421" width="0.0365%" height="15" fill="rgb(211,29,28)" fg:x="2412" fg:w="18"/><text x="5.1362%" y="431.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="4.9125%" y="405" width="0.0101%" height="15" fill="rgb(228,72,33)" fg:x="2425" fg:w="5"/><text x="5.1625%" y="415.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.01%)</title><rect x="4.9246%" y="405" width="0.0122%" height="15" fill="rgb(205,214,31)" fg:x="2431" fg:w="6"/><text x="5.1746%" y="415.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (10 samples, 0.02%)</title><rect x="4.9226%" y="421" width="0.0203%" height="15" fill="rgb(224,111,15)" fg:x="2430" fg:w="10"/><text x="5.1726%" y="431.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="4.9490%" y="389" width="0.0101%" height="15" fill="rgb(253,21,26)" fg:x="2443" fg:w="5"/><text x="5.1990%" y="399.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.02%)</title><rect x="4.9429%" y="421" width="0.0182%" height="15" fill="rgb(245,139,43)" fg:x="2440" fg:w="9"/><text x="5.1929%" y="431.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.01%)</title><rect x="4.9469%" y="405" width="0.0142%" height="15" fill="rgb(252,170,7)" fg:x="2442" fg:w="7"/><text x="5.1969%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (11 samples, 0.02%)</title><rect x="5.0442%" y="341" width="0.0223%" height="15" fill="rgb(231,118,14)" fg:x="2490" fg:w="11"/><text x="5.2942%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (10 samples, 0.02%)</title><rect x="5.0462%" y="325" width="0.0203%" height="15" fill="rgb(238,83,0)" fg:x="2491" fg:w="10"/><text x="5.2962%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (7 samples, 0.01%)</title><rect x="5.0523%" y="309" width="0.0142%" height="15" fill="rgb(221,39,39)" fg:x="2494" fg:w="7"/><text x="5.3023%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (15 samples, 0.03%)</title><rect x="5.0381%" y="373" width="0.0304%" height="15" fill="rgb(222,119,46)" fg:x="2487" fg:w="15"/><text x="5.2881%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.02%)</title><rect x="5.0442%" y="357" width="0.0243%" height="15" fill="rgb(222,165,49)" fg:x="2490" fg:w="12"/><text x="5.2942%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (55 samples, 0.11%)</title><rect x="4.9611%" y="389" width="0.1114%" height="15" fill="rgb(219,113,52)" fg:x="2449" fg:w="55"/><text x="5.2111%" y="399.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (5 samples, 0.01%)</title><rect x="5.0745%" y="373" width="0.0101%" height="15" fill="rgb(214,7,15)" fg:x="2505" fg:w="5"/><text x="5.3245%" y="383.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="5.0908%" y="357" width="0.0101%" height="15" fill="rgb(235,32,4)" fg:x="2513" fg:w="5"/><text x="5.3408%" y="367.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.01%)</title><rect x="5.0887%" y="373" width="0.0142%" height="15" fill="rgb(238,90,54)" fg:x="2512" fg:w="7"/><text x="5.3387%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="5.1333%" y="325" width="0.0142%" height="15" fill="rgb(213,208,19)" fg:x="2534" fg:w="7"/><text x="5.3833%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (22 samples, 0.04%)</title><rect x="5.1049%" y="341" width="0.0446%" height="15" fill="rgb(233,156,4)" fg:x="2520" fg:w="22"/><text x="5.3549%" y="351.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (5 samples, 0.01%)</title><rect x="5.1536%" y="325" width="0.0101%" height="15" fill="rgb(207,194,5)" fg:x="2544" fg:w="5"/><text x="5.4036%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="5.2022%" y="277" width="0.0101%" height="15" fill="rgb(206,111,30)" fg:x="2568" fg:w="5"/><text x="5.4522%" y="287.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (17 samples, 0.03%)</title><rect x="5.1799%" y="293" width="0.0344%" height="15" fill="rgb(243,70,54)" fg:x="2557" fg:w="17"/><text x="5.4299%" y="303.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (7 samples, 0.01%)</title><rect x="5.2143%" y="293" width="0.0142%" height="15" fill="rgb(242,28,8)" fg:x="2574" fg:w="7"/><text x="5.4643%" y="303.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (27 samples, 0.05%)</title><rect x="5.1779%" y="325" width="0.0547%" height="15" fill="rgb(219,106,18)" fg:x="2556" fg:w="27"/><text x="5.4279%" y="335.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (27 samples, 0.05%)</title><rect x="5.1779%" y="309" width="0.0547%" height="15" fill="rgb(244,222,10)" fg:x="2556" fg:w="27"/><text x="5.4279%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (42 samples, 0.09%)</title><rect x="5.1495%" y="341" width="0.0851%" height="15" fill="rgb(236,179,52)" fg:x="2542" fg:w="42"/><text x="5.3995%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (69 samples, 0.14%)</title><rect x="5.1029%" y="373" width="0.1398%" height="15" fill="rgb(213,23,39)" fg:x="2519" fg:w="69"/><text x="5.3529%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (69 samples, 0.14%)</title><rect x="5.1029%" y="357" width="0.1398%" height="15" fill="rgb(238,48,10)" fg:x="2519" fg:w="69"/><text x="5.3529%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (88 samples, 0.18%)</title><rect x="5.0725%" y="389" width="0.1783%" height="15" fill="rgb(251,196,23)" fg:x="2504" fg:w="88"/><text x="5.3225%" y="399.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (145 samples, 0.29%)</title><rect x="4.9611%" y="421" width="0.2937%" height="15" fill="rgb(250,152,24)" fg:x="2449" fg:w="145"/><text x="5.2111%" y="431.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (145 samples, 0.29%)</title><rect x="4.9611%" y="405" width="0.2937%" height="15" fill="rgb(209,150,17)" fg:x="2449" fg:w="145"/><text x="5.2111%" y="415.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (191 samples, 0.39%)</title><rect x="4.8862%" y="437" width="0.3869%" height="15" fill="rgb(234,202,34)" fg:x="2412" fg:w="191"/><text x="5.1362%" y="447.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (266 samples, 0.54%)</title><rect x="4.7423%" y="453" width="0.5389%" height="15" fill="rgb(253,148,53)" fg:x="2341" fg:w="266"/><text x="4.9923%" y="463.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (18 samples, 0.04%)</title><rect x="5.2832%" y="437" width="0.0365%" height="15" fill="rgb(218,129,16)" fg:x="2608" fg:w="18"/><text x="5.5332%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_small (11 samples, 0.02%)</title><rect x="5.3318%" y="437" width="0.0223%" height="15" fill="rgb(216,85,19)" fg:x="2632" fg:w="11"/><text x="5.5818%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (5 samples, 0.01%)</title><rect x="5.3440%" y="421" width="0.0101%" height="15" fill="rgb(235,228,7)" fg:x="2638" fg:w="5"/><text x="5.5940%" y="431.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (39 samples, 0.08%)</title><rect x="5.2812%" y="453" width="0.0790%" height="15" fill="rgb(245,175,0)" fg:x="2607" fg:w="39"/><text x="5.5312%" y="463.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (13 samples, 0.03%)</title><rect x="5.3602%" y="405" width="0.0263%" height="15" fill="rgb(208,168,36)" fg:x="2646" fg:w="13"/><text x="5.6102%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_small (11 samples, 0.02%)</title><rect x="5.3926%" y="405" width="0.0223%" height="15" fill="rgb(246,171,24)" fg:x="2662" fg:w="11"/><text x="5.6426%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (5 samples, 0.01%)</title><rect x="5.4047%" y="389" width="0.0101%" height="15" fill="rgb(215,142,24)" fg:x="2668" fg:w="5"/><text x="5.6547%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (28 samples, 0.06%)</title><rect x="5.3602%" y="421" width="0.0567%" height="15" fill="rgb(250,187,7)" fg:x="2646" fg:w="28"/><text x="5.6102%" y="431.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (7 samples, 0.01%)</title><rect x="5.4169%" y="373" width="0.0142%" height="15" fill="rgb(228,66,33)" fg:x="2674" fg:w="7"/><text x="5.6669%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (11 samples, 0.02%)</title><rect x="5.4169%" y="389" width="0.0223%" height="15" fill="rgb(234,215,21)" fg:x="2674" fg:w="11"/><text x="5.6669%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (10 samples, 0.02%)</title><rect x="5.4392%" y="357" width="0.0203%" height="15" fill="rgb(222,191,20)" fg:x="2685" fg:w="10"/><text x="5.6892%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (5 samples, 0.01%)</title><rect x="5.4594%" y="357" width="0.0101%" height="15" fill="rgb(245,79,54)" fg:x="2695" fg:w="5"/><text x="5.7094%" y="367.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (17 samples, 0.03%)</title><rect x="5.4392%" y="373" width="0.0344%" height="15" fill="rgb(240,10,37)" fg:x="2685" fg:w="17"/><text x="5.6892%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (18 samples, 0.04%)</title><rect x="5.4392%" y="389" width="0.0365%" height="15" fill="rgb(214,192,32)" fg:x="2685" fg:w="18"/><text x="5.6892%" y="399.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (30 samples, 0.06%)</title><rect x="5.4169%" y="405" width="0.0608%" height="15" fill="rgb(209,36,54)" fg:x="2674" fg:w="30"/><text x="5.6669%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (35 samples, 0.07%)</title><rect x="5.4169%" y="421" width="0.0709%" height="15" fill="rgb(220,10,11)" fg:x="2674" fg:w="35"/><text x="5.6669%" y="431.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (65 samples, 0.13%)</title><rect x="5.3602%" y="437" width="0.1317%" height="15" fill="rgb(221,106,17)" fg:x="2646" fg:w="65"/><text x="5.6102%" y="447.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (66 samples, 0.13%)</title><rect x="5.3602%" y="453" width="0.1337%" height="15" fill="rgb(251,142,44)" fg:x="2646" fg:w="66"/><text x="5.6102%" y="463.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::join_node::JoinNode::cardinality (393 samples, 0.80%)</title><rect x="4.7018%" y="469" width="0.7961%" height="15" fill="rgb(238,13,15)" fg:x="2321" fg:w="393"/><text x="4.9518%" y="479.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::emit_csg_cmp (406 samples, 0.82%)</title><rect x="4.6876%" y="485" width="0.8225%" height="15" fill="rgb(208,107,27)" fg:x="2314" fg:w="406"/><text x="4.9376%" y="495.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (5 samples, 0.01%)</title><rect x="5.5000%" y="469" width="0.0101%" height="15" fill="rgb(205,136,37)" fg:x="2715" fg:w="5"/><text x="5.7500%" y="479.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="5.5263%" y="421" width="0.0142%" height="15" fill="rgb(250,205,27)" fg:x="2728" fg:w="7"/><text x="5.7763%" y="431.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="5.5202%" y="437" width="0.0223%" height="15" fill="rgb(210,80,43)" fg:x="2725" fg:w="11"/><text x="5.7702%" y="447.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (17 samples, 0.03%)</title><rect x="5.5141%" y="453" width="0.0344%" height="15" fill="rgb(247,160,36)" fg:x="2722" fg:w="17"/><text x="5.7641%" y="463.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (18 samples, 0.04%)</title><rect x="5.5972%" y="373" width="0.0365%" height="15" fill="rgb(234,13,49)" fg:x="2763" fg:w="18"/><text x="5.8472%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (32 samples, 0.06%)</title><rect x="5.5769%" y="405" width="0.0648%" height="15" fill="rgb(234,122,0)" fg:x="2753" fg:w="32"/><text x="5.8269%" y="415.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (31 samples, 0.06%)</title><rect x="5.5790%" y="389" width="0.0628%" height="15" fill="rgb(207,146,38)" fg:x="2754" fg:w="31"/><text x="5.8290%" y="399.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="5.6499%" y="389" width="0.0162%" height="15" fill="rgb(207,177,25)" fg:x="2789" fg:w="8"/><text x="5.8999%" y="399.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="5.6519%" y="373" width="0.0142%" height="15" fill="rgb(211,178,42)" fg:x="2790" fg:w="7"/><text x="5.9019%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (7 samples, 0.01%)</title><rect x="5.6742%" y="373" width="0.0142%" height="15" fill="rgb(230,69,54)" fg:x="2801" fg:w="7"/><text x="5.9242%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="5.6762%" y="357" width="0.0122%" height="15" fill="rgb(214,135,41)" fg:x="2802" fg:w="6"/><text x="5.9262%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="5.6782%" y="341" width="0.0101%" height="15" fill="rgb(237,67,25)" fg:x="2803" fg:w="5"/><text x="5.9282%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (12 samples, 0.02%)</title><rect x="5.6681%" y="389" width="0.0243%" height="15" fill="rgb(222,189,50)" fg:x="2798" fg:w="12"/><text x="5.9181%" y="399.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (24 samples, 0.05%)</title><rect x="5.6478%" y="405" width="0.0486%" height="15" fill="rgb(245,148,34)" fg:x="2788" fg:w="24"/><text x="5.8978%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (64 samples, 0.13%)</title><rect x="5.5729%" y="421" width="0.1296%" height="15" fill="rgb(222,29,6)" fg:x="2751" fg:w="64"/><text x="5.8229%" y="431.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (75 samples, 0.15%)</title><rect x="5.5607%" y="437" width="0.1519%" height="15" fill="rgb(221,189,43)" fg:x="2745" fg:w="75"/><text x="5.8107%" y="447.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="6.0449%" y="405" width="0.0101%" height="15" fill="rgb(207,36,27)" fg:x="2984" fg:w="5"/><text x="6.2949%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (12 samples, 0.02%)</title><rect x="6.0611%" y="389" width="0.0243%" height="15" fill="rgb(217,90,24)" fg:x="2992" fg:w="12"/><text x="6.3111%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (9 samples, 0.02%)</title><rect x="6.0672%" y="373" width="0.0182%" height="15" fill="rgb(224,66,35)" fg:x="2995" fg:w="9"/><text x="6.3172%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (14 samples, 0.03%)</title><rect x="6.1057%" y="341" width="0.0284%" height="15" fill="rgb(221,13,50)" fg:x="3014" fg:w="14"/><text x="6.3557%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (37 samples, 0.07%)</title><rect x="6.0895%" y="373" width="0.0750%" height="15" fill="rgb(236,68,49)" fg:x="3006" fg:w="37"/><text x="6.3395%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (32 samples, 0.06%)</title><rect x="6.0996%" y="357" width="0.0648%" height="15" fill="rgb(229,146,28)" fg:x="3011" fg:w="32"/><text x="6.3496%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (12 samples, 0.02%)</title><rect x="6.1401%" y="341" width="0.0243%" height="15" fill="rgb(225,31,38)" fg:x="3031" fg:w="12"/><text x="6.3901%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (55 samples, 0.11%)</title><rect x="6.0550%" y="405" width="0.1114%" height="15" fill="rgb(250,208,3)" fg:x="2989" fg:w="55"/><text x="6.3050%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (39 samples, 0.08%)</title><rect x="6.0874%" y="389" width="0.0790%" height="15" fill="rgb(246,54,23)" fg:x="3005" fg:w="39"/><text x="6.3374%" y="399.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (225 samples, 0.46%)</title><rect x="5.7127%" y="421" width="0.4558%" height="15" fill="rgb(243,76,11)" fg:x="2820" fg:w="225"/><text x="5.9627%" y="431.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (13 samples, 0.03%)</title><rect x="6.2232%" y="373" width="0.0263%" height="15" fill="rgb(245,21,50)" fg:x="3072" fg:w="13"/><text x="6.4732%" y="383.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="6.2596%" y="357" width="0.0122%" height="15" fill="rgb(228,9,43)" fg:x="3090" fg:w="6"/><text x="6.5096%" y="367.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (14 samples, 0.03%)</title><rect x="6.2495%" y="373" width="0.0284%" height="15" fill="rgb(208,100,47)" fg:x="3085" fg:w="14"/><text x="6.4995%" y="383.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (42 samples, 0.09%)</title><rect x="6.1968%" y="389" width="0.0851%" height="15" fill="rgb(232,26,8)" fg:x="3059" fg:w="42"/><text x="6.4468%" y="399.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (62 samples, 0.13%)</title><rect x="6.1786%" y="405" width="0.1256%" height="15" fill="rgb(216,166,38)" fg:x="3050" fg:w="62"/><text x="6.4286%" y="415.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.02%)</title><rect x="6.2819%" y="389" width="0.0223%" height="15" fill="rgb(251,202,51)" fg:x="3101" fg:w="11"/><text x="6.5319%" y="399.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (9 samples, 0.02%)</title><rect x="6.3548%" y="373" width="0.0182%" height="15" fill="rgb(254,216,34)" fg:x="3137" fg:w="9"/><text x="6.6048%" y="383.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (14 samples, 0.03%)</title><rect x="6.3731%" y="373" width="0.0284%" height="15" fill="rgb(251,32,27)" fg:x="3146" fg:w="14"/><text x="6.6231%" y="383.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (8 samples, 0.02%)</title><rect x="6.3852%" y="357" width="0.0162%" height="15" fill="rgb(208,127,28)" fg:x="3152" fg:w="8"/><text x="6.6352%" y="367.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (45 samples, 0.09%)</title><rect x="6.3123%" y="389" width="0.0912%" height="15" fill="rgb(224,137,22)" fg:x="3116" fg:w="45"/><text x="6.5623%" y="399.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.02%)</title><rect x="6.4035%" y="389" width="0.0223%" height="15" fill="rgb(254,70,32)" fg:x="3161" fg:w="11"/><text x="6.6535%" y="399.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (62 samples, 0.13%)</title><rect x="6.3042%" y="405" width="0.1256%" height="15" fill="rgb(229,75,37)" fg:x="3112" fg:w="62"/><text x="6.5542%" y="415.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (10 samples, 0.02%)</title><rect x="6.4946%" y="373" width="0.0203%" height="15" fill="rgb(252,64,23)" fg:x="3206" fg:w="10"/><text x="6.7446%" y="383.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (27 samples, 0.05%)</title><rect x="6.4744%" y="389" width="0.0547%" height="15" fill="rgb(232,162,48)" fg:x="3196" fg:w="27"/><text x="6.7244%" y="399.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.01%)</title><rect x="6.5149%" y="373" width="0.0142%" height="15" fill="rgb(246,160,12)" fg:x="3216" fg:w="7"/><text x="6.7649%" y="383.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (52 samples, 0.11%)</title><rect x="6.4298%" y="405" width="0.1053%" height="15" fill="rgb(247,166,0)" fg:x="3174" fg:w="52"/><text x="6.6798%" y="415.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.01%)</title><rect x="6.8187%" y="357" width="0.0122%" height="15" fill="rgb(249,219,21)" fg:x="3366" fg:w="6"/><text x="7.0687%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.02%)</title><rect x="6.8511%" y="325" width="0.0162%" height="15" fill="rgb(205,209,3)" fg:x="3382" fg:w="8"/><text x="7.1011%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (13 samples, 0.03%)</title><rect x="6.8451%" y="341" width="0.0263%" height="15" fill="rgb(243,44,1)" fg:x="3379" fg:w="13"/><text x="7.0951%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (9 samples, 0.02%)</title><rect x="6.8896%" y="293" width="0.0182%" height="15" fill="rgb(206,159,16)" fg:x="3401" fg:w="9"/><text x="7.1396%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (32 samples, 0.06%)</title><rect x="6.8755%" y="325" width="0.0648%" height="15" fill="rgb(244,77,30)" fg:x="3394" fg:w="32"/><text x="7.1255%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (27 samples, 0.05%)</title><rect x="6.8856%" y="309" width="0.0547%" height="15" fill="rgb(218,69,12)" fg:x="3399" fg:w="27"/><text x="7.1356%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (16 samples, 0.03%)</title><rect x="6.9079%" y="293" width="0.0324%" height="15" fill="rgb(212,87,7)" fg:x="3410" fg:w="16"/><text x="7.1579%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (56 samples, 0.11%)</title><rect x="6.8309%" y="357" width="0.1134%" height="15" fill="rgb(245,114,25)" fg:x="3372" fg:w="56"/><text x="7.0809%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (35 samples, 0.07%)</title><rect x="6.8734%" y="341" width="0.0709%" height="15" fill="rgb(210,61,42)" fg:x="3393" fg:w="35"/><text x="7.1234%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (201 samples, 0.41%)</title><rect x="6.5392%" y="373" width="0.4072%" height="15" fill="rgb(211,52,33)" fg:x="3228" fg:w="201"/><text x="6.7892%" y="383.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (8 samples, 0.02%)</title><rect x="6.9808%" y="325" width="0.0162%" height="15" fill="rgb(234,58,33)" fg:x="3446" fg:w="8"/><text x="7.2308%" y="335.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (22 samples, 0.04%)</title><rect x="6.9585%" y="341" width="0.0446%" height="15" fill="rgb(220,115,36)" fg:x="3435" fg:w="22"/><text x="7.2085%" y="351.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (32 samples, 0.06%)</title><rect x="6.9504%" y="357" width="0.0648%" height="15" fill="rgb(243,153,54)" fg:x="3431" fg:w="32"/><text x="7.2004%" y="367.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="7.0031%" y="341" width="0.0122%" height="15" fill="rgb(251,47,18)" fg:x="3457" fg:w="6"/><text x="7.2531%" y="351.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="7.0395%" y="325" width="0.0101%" height="15" fill="rgb(242,102,42)" fg:x="3475" fg:w="5"/><text x="7.2895%" y="335.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (26 samples, 0.05%)</title><rect x="7.0173%" y="341" width="0.0527%" height="15" fill="rgb(234,31,38)" fg:x="3464" fg:w="26"/><text x="7.2673%" y="351.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.02%)</title><rect x="7.0497%" y="325" width="0.0203%" height="15" fill="rgb(221,117,51)" fg:x="3480" fg:w="10"/><text x="7.2997%" y="335.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (29 samples, 0.06%)</title><rect x="7.0152%" y="357" width="0.0587%" height="15" fill="rgb(212,20,18)" fg:x="3463" fg:w="29"/><text x="7.2652%" y="367.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (13 samples, 0.03%)</title><rect x="7.0902%" y="341" width="0.0263%" height="15" fill="rgb(245,133,36)" fg:x="3500" fg:w="13"/><text x="7.3402%" y="351.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="7.1064%" y="325" width="0.0101%" height="15" fill="rgb(212,6,19)" fg:x="3508" fg:w="5"/><text x="7.3564%" y="335.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (24 samples, 0.05%)</title><rect x="7.0740%" y="357" width="0.0486%" height="15" fill="rgb(218,1,36)" fg:x="3492" fg:w="24"/><text x="7.3240%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (6 samples, 0.01%)</title><rect x="7.3232%" y="245" width="0.0122%" height="15" fill="rgb(246,84,54)" fg:x="3615" fg:w="6"/><text x="7.5732%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (12 samples, 0.02%)</title><rect x="7.3171%" y="277" width="0.0243%" height="15" fill="rgb(242,110,6)" fg:x="3612" fg:w="12"/><text x="7.5671%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (11 samples, 0.02%)</title><rect x="7.3191%" y="261" width="0.0223%" height="15" fill="rgb(214,47,5)" fg:x="3613" fg:w="11"/><text x="7.5691%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (22 samples, 0.04%)</title><rect x="7.3049%" y="309" width="0.0446%" height="15" fill="rgb(218,159,25)" fg:x="3606" fg:w="22"/><text x="7.5549%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (16 samples, 0.03%)</title><rect x="7.3171%" y="293" width="0.0324%" height="15" fill="rgb(215,211,28)" fg:x="3612" fg:w="16"/><text x="7.5671%" y="303.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (113 samples, 0.23%)</title><rect x="7.1246%" y="325" width="0.2289%" height="15" fill="rgb(238,59,32)" fg:x="3517" fg:w="113"/><text x="7.3746%" y="335.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.01%)</title><rect x="7.3616%" y="293" width="0.0142%" height="15" fill="rgb(226,82,3)" fg:x="3634" fg:w="7"/><text x="7.6116%" y="303.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (16 samples, 0.03%)</title><rect x="7.3576%" y="309" width="0.0324%" height="15" fill="rgb(240,164,32)" fg:x="3632" fg:w="16"/><text x="7.6076%" y="319.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.01%)</title><rect x="7.3758%" y="293" width="0.0142%" height="15" fill="rgb(232,46,7)" fg:x="3641" fg:w="7"/><text x="7.6258%" y="303.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (13 samples, 0.03%)</title><rect x="7.3941%" y="293" width="0.0263%" height="15" fill="rgb(229,129,53)" fg:x="3650" fg:w="13"/><text x="7.6441%" y="303.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (22 samples, 0.04%)</title><rect x="7.3900%" y="309" width="0.0446%" height="15" fill="rgb(234,188,29)" fg:x="3648" fg:w="22"/><text x="7.6400%" y="319.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.01%)</title><rect x="7.4204%" y="293" width="0.0142%" height="15" fill="rgb(246,141,4)" fg:x="3663" fg:w="7"/><text x="7.6704%" y="303.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 0.02%)</title><rect x="7.4346%" y="309" width="0.0243%" height="15" fill="rgb(229,23,39)" fg:x="3670" fg:w="12"/><text x="7.6846%" y="319.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="7.4487%" y="293" width="0.0101%" height="15" fill="rgb(206,12,3)" fg:x="3677" fg:w="5"/><text x="7.6987%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (6 samples, 0.01%)</title><rect x="7.6027%" y="229" width="0.0122%" height="15" fill="rgb(252,226,20)" fg:x="3753" fg:w="6"/><text x="7.8527%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (6 samples, 0.01%)</title><rect x="7.6027%" y="213" width="0.0122%" height="15" fill="rgb(216,123,35)" fg:x="3753" fg:w="6"/><text x="7.8527%" y="223.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (75 samples, 0.15%)</title><rect x="7.4670%" y="277" width="0.1519%" height="15" fill="rgb(212,68,40)" fg:x="3686" fg:w="75"/><text x="7.7170%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (12 samples, 0.02%)</title><rect x="7.5946%" y="261" width="0.0243%" height="15" fill="rgb(254,125,32)" fg:x="3749" fg:w="12"/><text x="7.8446%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="7.6027%" y="245" width="0.0162%" height="15" fill="rgb(253,97,22)" fg:x="3753" fg:w="8"/><text x="7.8527%" y="255.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.02%)</title><rect x="7.6331%" y="245" width="0.0162%" height="15" fill="rgb(241,101,14)" fg:x="3768" fg:w="8"/><text x="7.8831%" y="255.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (17 samples, 0.03%)</title><rect x="7.6209%" y="261" width="0.0344%" height="15" fill="rgb(238,103,29)" fg:x="3762" fg:w="17"/><text x="7.8709%" y="271.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.02%)</title><rect x="7.6594%" y="245" width="0.0203%" height="15" fill="rgb(233,195,47)" fg:x="3781" fg:w="10"/><text x="7.9094%" y="255.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (17 samples, 0.03%)</title><rect x="7.6554%" y="261" width="0.0344%" height="15" fill="rgb(246,218,30)" fg:x="3779" fg:w="17"/><text x="7.9054%" y="271.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="7.6797%" y="245" width="0.0101%" height="15" fill="rgb(219,145,47)" fg:x="3791" fg:w="5"/><text x="7.9297%" y="255.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (11 samples, 0.02%)</title><rect x="7.6898%" y="261" width="0.0223%" height="15" fill="rgb(243,12,26)" fg:x="3796" fg:w="11"/><text x="7.9398%" y="271.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.02%)</title><rect x="7.6939%" y="245" width="0.0182%" height="15" fill="rgb(214,87,16)" fg:x="3798" fg:w="9"/><text x="7.9439%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (6 samples, 0.01%)</title><rect x="7.7749%" y="181" width="0.0122%" height="15" fill="rgb(208,99,42)" fg:x="3838" fg:w="6"/><text x="8.0249%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (5 samples, 0.01%)</title><rect x="7.7769%" y="165" width="0.0101%" height="15" fill="rgb(253,99,2)" fg:x="3839" fg:w="5"/><text x="8.0269%" y="175.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (38 samples, 0.08%)</title><rect x="7.7121%" y="229" width="0.0770%" height="15" fill="rgb(220,168,23)" fg:x="3807" fg:w="38"/><text x="7.9621%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.02%)</title><rect x="7.7708%" y="213" width="0.0182%" height="15" fill="rgb(242,38,24)" fg:x="3836" fg:w="9"/><text x="8.0208%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="7.7729%" y="197" width="0.0162%" height="15" fill="rgb(225,182,9)" fg:x="3837" fg:w="8"/><text x="8.0229%" y="207.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (5 samples, 0.01%)</title><rect x="7.7891%" y="229" width="0.0101%" height="15" fill="rgb(243,178,37)" fg:x="3845" fg:w="5"/><text x="8.0391%" y="239.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (45 samples, 0.09%)</title><rect x="7.7121%" y="261" width="0.0912%" height="15" fill="rgb(232,139,19)" fg:x="3807" fg:w="45"/><text x="7.9621%" y="271.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (45 samples, 0.09%)</title><rect x="7.7121%" y="245" width="0.0912%" height="15" fill="rgb(225,201,24)" fg:x="3807" fg:w="45"/><text x="7.9621%" y="255.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (103 samples, 0.21%)</title><rect x="7.6189%" y="277" width="0.2087%" height="15" fill="rgb(221,47,46)" fg:x="3761" fg:w="103"/><text x="7.8689%" y="287.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (191 samples, 0.39%)</title><rect x="7.4609%" y="309" width="0.3869%" height="15" fill="rgb(249,23,13)" fg:x="3683" fg:w="191"/><text x="7.7109%" y="319.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (190 samples, 0.38%)</title><rect x="7.4629%" y="293" width="0.3849%" height="15" fill="rgb(219,9,5)" fg:x="3684" fg:w="190"/><text x="7.7129%" y="303.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.01%)</title><rect x="7.8499%" y="293" width="0.0101%" height="15" fill="rgb(254,171,16)" fg:x="3875" fg:w="5"/><text x="8.0999%" y="303.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (7 samples, 0.01%)</title><rect x="7.8478%" y="309" width="0.0142%" height="15" fill="rgb(230,171,20)" fg:x="3874" fg:w="7"/><text x="8.0978%" y="319.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (7 samples, 0.01%)</title><rect x="7.8701%" y="309" width="0.0142%" height="15" fill="rgb(210,71,41)" fg:x="3885" fg:w="7"/><text x="8.1201%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="7.8924%" y="309" width="0.0101%" height="15" fill="rgb(206,173,20)" fg:x="3896" fg:w="5"/><text x="8.1424%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (275 samples, 0.56%)</title><rect x="7.3535%" y="325" width="0.5571%" height="15" fill="rgb(233,88,34)" fg:x="3630" fg:w="275"/><text x="7.6035%" y="335.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (394 samples, 0.80%)</title><rect x="7.1226%" y="357" width="0.7982%" height="15" fill="rgb(223,209,46)" fg:x="3516" fg:w="394"/><text x="7.3726%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (394 samples, 0.80%)</title><rect x="7.1226%" y="341" width="0.7982%" height="15" fill="rgb(250,43,18)" fg:x="3516" fg:w="394"/><text x="7.3726%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (497 samples, 1.01%)</title><rect x="6.9464%" y="373" width="1.0068%" height="15" fill="rgb(208,13,10)" fg:x="3429" fg:w="497"/><text x="7.1964%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (717 samples, 1.45%)</title><rect x="6.5372%" y="389" width="1.4525%" height="15" fill="rgb(212,200,36)" fg:x="3227" fg:w="717"/><text x="6.7872%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.02%)</title><rect x="7.9714%" y="373" width="0.0182%" height="15" fill="rgb(225,90,30)" fg:x="3935" fg:w="9"/><text x="8.2214%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (718 samples, 1.45%)</title><rect x="6.5372%" y="405" width="1.4545%" height="15" fill="rgb(236,182,39)" fg:x="3227" fg:w="718"/><text x="6.7872%" y="415.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.02%)</title><rect x="7.9998%" y="389" width="0.0162%" height="15" fill="rgb(212,144,35)" fg:x="3949" fg:w="8"/><text x="8.2498%" y="399.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (14 samples, 0.03%)</title><rect x="7.9977%" y="405" width="0.0284%" height="15" fill="rgb(228,63,44)" fg:x="3948" fg:w="14"/><text x="8.2477%" y="415.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.01%)</title><rect x="8.0403%" y="405" width="0.0122%" height="15" fill="rgb(228,109,6)" fg:x="3969" fg:w="6"/><text x="8.2903%" y="415.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.01%)</title><rect x="8.0545%" y="405" width="0.0142%" height="15" fill="rgb(238,117,24)" fg:x="3976" fg:w="7"/><text x="8.3045%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_small (5 samples, 0.01%)</title><rect x="8.0727%" y="405" width="0.0101%" height="15" fill="rgb(242,26,26)" fg:x="3985" fg:w="5"/><text x="8.3227%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="8.0828%" y="405" width="0.0101%" height="15" fill="rgb(221,92,48)" fg:x="3990" fg:w="5"/><text x="8.3328%" y="415.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (955 samples, 1.93%)</title><rect x="6.1685%" y="421" width="1.9346%" height="15" fill="rgb(209,209,32)" fg:x="3045" fg:w="955"/><text x="6.4185%" y="431.50">d..</text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="8.1091%" y="421" width="0.0101%" height="15" fill="rgb(221,70,22)" fg:x="4003" fg:w="5"/><text x="8.3591%" y="431.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (1,192 samples, 2.41%)</title><rect x="5.7127%" y="437" width="2.4147%" height="15" fill="rgb(248,145,5)" fg:x="2820" fg:w="1192"/><text x="5.9627%" y="447.50">da..</text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.02%)</title><rect x="8.2307%" y="405" width="0.0243%" height="15" fill="rgb(226,116,26)" fg:x="4063" fg:w="12"/><text x="8.4807%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (6 samples, 0.01%)</title><rect x="8.2428%" y="389" width="0.0122%" height="15" fill="rgb(244,5,17)" fg:x="4069" fg:w="6"/><text x="8.4928%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (61 samples, 0.12%)</title><rect x="8.1355%" y="421" width="0.1236%" height="15" fill="rgb(252,159,33)" fg:x="4016" fg:w="61"/><text x="8.3855%" y="431.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (9 samples, 0.02%)</title><rect x="8.2591%" y="421" width="0.0182%" height="15" fill="rgb(206,71,0)" fg:x="4077" fg:w="9"/><text x="8.5091%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.03%)</title><rect x="8.2773%" y="421" width="0.0263%" height="15" fill="rgb(233,118,54)" fg:x="4086" fg:w="13"/><text x="8.5273%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (6 samples, 0.01%)</title><rect x="8.3522%" y="405" width="0.0122%" height="15" fill="rgb(234,83,48)" fg:x="4123" fg:w="6"/><text x="8.6022%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_small (45 samples, 0.09%)</title><rect x="8.3036%" y="421" width="0.0912%" height="15" fill="rgb(228,3,54)" fg:x="4099" fg:w="45"/><text x="8.5536%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (14 samples, 0.03%)</title><rect x="8.3664%" y="405" width="0.0284%" height="15" fill="rgb(226,155,13)" fg:x="4130" fg:w="14"/><text x="8.6164%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (141 samples, 0.29%)</title><rect x="8.1294%" y="437" width="0.2856%" height="15" fill="rgb(241,28,37)" fg:x="4013" fg:w="141"/><text x="8.3794%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.02%)</title><rect x="8.5325%" y="373" width="0.0162%" height="15" fill="rgb(233,93,10)" fg:x="4212" fg:w="8"/><text x="8.7825%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.01%)</title><rect x="8.5386%" y="357" width="0.0101%" height="15" fill="rgb(225,113,19)" fg:x="4215" fg:w="5"/><text x="8.7886%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (65 samples, 0.13%)</title><rect x="8.4252%" y="389" width="0.1317%" height="15" fill="rgb(241,2,18)" fg:x="4159" fg:w="65"/><text x="8.6752%" y="399.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (11 samples, 0.02%)</title><rect x="8.5568%" y="389" width="0.0223%" height="15" fill="rgb(228,207,21)" fg:x="4224" fg:w="11"/><text x="8.8068%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.02%)</title><rect x="8.5791%" y="389" width="0.0243%" height="15" fill="rgb(213,211,35)" fg:x="4235" fg:w="12"/><text x="8.8291%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (7 samples, 0.01%)</title><rect x="8.6115%" y="373" width="0.0142%" height="15" fill="rgb(209,83,10)" fg:x="4251" fg:w="7"/><text x="8.8615%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_small (30 samples, 0.06%)</title><rect x="8.6034%" y="389" width="0.0608%" height="15" fill="rgb(209,164,1)" fg:x="4247" fg:w="30"/><text x="8.8534%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (16 samples, 0.03%)</title><rect x="8.6318%" y="373" width="0.0324%" height="15" fill="rgb(213,184,43)" fg:x="4261" fg:w="16"/><text x="8.8818%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (129 samples, 0.26%)</title><rect x="8.4150%" y="405" width="0.2613%" height="15" fill="rgb(231,61,34)" fg:x="4154" fg:w="129"/><text x="8.6650%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (33 samples, 0.07%)</title><rect x="8.6804%" y="357" width="0.0669%" height="15" fill="rgb(235,75,3)" fg:x="4285" fg:w="33"/><text x="8.9304%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_small (14 samples, 0.03%)</title><rect x="8.7614%" y="357" width="0.0284%" height="15" fill="rgb(220,106,47)" fg:x="4325" fg:w="14"/><text x="9.0114%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (10 samples, 0.02%)</title><rect x="8.7695%" y="341" width="0.0203%" height="15" fill="rgb(210,196,33)" fg:x="4329" fg:w="10"/><text x="9.0195%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (56 samples, 0.11%)</title><rect x="8.6784%" y="373" width="0.1134%" height="15" fill="rgb(229,154,42)" fg:x="4284" fg:w="56"/><text x="8.9284%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (30 samples, 0.06%)</title><rect x="8.7979%" y="325" width="0.0608%" height="15" fill="rgb(228,114,26)" fg:x="4343" fg:w="30"/><text x="9.0479%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_small (10 samples, 0.02%)</title><rect x="8.8708%" y="325" width="0.0203%" height="15" fill="rgb(208,144,1)" fg:x="4379" fg:w="10"/><text x="9.1208%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (5 samples, 0.01%)</title><rect x="8.8810%" y="309" width="0.0101%" height="15" fill="rgb(239,112,37)" fg:x="4384" fg:w="5"/><text x="9.1310%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (55 samples, 0.11%)</title><rect x="8.7918%" y="341" width="0.1114%" height="15" fill="rgb(210,96,50)" fg:x="4340" fg:w="55"/><text x="9.0418%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (17 samples, 0.03%)</title><rect x="8.9073%" y="293" width="0.0344%" height="15" fill="rgb(222,178,2)" fg:x="4397" fg:w="17"/><text x="9.1573%" y="303.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (26 samples, 0.05%)</title><rect x="8.9032%" y="309" width="0.0527%" height="15" fill="rgb(226,74,18)" fg:x="4395" fg:w="26"/><text x="9.1532%" y="319.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (7 samples, 0.01%)</title><rect x="8.9559%" y="293" width="0.0142%" height="15" fill="rgb(225,67,54)" fg:x="4421" fg:w="7"/><text x="9.2059%" y="303.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (14 samples, 0.03%)</title><rect x="8.9559%" y="309" width="0.0284%" height="15" fill="rgb(251,92,32)" fg:x="4421" fg:w="14"/><text x="9.2059%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (6 samples, 0.01%)</title><rect x="8.9721%" y="293" width="0.0122%" height="15" fill="rgb(228,149,22)" fg:x="4429" fg:w="6"/><text x="9.2221%" y="303.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (42 samples, 0.09%)</title><rect x="8.9032%" y="325" width="0.0851%" height="15" fill="rgb(243,54,13)" fg:x="4395" fg:w="42"/><text x="9.1532%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="8.9964%" y="325" width="0.0101%" height="15" fill="rgb(243,180,28)" fg:x="4441" fg:w="5"/><text x="9.2464%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (54 samples, 0.11%)</title><rect x="8.9032%" y="341" width="0.1094%" height="15" fill="rgb(208,167,24)" fg:x="4395" fg:w="54"/><text x="9.1532%" y="351.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (111 samples, 0.22%)</title><rect x="8.7918%" y="357" width="0.2249%" height="15" fill="rgb(245,73,45)" fg:x="4340" fg:w="111"/><text x="9.0418%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_expression::values::Scalar&gt; (6 samples, 0.01%)</title><rect x="9.0228%" y="341" width="0.0122%" height="15" fill="rgb(237,203,48)" fg:x="4454" fg:w="6"/><text x="9.2728%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (10 samples, 0.02%)</title><rect x="9.0207%" y="357" width="0.0203%" height="15" fill="rgb(211,197,16)" fg:x="4453" fg:w="10"/><text x="9.2707%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (124 samples, 0.25%)</title><rect x="8.7918%" y="373" width="0.2512%" height="15" fill="rgb(243,99,51)" fg:x="4340" fg:w="124"/><text x="9.0418%" y="383.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (187 samples, 0.38%)</title><rect x="8.6764%" y="389" width="0.3788%" height="15" fill="rgb(215,123,29)" fg:x="4283" fg:w="187"/><text x="8.9264%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_expression::values::Scalar&gt; (7 samples, 0.01%)</title><rect x="9.0714%" y="373" width="0.0142%" height="15" fill="rgb(239,186,37)" fg:x="4478" fg:w="7"/><text x="9.3214%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (17 samples, 0.03%)</title><rect x="9.0694%" y="389" width="0.0344%" height="15" fill="rgb(252,136,39)" fg:x="4477" fg:w="17"/><text x="9.3194%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (212 samples, 0.43%)</title><rect x="8.6764%" y="405" width="0.4295%" height="15" fill="rgb(223,213,32)" fg:x="4283" fg:w="212"/><text x="8.9264%" y="415.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (346 samples, 0.70%)</title><rect x="8.4150%" y="421" width="0.7009%" height="15" fill="rgb(233,115,5)" fg:x="4154" fg:w="346"/><text x="8.6650%" y="431.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::binder::bind_context::ColumnBinding&gt; (5 samples, 0.01%)</title><rect x="9.1160%" y="405" width="0.0101%" height="15" fill="rgb(207,226,44)" fg:x="4500" fg:w="5"/><text x="9.3660%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (9 samples, 0.02%)</title><rect x="9.1160%" y="421" width="0.0182%" height="15" fill="rgb(208,126,0)" fg:x="4500" fg:w="9"/><text x="9.3660%" y="431.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (357 samples, 0.72%)</title><rect x="8.4150%" y="437" width="0.7232%" height="15" fill="rgb(244,66,21)" fg:x="4154" fg:w="357"/><text x="8.6650%" y="447.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::join_node::JoinNode::cardinality (1,775 samples, 3.60%)</title><rect x="5.5567%" y="453" width="3.5957%" height="15" fill="rgb(222,97,12)" fg:x="2743" fg:w="1775"/><text x="5.8067%" y="463.50">data..</text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (10 samples, 0.02%)</title><rect x="9.1605%" y="437" width="0.0203%" height="15" fill="rgb(219,213,19)" fg:x="4522" fg:w="10"/><text x="9.4105%" y="447.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (8 samples, 0.02%)</title><rect x="9.1646%" y="421" width="0.0162%" height="15" fill="rgb(252,169,30)" fg:x="4524" fg:w="8"/><text x="9.4146%" y="431.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (5 samples, 0.01%)</title><rect x="9.1707%" y="405" width="0.0101%" height="15" fill="rgb(206,32,51)" fg:x="4527" fg:w="5"/><text x="9.4207%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (15 samples, 0.03%)</title><rect x="9.1565%" y="453" width="0.0304%" height="15" fill="rgb(250,172,42)" fg:x="4520" fg:w="15"/><text x="9.4065%" y="463.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::emit_csg_cmp (1,817 samples, 3.68%)</title><rect x="5.5121%" y="469" width="3.6808%" height="15" fill="rgb(209,34,43)" fg:x="2721" fg:w="1817"/><text x="5.7621%" y="479.50">data..</text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (13 samples, 0.03%)</title><rect x="9.1970%" y="389" width="0.0263%" height="15" fill="rgb(223,11,35)" fg:x="4540" fg:w="13"/><text x="9.4470%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="9.2091%" y="373" width="0.0142%" height="15" fill="rgb(251,219,26)" fg:x="4546" fg:w="7"/><text x="9.4591%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.01%)</title><rect x="9.2112%" y="357" width="0.0122%" height="15" fill="rgb(231,119,3)" fg:x="4547" fg:w="6"/><text x="9.4612%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.01%)</title><rect x="9.2132%" y="341" width="0.0101%" height="15" fill="rgb(216,97,11)" fg:x="4548" fg:w="5"/><text x="9.4632%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (15 samples, 0.03%)</title><rect x="9.1970%" y="405" width="0.0304%" height="15" fill="rgb(223,59,9)" fg:x="4540" fg:w="15"/><text x="9.4470%" y="415.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.04%)</title><rect x="9.1970%" y="421" width="0.0385%" height="15" fill="rgb(233,93,31)" fg:x="4540" fg:w="19"/><text x="9.4470%" y="431.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="9.2375%" y="405" width="0.0101%" height="15" fill="rgb(239,81,33)" fg:x="4560" fg:w="5"/><text x="9.4875%" y="415.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="9.2517%" y="389" width="0.0122%" height="15" fill="rgb(213,120,34)" fg:x="4567" fg:w="6"/><text x="9.5017%" y="399.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="9.2659%" y="373" width="0.0101%" height="15" fill="rgb(243,49,53)" fg:x="4574" fg:w="5"/><text x="9.5159%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="9.2659%" y="357" width="0.0101%" height="15" fill="rgb(247,216,33)" fg:x="4574" fg:w="5"/><text x="9.5159%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="9.2659%" y="341" width="0.0101%" height="15" fill="rgb(226,26,14)" fg:x="4574" fg:w="5"/><text x="9.5159%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="9.2760%" y="373" width="0.0142%" height="15" fill="rgb(215,49,53)" fg:x="4579" fg:w="7"/><text x="9.5260%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (18 samples, 0.04%)</title><rect x="9.2638%" y="389" width="0.0365%" height="15" fill="rgb(245,162,40)" fg:x="4573" fg:w="18"/><text x="9.5138%" y="399.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (28 samples, 0.06%)</title><rect x="9.2476%" y="405" width="0.0567%" height="15" fill="rgb(229,68,17)" fg:x="4565" fg:w="28"/><text x="9.4976%" y="415.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (35 samples, 0.07%)</title><rect x="9.2355%" y="421" width="0.0709%" height="15" fill="rgb(213,182,10)" fg:x="4559" fg:w="35"/><text x="9.4855%" y="431.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (59 samples, 0.12%)</title><rect x="9.1970%" y="437" width="0.1195%" height="15" fill="rgb(245,125,30)" fg:x="4540" fg:w="59"/><text x="9.4470%" y="447.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="9.3307%" y="389" width="0.0182%" height="15" fill="rgb(232,202,2)" fg:x="4606" fg:w="9"/><text x="9.5807%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="9.3368%" y="373" width="0.0122%" height="15" fill="rgb(237,140,51)" fg:x="4609" fg:w="6"/><text x="9.5868%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (14 samples, 0.03%)</title><rect x="9.3287%" y="405" width="0.0284%" height="15" fill="rgb(236,157,25)" fg:x="4605" fg:w="14"/><text x="9.5787%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (13 samples, 0.03%)</title><rect x="9.4381%" y="341" width="0.0263%" height="15" fill="rgb(219,209,0)" fg:x="4659" fg:w="13"/><text x="9.6881%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (8 samples, 0.02%)</title><rect x="9.4482%" y="325" width="0.0162%" height="15" fill="rgb(240,116,54)" fg:x="4664" fg:w="8"/><text x="9.6982%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (6 samples, 0.01%)</title><rect x="9.4522%" y="309" width="0.0122%" height="15" fill="rgb(216,10,36)" fg:x="4666" fg:w="6"/><text x="9.7022%" y="319.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (31 samples, 0.06%)</title><rect x="9.4036%" y="357" width="0.0628%" height="15" fill="rgb(222,72,44)" fg:x="4642" fg:w="31"/><text x="9.6536%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="9.4684%" y="341" width="0.0162%" height="15" fill="rgb(232,159,9)" fg:x="4674" fg:w="8"/><text x="9.7184%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="9.4745%" y="325" width="0.0101%" height="15" fill="rgb(210,39,32)" fg:x="4677" fg:w="5"/><text x="9.7245%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.02%)</title><rect x="9.4684%" y="357" width="0.0182%" height="15" fill="rgb(216,194,45)" fg:x="4674" fg:w="9"/><text x="9.7184%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (61 samples, 0.12%)</title><rect x="9.3672%" y="373" width="0.1236%" height="15" fill="rgb(218,18,35)" fg:x="4624" fg:w="61"/><text x="9.6172%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (65 samples, 0.13%)</title><rect x="9.3611%" y="389" width="0.1317%" height="15" fill="rgb(207,83,51)" fg:x="4621" fg:w="65"/><text x="9.6111%" y="399.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="9.4927%" y="389" width="0.0101%" height="15" fill="rgb(225,63,43)" fg:x="4686" fg:w="5"/><text x="9.7427%" y="399.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="9.4927%" y="373" width="0.0101%" height="15" fill="rgb(207,57,36)" fg:x="4686" fg:w="5"/><text x="9.7427%" y="383.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (13 samples, 0.03%)</title><rect x="9.5191%" y="341" width="0.0263%" height="15" fill="rgb(216,99,33)" fg:x="4699" fg:w="13"/><text x="9.7691%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (23 samples, 0.05%)</title><rect x="9.5090%" y="373" width="0.0466%" height="15" fill="rgb(225,42,16)" fg:x="4694" fg:w="23"/><text x="9.7590%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (23 samples, 0.05%)</title><rect x="9.5090%" y="357" width="0.0466%" height="15" fill="rgb(220,201,45)" fg:x="4694" fg:w="23"/><text x="9.7590%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="9.5718%" y="357" width="0.0223%" height="15" fill="rgb(225,33,4)" fg:x="4725" fg:w="11"/><text x="9.8218%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="9.5718%" y="341" width="0.0223%" height="15" fill="rgb(224,33,50)" fg:x="4725" fg:w="11"/><text x="9.8218%" y="351.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="9.6102%" y="309" width="0.0223%" height="15" fill="rgb(246,198,51)" fg:x="4744" fg:w="11"/><text x="9.8602%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="9.6204%" y="293" width="0.0122%" height="15" fill="rgb(205,22,4)" fg:x="4749" fg:w="6"/><text x="9.8704%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="9.6366%" y="309" width="0.0122%" height="15" fill="rgb(206,3,8)" fg:x="4757" fg:w="6"/><text x="9.8866%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="9.6386%" y="293" width="0.0101%" height="15" fill="rgb(251,23,15)" fg:x="4758" fg:w="5"/><text x="9.8886%" y="303.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (25 samples, 0.05%)</title><rect x="9.6021%" y="325" width="0.0506%" height="15" fill="rgb(252,88,28)" fg:x="4740" fg:w="25"/><text x="9.8521%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (26 samples, 0.05%)</title><rect x="9.6021%" y="341" width="0.0527%" height="15" fill="rgb(212,127,14)" fg:x="4740" fg:w="26"/><text x="9.8521%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (7 samples, 0.01%)</title><rect x="9.6670%" y="341" width="0.0142%" height="15" fill="rgb(247,145,37)" fg:x="4772" fg:w="7"/><text x="9.9170%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="9.6670%" y="325" width="0.0142%" height="15" fill="rgb(209,117,53)" fg:x="4772" fg:w="7"/><text x="9.9170%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="9.6670%" y="309" width="0.0142%" height="15" fill="rgb(212,90,42)" fg:x="4772" fg:w="7"/><text x="9.9170%" y="319.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (40 samples, 0.08%)</title><rect x="9.6021%" y="357" width="0.0810%" height="15" fill="rgb(218,164,37)" fg:x="4740" fg:w="40"/><text x="9.8521%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (65 samples, 0.13%)</title><rect x="9.5616%" y="373" width="0.1317%" height="15" fill="rgb(246,65,34)" fg:x="4720" fg:w="65"/><text x="9.8116%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (101 samples, 0.20%)</title><rect x="9.5029%" y="389" width="0.2046%" height="15" fill="rgb(231,100,33)" fg:x="4691" fg:w="101"/><text x="9.7529%" y="399.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (187 samples, 0.38%)</title><rect x="9.3590%" y="405" width="0.3788%" height="15" fill="rgb(228,126,14)" fg:x="4620" fg:w="187"/><text x="9.6090%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.01%)</title><rect x="9.7257%" y="389" width="0.0122%" height="15" fill="rgb(215,173,21)" fg:x="4801" fg:w="6"/><text x="9.9757%" y="399.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::s_expr::SExpr::create (5 samples, 0.01%)</title><rect x="9.7379%" y="405" width="0.0101%" height="15" fill="rgb(210,6,40)" fg:x="4807" fg:w="5"/><text x="9.9879%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (212 samples, 0.43%)</title><rect x="9.3287%" y="421" width="0.4295%" height="15" fill="rgb(212,48,18)" fg:x="4605" fg:w="212"/><text x="9.5787%" y="431.50"></text></g><g><title>databend-query`common_base::runtime::runtime_tracker::ThreadTracker::alloc (6 samples, 0.01%)</title><rect x="10.6312%" y="389" width="0.0122%" height="15" fill="rgb(230,214,11)" fg:x="5248" fg:w="6"/><text x="10.8812%" y="399.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (13 samples, 0.03%)</title><rect x="10.6434%" y="389" width="0.0263%" height="15" fill="rgb(254,105,39)" fg:x="5254" fg:w="13"/><text x="10.8934%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (17 samples, 0.03%)</title><rect x="10.7082%" y="357" width="0.0344%" height="15" fill="rgb(245,158,5)" fg:x="5286" fg:w="17"/><text x="10.9582%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (26 samples, 0.05%)</title><rect x="10.6920%" y="373" width="0.0527%" height="15" fill="rgb(249,208,11)" fg:x="5278" fg:w="26"/><text x="10.9420%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (20 samples, 0.04%)</title><rect x="10.8014%" y="325" width="0.0405%" height="15" fill="rgb(210,39,28)" fg:x="5332" fg:w="20"/><text x="11.0514%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (60 samples, 0.12%)</title><rect x="10.7609%" y="357" width="0.1215%" height="15" fill="rgb(211,56,53)" fg:x="5312" fg:w="60"/><text x="11.0109%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (45 samples, 0.09%)</title><rect x="10.7913%" y="341" width="0.0912%" height="15" fill="rgb(226,201,30)" fg:x="5327" fg:w="45"/><text x="11.0413%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (17 samples, 0.03%)</title><rect x="10.8480%" y="325" width="0.0344%" height="15" fill="rgb(239,101,34)" fg:x="5355" fg:w="17"/><text x="11.0980%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (108 samples, 0.22%)</title><rect x="10.6697%" y="389" width="0.2188%" height="15" fill="rgb(226,209,5)" fg:x="5267" fg:w="108"/><text x="10.9197%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (68 samples, 0.14%)</title><rect x="10.7507%" y="373" width="0.1378%" height="15" fill="rgb(250,105,47)" fg:x="5307" fg:w="68"/><text x="11.0007%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (5 samples, 0.01%)</title><rect x="10.8885%" y="389" width="0.0101%" height="15" fill="rgb(230,72,3)" fg:x="5375" fg:w="5"/><text x="11.1385%" y="399.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (564 samples, 1.14%)</title><rect x="9.7601%" y="405" width="1.1425%" height="15" fill="rgb(232,218,39)" fg:x="4818" fg:w="564"/><text x="10.0101%" y="415.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="11.0607%" y="357" width="0.0162%" height="15" fill="rgb(248,166,6)" fg:x="5460" fg:w="8"/><text x="11.3107%" y="367.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (30 samples, 0.06%)</title><rect x="11.0769%" y="357" width="0.0608%" height="15" fill="rgb(247,89,20)" fg:x="5468" fg:w="30"/><text x="11.3269%" y="367.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (11 samples, 0.02%)</title><rect x="11.1600%" y="341" width="0.0223%" height="15" fill="rgb(248,130,54)" fg:x="5509" fg:w="11"/><text x="11.4100%" y="351.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (24 samples, 0.05%)</title><rect x="11.1377%" y="357" width="0.0486%" height="15" fill="rgb(234,196,4)" fg:x="5498" fg:w="24"/><text x="11.3877%" y="367.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (98 samples, 0.20%)</title><rect x="10.9959%" y="373" width="0.1985%" height="15" fill="rgb(250,143,31)" fg:x="5428" fg:w="98"/><text x="11.2459%" y="383.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="11.2086%" y="357" width="0.0122%" height="15" fill="rgb(211,110,34)" fg:x="5533" fg:w="6"/><text x="11.4586%" y="367.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (6 samples, 0.01%)</title><rect x="11.2207%" y="357" width="0.0122%" height="15" fill="rgb(215,124,48)" fg:x="5539" fg:w="6"/><text x="11.4707%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="11.2329%" y="357" width="0.0122%" height="15" fill="rgb(216,46,13)" fg:x="5545" fg:w="6"/><text x="11.4829%" y="367.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (30 samples, 0.06%)</title><rect x="11.1944%" y="373" width="0.0608%" height="15" fill="rgb(205,184,25)" fg:x="5526" fg:w="30"/><text x="11.4444%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_small (5 samples, 0.01%)</title><rect x="11.2450%" y="357" width="0.0101%" height="15" fill="rgb(228,1,10)" fg:x="5551" fg:w="5"/><text x="11.4950%" y="367.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (161 samples, 0.33%)</title><rect x="10.9331%" y="389" width="0.3261%" height="15" fill="rgb(213,116,27)" fg:x="5397" fg:w="161"/><text x="11.1831%" y="399.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.03%)</title><rect x="11.3605%" y="357" width="0.0263%" height="15" fill="rgb(241,95,50)" fg:x="5608" fg:w="13"/><text x="11.6105%" y="367.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (27 samples, 0.05%)</title><rect x="11.3868%" y="357" width="0.0547%" height="15" fill="rgb(238,48,32)" fg:x="5621" fg:w="27"/><text x="11.6368%" y="367.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="11.4598%" y="341" width="0.0142%" height="15" fill="rgb(235,113,49)" fg:x="5657" fg:w="7"/><text x="11.7098%" y="351.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (10 samples, 0.02%)</title><rect x="11.4739%" y="341" width="0.0203%" height="15" fill="rgb(205,127,43)" fg:x="5664" fg:w="10"/><text x="11.7239%" y="351.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (29 samples, 0.06%)</title><rect x="11.4415%" y="357" width="0.0587%" height="15" fill="rgb(250,162,2)" fg:x="5648" fg:w="29"/><text x="11.6915%" y="367.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (103 samples, 0.21%)</title><rect x="11.2937%" y="373" width="0.2087%" height="15" fill="rgb(220,13,41)" fg:x="5575" fg:w="103"/><text x="11.5437%" y="383.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (12 samples, 0.02%)</title><rect x="11.5347%" y="357" width="0.0243%" height="15" fill="rgb(249,221,25)" fg:x="5694" fg:w="12"/><text x="11.7847%" y="367.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (36 samples, 0.07%)</title><rect x="11.5023%" y="373" width="0.0729%" height="15" fill="rgb(215,208,19)" fg:x="5678" fg:w="36"/><text x="11.7523%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="11.5631%" y="357" width="0.0122%" height="15" fill="rgb(236,175,2)" fg:x="5708" fg:w="6"/><text x="11.8131%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="11.5631%" y="341" width="0.0122%" height="15" fill="rgb(241,52,2)" fg:x="5708" fg:w="6"/><text x="11.8131%" y="351.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (157 samples, 0.32%)</title><rect x="11.2592%" y="389" width="0.3180%" height="15" fill="rgb(248,140,14)" fg:x="5558" fg:w="157"/><text x="11.5092%" y="399.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.02%)</title><rect x="11.7049%" y="357" width="0.0203%" height="15" fill="rgb(253,22,42)" fg:x="5778" fg:w="10"/><text x="11.9549%" y="367.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (13 samples, 0.03%)</title><rect x="11.7251%" y="357" width="0.0263%" height="15" fill="rgb(234,61,47)" fg:x="5788" fg:w="13"/><text x="11.9751%" y="367.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="11.7636%" y="341" width="0.0101%" height="15" fill="rgb(208,226,15)" fg:x="5807" fg:w="5"/><text x="12.0136%" y="351.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (60 samples, 0.12%)</title><rect x="11.6583%" y="373" width="0.1215%" height="15" fill="rgb(217,221,4)" fg:x="5755" fg:w="60"/><text x="11.9083%" y="383.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (14 samples, 0.03%)</title><rect x="11.7515%" y="357" width="0.0284%" height="15" fill="rgb(212,174,34)" fg:x="5801" fg:w="14"/><text x="12.0015%" y="367.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (105 samples, 0.21%)</title><rect x="11.5773%" y="389" width="0.2127%" height="15" fill="rgb(253,83,4)" fg:x="5715" fg:w="105"/><text x="11.8273%" y="399.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="11.7798%" y="373" width="0.0101%" height="15" fill="rgb(250,195,49)" fg:x="5815" fg:w="5"/><text x="12.0298%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="11.7798%" y="357" width="0.0101%" height="15" fill="rgb(241,192,25)" fg:x="5815" fg:w="5"/><text x="12.0298%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="11.7798%" y="341" width="0.0101%" height="15" fill="rgb(208,124,10)" fg:x="5815" fg:w="5"/><text x="12.0298%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (22 samples, 0.04%)</title><rect x="12.6205%" y="341" width="0.0446%" height="15" fill="rgb(222,33,0)" fg:x="6230" fg:w="22"/><text x="12.8705%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (14 samples, 0.03%)</title><rect x="12.7097%" y="309" width="0.0284%" height="15" fill="rgb(234,209,28)" fg:x="6274" fg:w="14"/><text x="12.9597%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (24 samples, 0.05%)</title><rect x="12.6975%" y="325" width="0.0486%" height="15" fill="rgb(224,11,23)" fg:x="6268" fg:w="24"/><text x="12.9475%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (28 samples, 0.06%)</title><rect x="12.8130%" y="277" width="0.0567%" height="15" fill="rgb(232,99,1)" fg:x="6325" fg:w="28"/><text x="13.0630%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (73 samples, 0.15%)</title><rect x="12.7684%" y="309" width="0.1479%" height="15" fill="rgb(237,95,45)" fg:x="6303" fg:w="73"/><text x="13.0184%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (60 samples, 0.12%)</title><rect x="12.7947%" y="293" width="0.1215%" height="15" fill="rgb(208,109,11)" fg:x="6316" fg:w="60"/><text x="13.0447%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (20 samples, 0.04%)</title><rect x="12.8758%" y="277" width="0.0405%" height="15" fill="rgb(216,190,48)" fg:x="6356" fg:w="20"/><text x="13.1258%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (128 samples, 0.26%)</title><rect x="12.6651%" y="341" width="0.2593%" height="15" fill="rgb(251,171,36)" fg:x="6252" fg:w="128"/><text x="12.9151%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (86 samples, 0.17%)</title><rect x="12.7502%" y="325" width="0.1742%" height="15" fill="rgb(230,62,22)" fg:x="6294" fg:w="86"/><text x="13.0002%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (555 samples, 1.12%)</title><rect x="11.8102%" y="357" width="1.1243%" height="15" fill="rgb(225,114,35)" fg:x="5830" fg:w="555"/><text x="12.0602%" y="367.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.02%)</title><rect x="13.0237%" y="309" width="0.0243%" height="15" fill="rgb(215,118,42)" fg:x="6429" fg:w="12"/><text x="13.2737%" y="319.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (14 samples, 0.03%)</title><rect x="13.0480%" y="309" width="0.0284%" height="15" fill="rgb(243,119,21)" fg:x="6441" fg:w="14"/><text x="13.2980%" y="319.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="13.0905%" y="293" width="0.0101%" height="15" fill="rgb(252,177,53)" fg:x="6462" fg:w="5"/><text x="13.3405%" y="303.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (7 samples, 0.01%)</title><rect x="13.1006%" y="293" width="0.0142%" height="15" fill="rgb(237,209,29)" fg:x="6467" fg:w="7"/><text x="13.3506%" y="303.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (69 samples, 0.14%)</title><rect x="12.9771%" y="325" width="0.1398%" height="15" fill="rgb(212,65,23)" fg:x="6406" fg:w="69"/><text x="13.2271%" y="335.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (20 samples, 0.04%)</title><rect x="13.0763%" y="309" width="0.0405%" height="15" fill="rgb(230,222,46)" fg:x="6455" fg:w="20"/><text x="13.3263%" y="319.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (98 samples, 0.20%)</title><rect x="12.9426%" y="341" width="0.1985%" height="15" fill="rgb(215,135,32)" fg:x="6389" fg:w="98"/><text x="13.1926%" y="351.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (12 samples, 0.02%)</title><rect x="13.1168%" y="325" width="0.0243%" height="15" fill="rgb(246,101,22)" fg:x="6475" fg:w="12"/><text x="13.3668%" y="335.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (14 samples, 0.03%)</title><rect x="13.2242%" y="309" width="0.0284%" height="15" fill="rgb(206,107,13)" fg:x="6528" fg:w="14"/><text x="13.4742%" y="319.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="13.2688%" y="293" width="0.0142%" height="15" fill="rgb(250,100,44)" fg:x="6550" fg:w="7"/><text x="13.5188%" y="303.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (11 samples, 0.02%)</title><rect x="13.2830%" y="293" width="0.0223%" height="15" fill="rgb(231,147,38)" fg:x="6557" fg:w="11"/><text x="13.5330%" y="303.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (75 samples, 0.15%)</title><rect x="13.1614%" y="325" width="0.1519%" height="15" fill="rgb(229,8,40)" fg:x="6497" fg:w="75"/><text x="13.4114%" y="335.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (30 samples, 0.06%)</title><rect x="13.2526%" y="309" width="0.0608%" height="15" fill="rgb(221,135,30)" fg:x="6542" fg:w="30"/><text x="13.5026%" y="319.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (89 samples, 0.18%)</title><rect x="13.1412%" y="341" width="0.1803%" height="15" fill="rgb(249,193,18)" fg:x="6487" fg:w="89"/><text x="13.3912%" y="351.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="13.3984%" y="309" width="0.0162%" height="15" fill="rgb(209,133,39)" fg:x="6614" fg:w="8"/><text x="13.6484%" y="319.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (11 samples, 0.02%)</title><rect x="13.4146%" y="309" width="0.0223%" height="15" fill="rgb(232,100,14)" fg:x="6622" fg:w="11"/><text x="13.6646%" y="319.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (8 samples, 0.02%)</title><rect x="13.4491%" y="293" width="0.0162%" height="15" fill="rgb(224,185,1)" fg:x="6639" fg:w="8"/><text x="13.6991%" y="303.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (72 samples, 0.15%)</title><rect x="13.3214%" y="341" width="0.1459%" height="15" fill="rgb(223,139,8)" fg:x="6576" fg:w="72"/><text x="13.5714%" y="351.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (55 samples, 0.11%)</title><rect x="13.3559%" y="325" width="0.1114%" height="15" fill="rgb(232,213,38)" fg:x="6593" fg:w="55"/><text x="13.6059%" y="335.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (15 samples, 0.03%)</title><rect x="13.4369%" y="309" width="0.0304%" height="15" fill="rgb(207,94,22)" fg:x="6633" fg:w="15"/><text x="13.6869%" y="319.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (11 samples, 0.02%)</title><rect x="13.9049%" y="293" width="0.0223%" height="15" fill="rgb(219,183,54)" fg:x="6864" fg:w="11"/><text x="14.1549%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (10 samples, 0.02%)</title><rect x="13.9434%" y="277" width="0.0203%" height="15" fill="rgb(216,185,54)" fg:x="6883" fg:w="10"/><text x="14.1934%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (7 samples, 0.01%)</title><rect x="13.9494%" y="261" width="0.0142%" height="15" fill="rgb(254,217,39)" fg:x="6886" fg:w="7"/><text x="14.1994%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (11 samples, 0.02%)</title><rect x="13.9920%" y="229" width="0.0223%" height="15" fill="rgb(240,178,23)" fg:x="6907" fg:w="11"/><text x="14.2420%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (37 samples, 0.07%)</title><rect x="13.9636%" y="261" width="0.0750%" height="15" fill="rgb(218,11,47)" fg:x="6893" fg:w="37"/><text x="14.2136%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (32 samples, 0.06%)</title><rect x="13.9737%" y="245" width="0.0648%" height="15" fill="rgb(218,51,51)" fg:x="6898" fg:w="32"/><text x="14.2237%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (8 samples, 0.02%)</title><rect x="14.0224%" y="229" width="0.0162%" height="15" fill="rgb(238,126,27)" fg:x="6922" fg:w="8"/><text x="14.2724%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (59 samples, 0.12%)</title><rect x="13.9272%" y="293" width="0.1195%" height="15" fill="rgb(249,202,22)" fg:x="6875" fg:w="59"/><text x="14.1772%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (41 samples, 0.08%)</title><rect x="13.9636%" y="277" width="0.0831%" height="15" fill="rgb(254,195,49)" fg:x="6893" fg:w="41"/><text x="14.2136%" y="287.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (287 samples, 0.58%)</title><rect x="13.4734%" y="309" width="0.5814%" height="15" fill="rgb(208,123,14)" fg:x="6651" fg:w="287"/><text x="13.7234%" y="319.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (22 samples, 0.04%)</title><rect x="14.0912%" y="277" width="0.0446%" height="15" fill="rgb(224,200,8)" fg:x="6956" fg:w="22"/><text x="14.3412%" y="287.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (8 samples, 0.02%)</title><rect x="14.1196%" y="261" width="0.0162%" height="15" fill="rgb(217,61,36)" fg:x="6970" fg:w="8"/><text x="14.3696%" y="271.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (38 samples, 0.08%)</title><rect x="14.0710%" y="293" width="0.0770%" height="15" fill="rgb(206,35,45)" fg:x="6946" fg:w="38"/><text x="14.3210%" y="303.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="14.1358%" y="277" width="0.0122%" height="15" fill="rgb(217,65,33)" fg:x="6978" fg:w="6"/><text x="14.3858%" y="287.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="14.1783%" y="261" width="0.0122%" height="15" fill="rgb(222,158,48)" fg:x="6999" fg:w="6"/><text x="14.4283%" y="271.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (14 samples, 0.03%)</title><rect x="14.1905%" y="261" width="0.0284%" height="15" fill="rgb(254,2,54)" fg:x="7005" fg:w="14"/><text x="14.4405%" y="271.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (33 samples, 0.07%)</title><rect x="14.1581%" y="277" width="0.0669%" height="15" fill="rgb(250,143,38)" fg:x="6989" fg:w="33"/><text x="14.4081%" y="287.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (43 samples, 0.09%)</title><rect x="14.1480%" y="293" width="0.0871%" height="15" fill="rgb(248,25,0)" fg:x="6984" fg:w="43"/><text x="14.3980%" y="303.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="14.2938%" y="261" width="0.0122%" height="15" fill="rgb(206,152,27)" fg:x="7056" fg:w="6"/><text x="14.5438%" y="271.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (6 samples, 0.01%)</title><rect x="14.3060%" y="261" width="0.0122%" height="15" fill="rgb(240,77,30)" fg:x="7062" fg:w="6"/><text x="14.5560%" y="271.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (27 samples, 0.05%)</title><rect x="14.2756%" y="277" width="0.0547%" height="15" fill="rgb(231,5,3)" fg:x="7047" fg:w="27"/><text x="14.5256%" y="287.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="14.3181%" y="261" width="0.0122%" height="15" fill="rgb(207,226,32)" fg:x="7068" fg:w="6"/><text x="14.5681%" y="271.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (48 samples, 0.10%)</title><rect x="14.2351%" y="293" width="0.0972%" height="15" fill="rgb(222,207,47)" fg:x="7027" fg:w="48"/><text x="14.4851%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.02%)</title><rect x="14.6321%" y="213" width="0.0162%" height="15" fill="rgb(229,115,45)" fg:x="7223" fg:w="8"/><text x="14.8821%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (13 samples, 0.03%)</title><rect x="14.6240%" y="229" width="0.0263%" height="15" fill="rgb(224,191,6)" fg:x="7219" fg:w="13"/><text x="14.8740%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (5 samples, 0.01%)</title><rect x="14.6686%" y="181" width="0.0101%" height="15" fill="rgb(230,227,24)" fg:x="7241" fg:w="5"/><text x="14.9186%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (19 samples, 0.04%)</title><rect x="14.6504%" y="213" width="0.0385%" height="15" fill="rgb(228,80,19)" fg:x="7232" fg:w="19"/><text x="14.9004%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (15 samples, 0.03%)</title><rect x="14.6585%" y="197" width="0.0304%" height="15" fill="rgb(247,229,0)" fg:x="7236" fg:w="15"/><text x="14.9085%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (5 samples, 0.01%)</title><rect x="14.6787%" y="181" width="0.0101%" height="15" fill="rgb(237,194,15)" fg:x="7246" fg:w="5"/><text x="14.9287%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (20 samples, 0.04%)</title><rect x="14.6504%" y="229" width="0.0405%" height="15" fill="rgb(219,203,20)" fg:x="7232" fg:w="20"/><text x="14.9004%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (44 samples, 0.09%)</title><rect x="14.6038%" y="245" width="0.0891%" height="15" fill="rgb(234,128,8)" fg:x="7209" fg:w="44"/><text x="14.8538%" y="255.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (171 samples, 0.35%)</title><rect x="14.3505%" y="261" width="0.3464%" height="15" fill="rgb(248,202,8)" fg:x="7084" fg:w="171"/><text x="14.6005%" y="271.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (8 samples, 0.02%)</title><rect x="14.7638%" y="213" width="0.0162%" height="15" fill="rgb(206,104,37)" fg:x="7288" fg:w="8"/><text x="15.0138%" y="223.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (29 samples, 0.06%)</title><rect x="14.7273%" y="229" width="0.0587%" height="15" fill="rgb(223,8,27)" fg:x="7270" fg:w="29"/><text x="14.9773%" y="239.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (47 samples, 0.10%)</title><rect x="14.7132%" y="245" width="0.0952%" height="15" fill="rgb(216,217,28)" fg:x="7263" fg:w="47"/><text x="14.9632%" y="255.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.02%)</title><rect x="14.7861%" y="229" width="0.0223%" height="15" fill="rgb(249,199,1)" fg:x="7299" fg:w="11"/><text x="15.0361%" y="239.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (8 samples, 0.02%)</title><rect x="14.8509%" y="213" width="0.0162%" height="15" fill="rgb(240,85,17)" fg:x="7331" fg:w="8"/><text x="15.1009%" y="223.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (33 samples, 0.07%)</title><rect x="14.8144%" y="229" width="0.0669%" height="15" fill="rgb(206,108,45)" fg:x="7313" fg:w="33"/><text x="15.0644%" y="239.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.01%)</title><rect x="14.8671%" y="213" width="0.0142%" height="15" fill="rgb(245,210,41)" fg:x="7339" fg:w="7"/><text x="15.1171%" y="223.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (6 samples, 0.01%)</title><rect x="14.8874%" y="213" width="0.0122%" height="15" fill="rgb(206,13,37)" fg:x="7349" fg:w="6"/><text x="15.1374%" y="223.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (52 samples, 0.11%)</title><rect x="14.8084%" y="245" width="0.1053%" height="15" fill="rgb(250,61,18)" fg:x="7310" fg:w="52"/><text x="15.0584%" y="255.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (16 samples, 0.03%)</title><rect x="14.8813%" y="229" width="0.0324%" height="15" fill="rgb(235,172,48)" fg:x="7346" fg:w="16"/><text x="15.1313%" y="239.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="14.9603%" y="213" width="0.0142%" height="15" fill="rgb(249,201,17)" fg:x="7385" fg:w="7"/><text x="15.2103%" y="223.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (6 samples, 0.01%)</title><rect x="14.9765%" y="213" width="0.0122%" height="15" fill="rgb(219,208,6)" fg:x="7393" fg:w="6"/><text x="15.2265%" y="223.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="14.9927%" y="197" width="0.0101%" height="15" fill="rgb(248,31,23)" fg:x="7401" fg:w="5"/><text x="15.2427%" y="207.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.02%)</title><rect x="14.9887%" y="213" width="0.0203%" height="15" fill="rgb(245,15,42)" fg:x="7399" fg:w="10"/><text x="15.2387%" y="223.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (38 samples, 0.08%)</title><rect x="14.9340%" y="229" width="0.0770%" height="15" fill="rgb(222,217,39)" fg:x="7372" fg:w="38"/><text x="15.1840%" y="239.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (53 samples, 0.11%)</title><rect x="14.9137%" y="245" width="0.1074%" height="15" fill="rgb(210,219,27)" fg:x="7362" fg:w="53"/><text x="15.1637%" y="255.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="15.0109%" y="229" width="0.0101%" height="15" fill="rgb(252,166,36)" fg:x="7410" fg:w="5"/><text x="15.2609%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.01%)</title><rect x="15.2804%" y="165" width="0.0101%" height="15" fill="rgb(245,132,34)" fg:x="7543" fg:w="5"/><text x="15.5304%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (8 samples, 0.02%)</title><rect x="15.2763%" y="181" width="0.0162%" height="15" fill="rgb(236,54,3)" fg:x="7541" fg:w="8"/><text x="15.5263%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (7 samples, 0.01%)</title><rect x="15.3026%" y="133" width="0.0142%" height="15" fill="rgb(241,173,43)" fg:x="7554" fg:w="7"/><text x="15.5526%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (16 samples, 0.03%)</title><rect x="15.2925%" y="165" width="0.0324%" height="15" fill="rgb(215,190,9)" fg:x="7549" fg:w="16"/><text x="15.5425%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (14 samples, 0.03%)</title><rect x="15.2966%" y="149" width="0.0284%" height="15" fill="rgb(242,101,16)" fg:x="7551" fg:w="14"/><text x="15.5466%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (31 samples, 0.06%)</title><rect x="15.2702%" y="197" width="0.0628%" height="15" fill="rgb(223,190,21)" fg:x="7538" fg:w="31"/><text x="15.5202%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (20 samples, 0.04%)</title><rect x="15.2925%" y="181" width="0.0405%" height="15" fill="rgb(215,228,25)" fg:x="7549" fg:w="20"/><text x="15.5425%" y="191.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (152 samples, 0.31%)</title><rect x="15.0312%" y="213" width="0.3079%" height="15" fill="rgb(225,36,22)" fg:x="7420" fg:w="152"/><text x="15.2812%" y="223.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.02%)</title><rect x="15.3472%" y="181" width="0.0182%" height="15" fill="rgb(251,106,46)" fg:x="7576" fg:w="9"/><text x="15.5972%" y="191.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (14 samples, 0.03%)</title><rect x="15.3452%" y="197" width="0.0284%" height="15" fill="rgb(208,90,1)" fg:x="7575" fg:w="14"/><text x="15.5952%" y="207.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="15.3736%" y="181" width="0.0101%" height="15" fill="rgb(243,10,4)" fg:x="7589" fg:w="5"/><text x="15.6236%" y="191.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (12 samples, 0.02%)</title><rect x="15.3736%" y="197" width="0.0243%" height="15" fill="rgb(212,137,27)" fg:x="7589" fg:w="12"/><text x="15.6236%" y="207.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.01%)</title><rect x="15.3837%" y="181" width="0.0142%" height="15" fill="rgb(231,220,49)" fg:x="7594" fg:w="7"/><text x="15.6337%" y="191.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.01%)</title><rect x="15.3979%" y="197" width="0.0142%" height="15" fill="rgb(237,96,20)" fg:x="7601" fg:w="7"/><text x="15.6479%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (11 samples, 0.02%)</title><rect x="15.5073%" y="117" width="0.0223%" height="15" fill="rgb(239,229,30)" fg:x="7655" fg:w="11"/><text x="15.7573%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (8 samples, 0.02%)</title><rect x="15.5133%" y="101" width="0.0162%" height="15" fill="rgb(219,65,33)" fg:x="7658" fg:w="8"/><text x="15.7633%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (13 samples, 0.03%)</title><rect x="15.5052%" y="149" width="0.0263%" height="15" fill="rgb(243,134,7)" fg:x="7654" fg:w="13"/><text x="15.7552%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.02%)</title><rect x="15.5073%" y="133" width="0.0243%" height="15" fill="rgb(216,177,54)" fg:x="7655" fg:w="12"/><text x="15.7573%" y="143.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (60 samples, 0.12%)</title><rect x="15.4120%" y="165" width="0.1215%" height="15" fill="rgb(211,160,20)" fg:x="7608" fg:w="60"/><text x="15.6620%" y="175.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (62 samples, 0.13%)</title><rect x="15.4120%" y="197" width="0.1256%" height="15" fill="rgb(239,85,39)" fg:x="7608" fg:w="62"/><text x="15.6620%" y="207.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (62 samples, 0.13%)</title><rect x="15.4120%" y="181" width="0.1256%" height="15" fill="rgb(232,125,22)" fg:x="7608" fg:w="62"/><text x="15.6620%" y="191.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (6 samples, 0.01%)</title><rect x="15.5538%" y="197" width="0.0122%" height="15" fill="rgb(244,57,34)" fg:x="7678" fg:w="6"/><text x="15.8038%" y="207.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="15.5559%" y="181" width="0.0101%" height="15" fill="rgb(214,203,32)" fg:x="7679" fg:w="5"/><text x="15.8059%" y="191.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (122 samples, 0.25%)</title><rect x="15.3391%" y="213" width="0.2471%" height="15" fill="rgb(207,58,43)" fg:x="7572" fg:w="122"/><text x="15.5891%" y="223.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (287 samples, 0.58%)</title><rect x="15.0251%" y="245" width="0.5814%" height="15" fill="rgb(215,193,15)" fg:x="7417" fg:w="287"/><text x="15.2751%" y="255.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (287 samples, 0.58%)</title><rect x="15.0251%" y="229" width="0.5814%" height="15" fill="rgb(232,15,44)" fg:x="7417" fg:w="287"/><text x="15.2751%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.01%)</title><rect x="15.5944%" y="213" width="0.0122%" height="15" fill="rgb(212,3,48)" fg:x="7698" fg:w="6"/><text x="15.8444%" y="223.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (10 samples, 0.02%)</title><rect x="15.6085%" y="245" width="0.0203%" height="15" fill="rgb(218,128,7)" fg:x="7705" fg:w="10"/><text x="15.8585%" y="255.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::update_statistic (9 samples, 0.02%)</title><rect x="15.6288%" y="245" width="0.0182%" height="15" fill="rgb(226,216,39)" fg:x="7715" fg:w="9"/><text x="15.8788%" y="255.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (10 samples, 0.02%)</title><rect x="15.6470%" y="245" width="0.0203%" height="15" fill="rgb(243,47,51)" fg:x="7724" fg:w="10"/><text x="15.8970%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.02%)</title><rect x="15.6794%" y="245" width="0.0162%" height="15" fill="rgb(241,183,40)" fg:x="7740" fg:w="8"/><text x="15.9294%" y="255.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (499 samples, 1.01%)</title><rect x="14.6969%" y="261" width="1.0109%" height="15" fill="rgb(231,217,32)" fg:x="7255" fg:w="499"/><text x="14.9469%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (12 samples, 0.02%)</title><rect x="15.7240%" y="261" width="0.0243%" height="15" fill="rgb(229,61,38)" fg:x="7762" fg:w="12"/><text x="15.9740%" y="271.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (699 samples, 1.42%)</title><rect x="14.3384%" y="293" width="1.4160%" height="15" fill="rgb(225,210,5)" fg:x="7078" fg:w="699"/><text x="14.5884%" y="303.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (697 samples, 1.41%)</title><rect x="14.3424%" y="277" width="1.4120%" height="15" fill="rgb(231,79,45)" fg:x="7080" fg:w="697"/><text x="14.5924%" y="287.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (6 samples, 0.01%)</title><rect x="15.7625%" y="277" width="0.0122%" height="15" fill="rgb(224,100,7)" fg:x="7781" fg:w="6"/><text x="16.0125%" y="287.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (10 samples, 0.02%)</title><rect x="15.7564%" y="293" width="0.0203%" height="15" fill="rgb(241,198,18)" fg:x="7778" fg:w="10"/><text x="16.0064%" y="303.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (5 samples, 0.01%)</title><rect x="15.7848%" y="277" width="0.0101%" height="15" fill="rgb(252,97,53)" fg:x="7792" fg:w="5"/><text x="16.0348%" y="287.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::update_statistic (11 samples, 0.02%)</title><rect x="15.7767%" y="293" width="0.0223%" height="15" fill="rgb(220,88,7)" fg:x="7788" fg:w="11"/><text x="16.0267%" y="303.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.02%)</title><rect x="15.7990%" y="277" width="0.0162%" height="15" fill="rgb(213,176,14)" fg:x="7799" fg:w="8"/><text x="16.0490%" y="287.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (10 samples, 0.02%)</title><rect x="15.7990%" y="293" width="0.0203%" height="15" fill="rgb(246,73,7)" fg:x="7799" fg:w="10"/><text x="16.0490%" y="303.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.02%)</title><rect x="15.8192%" y="293" width="0.0182%" height="15" fill="rgb(245,64,36)" fg:x="7809" fg:w="9"/><text x="16.0692%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.01%)</title><rect x="15.8537%" y="277" width="0.0101%" height="15" fill="rgb(245,80,10)" fg:x="7826" fg:w="5"/><text x="16.1037%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.02%)</title><rect x="15.8496%" y="293" width="0.0162%" height="15" fill="rgb(232,107,50)" fg:x="7824" fg:w="8"/><text x="16.0996%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="15.8678%" y="293" width="0.0101%" height="15" fill="rgb(253,3,0)" fg:x="7833" fg:w="5"/><text x="16.1178%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="15.8678%" y="277" width="0.0101%" height="15" fill="rgb(212,99,53)" fg:x="7833" fg:w="5"/><text x="16.1178%" y="287.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (904 samples, 1.83%)</title><rect x="14.0548%" y="309" width="1.8313%" height="15" fill="rgb(249,111,54)" fg:x="6938" fg:w="904"/><text x="14.3048%" y="319.50">d..</text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="15.8942%" y="309" width="0.0101%" height="15" fill="rgb(249,55,30)" fg:x="7846" fg:w="5"/><text x="16.1442%" y="319.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (1,223 samples, 2.48%)</title><rect x="13.4673%" y="341" width="2.4775%" height="15" fill="rgb(237,47,42)" fg:x="6648" fg:w="1223"/><text x="13.7173%" y="351.50">da..</text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (1,222 samples, 2.48%)</title><rect x="13.4693%" y="325" width="2.4755%" height="15" fill="rgb(211,20,18)" fg:x="6649" fg:w="1222"/><text x="13.7193%" y="335.50">da..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (18 samples, 0.04%)</title><rect x="15.9084%" y="309" width="0.0365%" height="15" fill="rgb(231,203,46)" fg:x="7853" fg:w="18"/><text x="16.1584%" y="319.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (9 samples, 0.02%)</title><rect x="15.9448%" y="341" width="0.0182%" height="15" fill="rgb(237,142,3)" fg:x="7871" fg:w="9"/><text x="16.1948%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::update_statistic (10 samples, 0.02%)</title><rect x="15.9630%" y="341" width="0.0203%" height="15" fill="rgb(241,107,1)" fg:x="7880" fg:w="10"/><text x="16.2130%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (8 samples, 0.02%)</title><rect x="15.9671%" y="325" width="0.0162%" height="15" fill="rgb(229,83,13)" fg:x="7882" fg:w="8"/><text x="16.2171%" y="335.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.02%)</title><rect x="15.9853%" y="325" width="0.0162%" height="15" fill="rgb(241,91,40)" fg:x="7891" fg:w="8"/><text x="16.2353%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="15.9914%" y="309" width="0.0101%" height="15" fill="rgb(225,3,45)" fg:x="7894" fg:w="5"/><text x="16.2414%" y="319.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (10 samples, 0.02%)</title><rect x="15.9833%" y="341" width="0.0203%" height="15" fill="rgb(244,223,14)" fg:x="7890" fg:w="10"/><text x="16.2333%" y="351.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.02%)</title><rect x="16.0036%" y="341" width="0.0182%" height="15" fill="rgb(224,124,37)" fg:x="7900" fg:w="9"/><text x="16.2536%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="16.0400%" y="341" width="0.0101%" height="15" fill="rgb(251,171,30)" fg:x="7918" fg:w="5"/><text x="16.2900%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (1,539 samples, 3.12%)</title><rect x="12.9345%" y="357" width="3.1177%" height="15" fill="rgb(236,46,54)" fg:x="6385" fg:w="1539"/><text x="13.1845%" y="367.50">dat..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (19 samples, 0.04%)</title><rect x="16.0684%" y="357" width="0.0385%" height="15" fill="rgb(245,213,5)" fg:x="7932" fg:w="19"/><text x="16.3184%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (2,131 samples, 4.32%)</title><rect x="11.7940%" y="373" width="4.3169%" height="15" fill="rgb(230,144,27)" fg:x="5822" fg:w="2131"/><text x="12.0440%" y="383.50">datab..</text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (2,132 samples, 4.32%)</title><rect x="11.7940%" y="389" width="4.3189%" height="15" fill="rgb(220,86,6)" fg:x="5822" fg:w="2132"/><text x="12.0440%" y="399.50">datab..</text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.02%)</title><rect x="16.1312%" y="357" width="0.0182%" height="15" fill="rgb(240,20,13)" fg:x="7963" fg:w="9"/><text x="16.3812%" y="367.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (19 samples, 0.04%)</title><rect x="16.1211%" y="373" width="0.0385%" height="15" fill="rgb(217,89,34)" fg:x="7958" fg:w="19"/><text x="16.3711%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (30 samples, 0.06%)</title><rect x="16.1170%" y="389" width="0.0608%" height="15" fill="rgb(229,13,5)" fg:x="7956" fg:w="30"/><text x="16.3670%" y="399.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::update_statistic (8 samples, 0.02%)</title><rect x="16.1778%" y="389" width="0.0162%" height="15" fill="rgb(244,67,35)" fg:x="7986" fg:w="8"/><text x="16.4278%" y="399.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="16.2021%" y="373" width="0.0101%" height="15" fill="rgb(221,40,2)" fg:x="7998" fg:w="5"/><text x="16.4521%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (10 samples, 0.02%)</title><rect x="16.1940%" y="389" width="0.0203%" height="15" fill="rgb(237,157,21)" fg:x="7994" fg:w="10"/><text x="16.4440%" y="399.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (14 samples, 0.03%)</title><rect x="16.2142%" y="389" width="0.0284%" height="15" fill="rgb(222,94,11)" fg:x="8004" fg:w="14"/><text x="16.4642%" y="399.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (9 samples, 0.02%)</title><rect x="16.2446%" y="389" width="0.0182%" height="15" fill="rgb(249,113,6)" fg:x="8019" fg:w="9"/><text x="16.4946%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="16.2689%" y="389" width="0.0101%" height="15" fill="rgb(238,137,36)" fg:x="8031" fg:w="5"/><text x="16.5189%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_small (8 samples, 0.02%)</title><rect x="16.2791%" y="389" width="0.0162%" height="15" fill="rgb(210,102,26)" fg:x="8036" fg:w="8"/><text x="16.5291%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.01%)</title><rect x="16.2993%" y="357" width="0.0101%" height="15" fill="rgb(218,30,30)" fg:x="8046" fg:w="5"/><text x="16.5493%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="16.2953%" y="389" width="0.0162%" height="15" fill="rgb(214,67,26)" fg:x="8044" fg:w="8"/><text x="16.5453%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.02%)</title><rect x="16.2953%" y="373" width="0.0162%" height="15" fill="rgb(251,9,53)" fg:x="8044" fg:w="8"/><text x="16.5453%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (2,681 samples, 5.43%)</title><rect x="10.9027%" y="405" width="5.4311%" height="15" fill="rgb(228,204,25)" fg:x="5382" fg:w="2681"/><text x="11.1527%" y="415.50">databen..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.01%)</title><rect x="16.3216%" y="389" width="0.0122%" height="15" fill="rgb(207,153,8)" fg:x="8057" fg:w="6"/><text x="16.5716%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="16.3560%" y="405" width="0.0101%" height="15" fill="rgb(242,9,16)" fg:x="8074" fg:w="5"/><text x="16.6060%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (3,292 samples, 6.67%)</title><rect x="9.7581%" y="421" width="6.6688%" height="15" fill="rgb(217,211,10)" fg:x="4817" fg:w="3292"/><text x="10.0081%" y="431.50">databend-..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (26 samples, 0.05%)</title><rect x="16.3743%" y="405" width="0.0527%" height="15" fill="rgb(219,228,52)" fg:x="8083" fg:w="26"/><text x="16.6243%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (24 samples, 0.05%)</title><rect x="16.7754%" y="389" width="0.0486%" height="15" fill="rgb(231,92,29)" fg:x="8281" fg:w="24"/><text x="17.0254%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (13 samples, 0.03%)</title><rect x="16.7977%" y="373" width="0.0263%" height="15" fill="rgb(232,8,23)" fg:x="8292" fg:w="13"/><text x="17.0477%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (200 samples, 0.41%)</title><rect x="16.4492%" y="405" width="0.4052%" height="15" fill="rgb(216,211,34)" fg:x="8120" fg:w="200"/><text x="16.6992%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (13 samples, 0.03%)</title><rect x="16.8281%" y="389" width="0.0263%" height="15" fill="rgb(236,151,0)" fg:x="8307" fg:w="13"/><text x="17.0781%" y="399.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (15 samples, 0.03%)</title><rect x="16.8544%" y="405" width="0.0304%" height="15" fill="rgb(209,168,3)" fg:x="8320" fg:w="15"/><text x="17.1044%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_size (5 samples, 0.01%)</title><rect x="16.9131%" y="389" width="0.0101%" height="15" fill="rgb(208,129,28)" fg:x="8349" fg:w="5"/><text x="17.1631%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (26 samples, 0.05%)</title><rect x="16.8868%" y="405" width="0.0527%" height="15" fill="rgb(229,78,22)" fg:x="8336" fg:w="26"/><text x="17.1368%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.02%)</title><rect x="16.9233%" y="389" width="0.0162%" height="15" fill="rgb(228,187,13)" fg:x="8354" fg:w="8"/><text x="17.1733%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.01%)</title><rect x="16.9293%" y="373" width="0.0101%" height="15" fill="rgb(240,119,24)" fg:x="8357" fg:w="5"/><text x="17.1793%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (32 samples, 0.06%)</title><rect x="17.0286%" y="389" width="0.0648%" height="15" fill="rgb(209,194,42)" fg:x="8406" fg:w="32"/><text x="17.2786%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_find_by_ptr (9 samples, 0.02%)</title><rect x="17.0934%" y="389" width="0.0182%" height="15" fill="rgb(247,200,46)" fg:x="8438" fg:w="9"/><text x="17.3434%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (6 samples, 0.01%)</title><rect x="17.1117%" y="389" width="0.0122%" height="15" fill="rgb(218,76,16)" fg:x="8447" fg:w="6"/><text x="17.3617%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_small (129 samples, 0.26%)</title><rect x="16.9395%" y="405" width="0.2613%" height="15" fill="rgb(225,21,48)" fg:x="8362" fg:w="129"/><text x="17.1895%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (38 samples, 0.08%)</title><rect x="17.1238%" y="389" width="0.0770%" height="15" fill="rgb(239,223,50)" fg:x="8453" fg:w="38"/><text x="17.3738%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (398 samples, 0.81%)</title><rect x="16.4330%" y="421" width="0.8063%" height="15" fill="rgb(244,45,21)" fg:x="8112" fg:w="398"/><text x="16.6830%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (6 samples, 0.01%)</title><rect x="17.2271%" y="405" width="0.0122%" height="15" fill="rgb(232,33,43)" fg:x="8504" fg:w="6"/><text x="17.4771%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (26 samples, 0.05%)</title><rect x="17.5695%" y="357" width="0.0527%" height="15" fill="rgb(209,8,3)" fg:x="8673" fg:w="26"/><text x="17.8195%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.01%)</title><rect x="17.6120%" y="341" width="0.0101%" height="15" fill="rgb(214,25,53)" fg:x="8694" fg:w="5"/><text x="17.8620%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (11 samples, 0.02%)</title><rect x="17.6222%" y="357" width="0.0223%" height="15" fill="rgb(254,186,54)" fg:x="8699" fg:w="11"/><text x="17.8722%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (183 samples, 0.37%)</title><rect x="17.2757%" y="373" width="0.3707%" height="15" fill="rgb(208,174,49)" fg:x="8528" fg:w="183"/><text x="17.5257%" y="383.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (14 samples, 0.03%)</title><rect x="17.6465%" y="373" width="0.0284%" height="15" fill="rgb(233,191,51)" fg:x="8711" fg:w="14"/><text x="17.8965%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_size (6 samples, 0.01%)</title><rect x="17.7214%" y="357" width="0.0122%" height="15" fill="rgb(222,134,10)" fg:x="8748" fg:w="6"/><text x="17.9714%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (33 samples, 0.07%)</title><rect x="17.6789%" y="373" width="0.0669%" height="15" fill="rgb(230,226,20)" fg:x="8727" fg:w="33"/><text x="17.9289%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (6 samples, 0.01%)</title><rect x="17.7336%" y="357" width="0.0122%" height="15" fill="rgb(251,111,25)" fg:x="8754" fg:w="6"/><text x="17.9836%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (12 samples, 0.02%)</title><rect x="17.7883%" y="357" width="0.0243%" height="15" fill="rgb(224,40,46)" fg:x="8781" fg:w="12"/><text x="18.0383%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (6 samples, 0.01%)</title><rect x="17.8187%" y="357" width="0.0122%" height="15" fill="rgb(236,108,47)" fg:x="8796" fg:w="6"/><text x="18.0687%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_small (77 samples, 0.16%)</title><rect x="17.7457%" y="373" width="0.1560%" height="15" fill="rgb(234,93,0)" fg:x="8760" fg:w="77"/><text x="17.9957%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (35 samples, 0.07%)</title><rect x="17.8308%" y="357" width="0.0709%" height="15" fill="rgb(224,213,32)" fg:x="8802" fg:w="35"/><text x="18.0808%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="17.9017%" y="373" width="0.0122%" height="15" fill="rgb(251,11,48)" fg:x="8837" fg:w="6"/><text x="18.1517%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="17.9017%" y="357" width="0.0122%" height="15" fill="rgb(236,173,5)" fg:x="8837" fg:w="6"/><text x="18.1517%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (6 samples, 0.01%)</title><rect x="17.9443%" y="373" width="0.0122%" height="15" fill="rgb(230,95,12)" fg:x="8858" fg:w="6"/><text x="18.1943%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (356 samples, 0.72%)</title><rect x="17.2413%" y="389" width="0.7212%" height="15" fill="rgb(232,209,1)" fg:x="8511" fg:w="356"/><text x="17.4913%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.03%)</title><rect x="18.1326%" y="325" width="0.0284%" height="15" fill="rgb(232,6,1)" fg:x="8951" fg:w="14"/><text x="18.3826%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (6 samples, 0.01%)</title><rect x="18.1489%" y="309" width="0.0122%" height="15" fill="rgb(210,224,50)" fg:x="8959" fg:w="6"/><text x="18.3989%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (100 samples, 0.20%)</title><rect x="17.9767%" y="341" width="0.2026%" height="15" fill="rgb(228,127,35)" fg:x="8874" fg:w="100"/><text x="18.2267%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (8 samples, 0.02%)</title><rect x="18.1630%" y="325" width="0.0162%" height="15" fill="rgb(245,102,45)" fg:x="8966" fg:w="8"/><text x="18.4130%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (13 samples, 0.03%)</title><rect x="18.1792%" y="341" width="0.0263%" height="15" fill="rgb(214,1,49)" fg:x="8974" fg:w="13"/><text x="18.4292%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.02%)</title><rect x="18.2096%" y="341" width="0.0203%" height="15" fill="rgb(226,163,40)" fg:x="8989" fg:w="10"/><text x="18.4596%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (8 samples, 0.02%)</title><rect x="18.2481%" y="325" width="0.0162%" height="15" fill="rgb(239,212,28)" fg:x="9008" fg:w="8"/><text x="18.4981%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_small (38 samples, 0.08%)</title><rect x="18.2299%" y="341" width="0.0770%" height="15" fill="rgb(220,20,13)" fg:x="8999" fg:w="38"/><text x="18.4799%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (16 samples, 0.03%)</title><rect x="18.2745%" y="325" width="0.0324%" height="15" fill="rgb(210,164,35)" fg:x="9021" fg:w="16"/><text x="18.5245%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (175 samples, 0.35%)</title><rect x="17.9645%" y="357" width="0.3545%" height="15" fill="rgb(248,109,41)" fg:x="8868" fg:w="175"/><text x="18.2145%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.01%)</title><rect x="18.4325%" y="293" width="0.0142%" height="15" fill="rgb(238,23,50)" fg:x="9099" fg:w="7"/><text x="18.6825%" y="303.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (61 samples, 0.12%)</title><rect x="18.3271%" y="309" width="0.1236%" height="15" fill="rgb(211,48,49)" fg:x="9047" fg:w="61"/><text x="18.5771%" y="319.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.01%)</title><rect x="18.4507%" y="309" width="0.0142%" height="15" fill="rgb(223,36,21)" fg:x="9108" fg:w="7"/><text x="18.7007%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.01%)</title><rect x="18.4689%" y="309" width="0.0142%" height="15" fill="rgb(207,123,46)" fg:x="9117" fg:w="7"/><text x="18.7189%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (9 samples, 0.02%)</title><rect x="18.4932%" y="293" width="0.0182%" height="15" fill="rgb(240,218,32)" fg:x="9129" fg:w="9"/><text x="18.7432%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_small (26 samples, 0.05%)</title><rect x="18.4831%" y="309" width="0.0527%" height="15" fill="rgb(252,5,43)" fg:x="9124" fg:w="26"/><text x="18.7331%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (11 samples, 0.02%)</title><rect x="18.5135%" y="293" width="0.0223%" height="15" fill="rgb(252,84,19)" fg:x="9139" fg:w="11"/><text x="18.7635%" y="303.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (113 samples, 0.23%)</title><rect x="18.3231%" y="325" width="0.2289%" height="15" fill="rgb(243,152,39)" fg:x="9045" fg:w="113"/><text x="18.5731%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="18.6209%" y="261" width="0.0101%" height="15" fill="rgb(234,160,15)" fg:x="9192" fg:w="5"/><text x="18.8709%" y="271.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (39 samples, 0.08%)</title><rect x="18.5581%" y="277" width="0.0790%" height="15" fill="rgb(237,34,20)" fg:x="9161" fg:w="39"/><text x="18.8081%" y="287.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="18.6371%" y="277" width="0.0101%" height="15" fill="rgb(229,97,13)" fg:x="9200" fg:w="5"/><text x="18.8871%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.02%)</title><rect x="18.6472%" y="277" width="0.0243%" height="15" fill="rgb(234,71,50)" fg:x="9205" fg:w="12"/><text x="18.8972%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (8 samples, 0.02%)</title><rect x="18.6816%" y="261" width="0.0162%" height="15" fill="rgb(253,155,4)" fg:x="9222" fg:w="8"/><text x="18.9316%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_small (22 samples, 0.04%)</title><rect x="18.6715%" y="277" width="0.0446%" height="15" fill="rgb(222,185,37)" fg:x="9217" fg:w="22"/><text x="18.9215%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (7 samples, 0.01%)</title><rect x="18.7019%" y="261" width="0.0142%" height="15" fill="rgb(251,177,13)" fg:x="9232" fg:w="7"/><text x="18.9519%" y="271.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (87 samples, 0.18%)</title><rect x="18.5540%" y="293" width="0.1762%" height="15" fill="rgb(250,179,40)" fg:x="9159" fg:w="87"/><text x="18.8040%" y="303.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (18 samples, 0.04%)</title><rect x="18.7343%" y="245" width="0.0365%" height="15" fill="rgb(242,44,2)" fg:x="9248" fg:w="18"/><text x="18.9843%" y="255.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (31 samples, 0.06%)</title><rect x="18.7323%" y="261" width="0.0628%" height="15" fill="rgb(216,177,13)" fg:x="9247" fg:w="31"/><text x="18.9823%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_small (7 samples, 0.01%)</title><rect x="18.7809%" y="245" width="0.0142%" height="15" fill="rgb(216,106,43)" fg:x="9271" fg:w="7"/><text x="19.0309%" y="255.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (7 samples, 0.01%)</title><rect x="18.7971%" y="245" width="0.0142%" height="15" fill="rgb(216,183,2)" fg:x="9279" fg:w="7"/><text x="19.0471%" y="255.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (11 samples, 0.02%)</title><rect x="18.7951%" y="261" width="0.0223%" height="15" fill="rgb(249,75,3)" fg:x="9278" fg:w="11"/><text x="19.0451%" y="271.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (48 samples, 0.10%)</title><rect x="18.7323%" y="277" width="0.0972%" height="15" fill="rgb(219,67,39)" fg:x="9247" fg:w="48"/><text x="18.9823%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="18.8477%" y="261" width="0.0101%" height="15" fill="rgb(253,228,2)" fg:x="9304" fg:w="5"/><text x="19.0977%" y="271.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (17 samples, 0.03%)</title><rect x="18.8356%" y="277" width="0.0344%" height="15" fill="rgb(235,138,27)" fg:x="9298" fg:w="17"/><text x="19.0856%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_small (5 samples, 0.01%)</title><rect x="18.8721%" y="277" width="0.0101%" height="15" fill="rgb(236,97,51)" fg:x="9316" fg:w="5"/><text x="19.1221%" y="287.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (77 samples, 0.16%)</title><rect x="18.7302%" y="293" width="0.1560%" height="15" fill="rgb(240,80,30)" fg:x="9246" fg:w="77"/><text x="18.9802%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.01%)</title><rect x="18.8903%" y="293" width="0.0122%" height="15" fill="rgb(230,178,19)" fg:x="9325" fg:w="6"/><text x="19.1403%" y="303.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (178 samples, 0.36%)</title><rect x="18.5520%" y="309" width="0.3606%" height="15" fill="rgb(210,190,27)" fg:x="9158" fg:w="178"/><text x="18.8020%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (14 samples, 0.03%)</title><rect x="18.9126%" y="309" width="0.0284%" height="15" fill="rgb(222,107,31)" fg:x="9336" fg:w="14"/><text x="19.1626%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="18.9409%" y="309" width="0.0101%" height="15" fill="rgb(216,127,34)" fg:x="9350" fg:w="5"/><text x="19.1909%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (199 samples, 0.40%)</title><rect x="18.5520%" y="325" width="0.4031%" height="15" fill="rgb(234,116,52)" fg:x="9158" fg:w="199"/><text x="18.8020%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_small (6 samples, 0.01%)</title><rect x="18.9652%" y="325" width="0.0122%" height="15" fill="rgb(222,124,15)" fg:x="9362" fg:w="6"/><text x="19.2152%" y="335.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (326 samples, 0.66%)</title><rect x="18.3190%" y="341" width="0.6604%" height="15" fill="rgb(231,179,28)" fg:x="9043" fg:w="326"/><text x="18.5690%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::binder::bind_context::ColumnBinding&gt; (7 samples, 0.01%)</title><rect x="18.9794%" y="325" width="0.0142%" height="15" fill="rgb(226,93,45)" fg:x="9369" fg:w="7"/><text x="19.2294%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (10 samples, 0.02%)</title><rect x="18.9794%" y="341" width="0.0203%" height="15" fill="rgb(215,8,51)" fg:x="9369" fg:w="10"/><text x="19.2294%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_expression::values::Scalar&gt; (10 samples, 0.02%)</title><rect x="19.0078%" y="325" width="0.0203%" height="15" fill="rgb(223,106,5)" fg:x="9383" fg:w="10"/><text x="19.2578%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (19 samples, 0.04%)</title><rect x="19.0058%" y="341" width="0.0385%" height="15" fill="rgb(250,191,5)" fg:x="9382" fg:w="19"/><text x="19.2558%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (362 samples, 0.73%)</title><rect x="18.3190%" y="357" width="0.7333%" height="15" fill="rgb(242,132,44)" fg:x="9043" fg:w="362"/><text x="18.5690%" y="367.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (545 samples, 1.10%)</title><rect x="17.9625%" y="373" width="1.1040%" height="15" fill="rgb(251,152,29)" fg:x="8867" fg:w="545"/><text x="18.2125%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (7 samples, 0.01%)</title><rect x="19.0686%" y="373" width="0.0142%" height="15" fill="rgb(218,179,5)" fg:x="9413" fg:w="7"/><text x="19.3186%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_expression::values::Scalar&gt; (15 samples, 0.03%)</title><rect x="19.0949%" y="357" width="0.0304%" height="15" fill="rgb(227,67,19)" fg:x="9426" fg:w="15"/><text x="19.3449%" y="367.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.01%)</title><rect x="19.1253%" y="357" width="0.0122%" height="15" fill="rgb(233,119,31)" fg:x="9441" fg:w="6"/><text x="19.3753%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.02%)</title><rect x="19.1374%" y="357" width="0.0162%" height="15" fill="rgb(241,120,22)" fg:x="9447" fg:w="8"/><text x="19.3874%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (37 samples, 0.07%)</title><rect x="19.0908%" y="373" width="0.0750%" height="15" fill="rgb(224,102,30)" fg:x="9424" fg:w="37"/><text x="19.3408%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (596 samples, 1.21%)</title><rect x="17.9625%" y="389" width="1.2074%" height="15" fill="rgb(210,164,37)" fg:x="8867" fg:w="596"/><text x="18.2125%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.02%)</title><rect x="19.1759%" y="389" width="0.0162%" height="15" fill="rgb(226,191,16)" fg:x="9466" fg:w="8"/><text x="19.4259%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_small (6 samples, 0.01%)</title><rect x="19.1921%" y="389" width="0.0122%" height="15" fill="rgb(214,40,45)" fg:x="9474" fg:w="6"/><text x="19.4421%" y="399.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (978 samples, 1.98%)</title><rect x="17.2393%" y="405" width="1.9812%" height="15" fill="rgb(244,29,26)" fg:x="8510" fg:w="978"/><text x="17.4893%" y="415.50">d..</text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="19.2205%" y="373" width="0.0101%" height="15" fill="rgb(216,16,5)" fg:x="9488" fg:w="5"/><text x="19.4705%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::binder::bind_context::ColumnBinding&gt; (6 samples, 0.01%)</title><rect x="19.2205%" y="389" width="0.0122%" height="15" fill="rgb(249,76,35)" fg:x="9488" fg:w="6"/><text x="19.4705%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="19.2326%" y="389" width="0.0101%" height="15" fill="rgb(207,11,44)" fg:x="9494" fg:w="5"/><text x="19.4826%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (15 samples, 0.03%)</title><rect x="19.2205%" y="405" width="0.0304%" height="15" fill="rgb(228,190,49)" fg:x="9488" fg:w="15"/><text x="19.4705%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (995 samples, 2.02%)</title><rect x="17.2393%" y="421" width="2.0156%" height="15" fill="rgb(214,173,12)" fg:x="8510" fg:w="995"/><text x="17.4893%" y="431.50">d..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::join_node::JoinNode::cardinality (4,925 samples, 9.98%)</title><rect x="9.3206%" y="437" width="9.9769%" height="15" fill="rgb(218,26,35)" fg:x="4601" fg:w="4925"/><text x="9.5706%" y="447.50">databend-query..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::util::union (6 samples, 0.01%)</title><rect x="19.2975%" y="437" width="0.0122%" height="15" fill="rgb(220,200,19)" fg:x="9526" fg:w="6"/><text x="19.5475%" y="447.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.01%)</title><rect x="19.2995%" y="421" width="0.0101%" height="15" fill="rgb(239,95,49)" fg:x="9527" fg:w="5"/><text x="19.5495%" y="431.50"></text></g><g><title>databend-query`alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="19.2995%" y="405" width="0.0101%" height="15" fill="rgb(235,85,53)" fg:x="9527" fg:w="5"/><text x="19.5495%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::binder::bind_context::ColumnBinding&gt; (5 samples, 0.01%)</title><rect x="19.3116%" y="421" width="0.0101%" height="15" fill="rgb(233,133,31)" fg:x="9533" fg:w="5"/><text x="19.5616%" y="431.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(common_sql::planner::plans::scalar_expr::ScalarExpr,common_sql::planner::plans::scalar_expr::ScalarExpr)&gt;&gt; (8 samples, 0.02%)</title><rect x="19.3116%" y="437" width="0.0162%" height="15" fill="rgb(218,25,20)" fg:x="9533" fg:w="8"/><text x="19.5616%" y="447.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(common_sql::planner::plans::scalar_expr::ScalarExpr,common_sql::planner::plans::scalar_expr::ScalarExpr)&gt;&gt; (9 samples, 0.02%)</title><rect x="19.3279%" y="421" width="0.0182%" height="15" fill="rgb(252,210,38)" fg:x="9541" fg:w="9"/><text x="19.5779%" y="431.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(common_sql::planner::plans::scalar_expr::ScalarExpr,common_sql::planner::plans::scalar_expr::ScalarExpr)&gt;&gt; (5 samples, 0.01%)</title><rect x="19.3461%" y="405" width="0.0101%" height="15" fill="rgb(242,134,21)" fg:x="9550" fg:w="5"/><text x="19.5961%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(common_sql::planner::plans::scalar_expr::ScalarExpr,common_sql::planner::plans::scalar_expr::ScalarExpr)&gt;&gt; (8 samples, 0.02%)</title><rect x="19.3643%" y="373" width="0.0162%" height="15" fill="rgb(213,28,48)" fg:x="9559" fg:w="8"/><text x="19.6143%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (11 samples, 0.02%)</title><rect x="19.3805%" y="373" width="0.0223%" height="15" fill="rgb(250,196,2)" fg:x="9567" fg:w="11"/><text x="19.6305%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (24 samples, 0.05%)</title><rect x="19.3643%" y="389" width="0.0486%" height="15" fill="rgb(227,5,17)" fg:x="9559" fg:w="24"/><text x="19.6143%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (35 samples, 0.07%)</title><rect x="19.3562%" y="405" width="0.0709%" height="15" fill="rgb(221,226,24)" fg:x="9555" fg:w="35"/><text x="19.6062%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (47 samples, 0.10%)</title><rect x="19.3461%" y="421" width="0.0952%" height="15" fill="rgb(211,5,48)" fg:x="9550" fg:w="47"/><text x="19.5961%" y="431.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (61 samples, 0.12%)</title><rect x="19.3279%" y="437" width="0.1236%" height="15" fill="rgb(219,150,6)" fg:x="9541" fg:w="61"/><text x="19.5779%" y="447.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::emit_csg_cmp (5,068 samples, 10.27%)</title><rect x="9.1970%" y="453" width="10.2666%" height="15" fill="rgb(251,46,16)" fg:x="4540" fg:w="5068"/><text x="9.4470%" y="463.50">databend-query`..</text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="19.4737%" y="373" width="0.0162%" height="15" fill="rgb(220,204,40)" fg:x="9613" fg:w="8"/><text x="19.7237%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="19.4778%" y="357" width="0.0122%" height="15" fill="rgb(211,85,2)" fg:x="9615" fg:w="6"/><text x="19.7278%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.01%)</title><rect x="19.4798%" y="341" width="0.0101%" height="15" fill="rgb(229,17,7)" fg:x="9616" fg:w="5"/><text x="19.7298%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="19.4737%" y="389" width="0.0243%" height="15" fill="rgb(239,72,28)" fg:x="9613" fg:w="12"/><text x="19.7237%" y="399.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.03%)</title><rect x="19.4717%" y="405" width="0.0324%" height="15" fill="rgb(230,47,54)" fg:x="9612" fg:w="16"/><text x="19.7217%" y="415.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="19.5061%" y="357" width="0.0142%" height="15" fill="rgb(214,50,8)" fg:x="9629" fg:w="7"/><text x="19.7561%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="19.5102%" y="341" width="0.0101%" height="15" fill="rgb(216,198,43)" fg:x="9631" fg:w="5"/><text x="19.7602%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="19.5061%" y="373" width="0.0182%" height="15" fill="rgb(234,20,35)" fg:x="9629" fg:w="9"/><text x="19.7561%" y="383.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="19.5061%" y="389" width="0.0203%" height="15" fill="rgb(254,45,19)" fg:x="9629" fg:w="10"/><text x="19.7561%" y="399.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="19.5284%" y="373" width="0.0101%" height="15" fill="rgb(219,14,44)" fg:x="9640" fg:w="5"/><text x="19.7784%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="19.5284%" y="357" width="0.0101%" height="15" fill="rgb(217,220,26)" fg:x="9640" fg:w="5"/><text x="19.7784%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="19.5406%" y="325" width="0.0203%" height="15" fill="rgb(213,158,28)" fg:x="9646" fg:w="10"/><text x="19.7906%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.02%)</title><rect x="19.5446%" y="309" width="0.0162%" height="15" fill="rgb(252,51,52)" fg:x="9648" fg:w="8"/><text x="19.7946%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.01%)</title><rect x="19.5466%" y="293" width="0.0142%" height="15" fill="rgb(246,89,16)" fg:x="9649" fg:w="7"/><text x="19.7966%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.01%)</title><rect x="19.5507%" y="277" width="0.0101%" height="15" fill="rgb(216,158,49)" fg:x="9651" fg:w="5"/><text x="19.8007%" y="287.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (13 samples, 0.03%)</title><rect x="19.5406%" y="341" width="0.0263%" height="15" fill="rgb(236,107,19)" fg:x="9646" fg:w="13"/><text x="19.7906%" y="351.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.03%)</title><rect x="19.5385%" y="357" width="0.0344%" height="15" fill="rgb(228,185,30)" fg:x="9645" fg:w="17"/><text x="19.7885%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="19.5811%" y="325" width="0.0101%" height="15" fill="rgb(246,134,8)" fg:x="9666" fg:w="5"/><text x="19.8311%" y="335.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="19.5750%" y="341" width="0.0243%" height="15" fill="rgb(214,143,50)" fg:x="9663" fg:w="12"/><text x="19.8250%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (17 samples, 0.03%)</title><rect x="19.5730%" y="357" width="0.0344%" height="15" fill="rgb(228,75,8)" fg:x="9662" fg:w="17"/><text x="19.8230%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (43 samples, 0.09%)</title><rect x="19.5385%" y="373" width="0.0871%" height="15" fill="rgb(207,175,4)" fg:x="9645" fg:w="43"/><text x="19.7885%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (50 samples, 0.10%)</title><rect x="19.5264%" y="389" width="0.1013%" height="15" fill="rgb(205,108,24)" fg:x="9639" fg:w="50"/><text x="19.7764%" y="399.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (65 samples, 0.13%)</title><rect x="19.5041%" y="405" width="0.1317%" height="15" fill="rgb(244,120,49)" fg:x="9628" fg:w="65"/><text x="19.7541%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="19.6378%" y="405" width="0.0122%" height="15" fill="rgb(223,47,38)" fg:x="9694" fg:w="6"/><text x="19.8878%" y="415.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (91 samples, 0.18%)</title><rect x="19.4697%" y="421" width="0.1843%" height="15" fill="rgb(229,179,11)" fg:x="9611" fg:w="91"/><text x="19.7197%" y="431.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (14 samples, 0.03%)</title><rect x="19.6884%" y="373" width="0.0284%" height="15" fill="rgb(231,122,1)" fg:x="9719" fg:w="14"/><text x="19.9384%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (13 samples, 0.03%)</title><rect x="19.6905%" y="357" width="0.0263%" height="15" fill="rgb(245,119,9)" fg:x="9720" fg:w="13"/><text x="19.9405%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.01%)</title><rect x="19.7026%" y="341" width="0.0142%" height="15" fill="rgb(241,163,25)" fg:x="9726" fg:w="7"/><text x="19.9526%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.01%)</title><rect x="19.7067%" y="325" width="0.0101%" height="15" fill="rgb(217,214,3)" fg:x="9728" fg:w="5"/><text x="19.9567%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (15 samples, 0.03%)</title><rect x="19.6884%" y="389" width="0.0304%" height="15" fill="rgb(240,86,28)" fg:x="9719" fg:w="15"/><text x="19.9384%" y="399.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.01%)</title><rect x="19.8485%" y="325" width="0.0122%" height="15" fill="rgb(215,47,9)" fg:x="9798" fg:w="6"/><text x="20.0985%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (14 samples, 0.03%)</title><rect x="19.8748%" y="293" width="0.0284%" height="15" fill="rgb(252,25,45)" fg:x="9811" fg:w="14"/><text x="20.1248%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (23 samples, 0.05%)</title><rect x="19.8606%" y="325" width="0.0466%" height="15" fill="rgb(251,164,9)" fg:x="9804" fg:w="23"/><text x="20.1106%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (17 samples, 0.03%)</title><rect x="19.8728%" y="309" width="0.0344%" height="15" fill="rgb(233,194,0)" fg:x="9810" fg:w="17"/><text x="20.1228%" y="319.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (55 samples, 0.11%)</title><rect x="19.7978%" y="341" width="0.1114%" height="15" fill="rgb(249,111,24)" fg:x="9773" fg:w="55"/><text x="20.0478%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (92 samples, 0.19%)</title><rect x="19.7391%" y="357" width="0.1864%" height="15" fill="rgb(250,223,3)" fg:x="9744" fg:w="92"/><text x="19.9891%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (98 samples, 0.20%)</title><rect x="19.7310%" y="373" width="0.1985%" height="15" fill="rgb(236,178,37)" fg:x="9740" fg:w="98"/><text x="19.9810%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="19.9295%" y="373" width="0.0122%" height="15" fill="rgb(241,158,50)" fg:x="9838" fg:w="6"/><text x="20.1795%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.02%)</title><rect x="19.9923%" y="309" width="0.0162%" height="15" fill="rgb(213,121,41)" fg:x="9869" fg:w="8"/><text x="20.2423%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.01%)</title><rect x="19.9943%" y="293" width="0.0142%" height="15" fill="rgb(240,92,3)" fg:x="9870" fg:w="7"/><text x="20.2443%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.01%)</title><rect x="19.9984%" y="277" width="0.0101%" height="15" fill="rgb(205,123,3)" fg:x="9872" fg:w="5"/><text x="20.2484%" y="287.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (19 samples, 0.04%)</title><rect x="19.9720%" y="325" width="0.0385%" height="15" fill="rgb(205,97,47)" fg:x="9859" fg:w="19"/><text x="20.2220%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (30 samples, 0.06%)</title><rect x="19.9558%" y="357" width="0.0608%" height="15" fill="rgb(247,152,14)" fg:x="9851" fg:w="30"/><text x="20.2058%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (29 samples, 0.06%)</title><rect x="19.9579%" y="341" width="0.0587%" height="15" fill="rgb(248,195,53)" fg:x="9852" fg:w="29"/><text x="20.2079%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="20.0308%" y="325" width="0.0122%" height="15" fill="rgb(226,201,16)" fg:x="9888" fg:w="6"/><text x="20.2808%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.01%)</title><rect x="20.0328%" y="309" width="0.0101%" height="15" fill="rgb(205,98,0)" fg:x="9889" fg:w="5"/><text x="20.2828%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.01%)</title><rect x="20.0328%" y="293" width="0.0101%" height="15" fill="rgb(214,191,48)" fg:x="9889" fg:w="5"/><text x="20.2828%" y="303.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="20.0267%" y="341" width="0.0203%" height="15" fill="rgb(237,112,39)" fg:x="9886" fg:w="10"/><text x="20.2767%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (16 samples, 0.03%)</title><rect x="20.0166%" y="357" width="0.0324%" height="15" fill="rgb(247,203,27)" fg:x="9881" fg:w="16"/><text x="20.2666%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="20.0713%" y="309" width="0.0122%" height="15" fill="rgb(235,124,28)" fg:x="9908" fg:w="6"/><text x="20.3213%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="20.0612%" y="325" width="0.0243%" height="15" fill="rgb(208,207,46)" fg:x="9903" fg:w="12"/><text x="20.3112%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (16 samples, 0.03%)</title><rect x="20.0612%" y="341" width="0.0324%" height="15" fill="rgb(234,176,4)" fg:x="9903" fg:w="16"/><text x="20.3112%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="20.1260%" y="277" width="0.0142%" height="15" fill="rgb(230,133,28)" fg:x="9935" fg:w="7"/><text x="20.3760%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.01%)</title><rect x="20.1301%" y="261" width="0.0101%" height="15" fill="rgb(211,137,40)" fg:x="9937" fg:w="5"/><text x="20.3801%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.01%)</title><rect x="20.1301%" y="245" width="0.0101%" height="15" fill="rgb(254,35,13)" fg:x="9937" fg:w="5"/><text x="20.3801%" y="255.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="20.1240%" y="293" width="0.0182%" height="15" fill="rgb(225,49,51)" fg:x="9934" fg:w="9"/><text x="20.3740%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="20.1463%" y="293" width="0.0142%" height="15" fill="rgb(251,10,15)" fg:x="9945" fg:w="7"/><text x="20.3963%" y="303.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (33 samples, 0.07%)</title><rect x="20.1017%" y="309" width="0.0669%" height="15" fill="rgb(228,207,15)" fg:x="9923" fg:w="33"/><text x="20.3517%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (36 samples, 0.07%)</title><rect x="20.0997%" y="325" width="0.0729%" height="15" fill="rgb(241,99,19)" fg:x="9922" fg:w="36"/><text x="20.3497%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="20.1726%" y="309" width="0.0223%" height="15" fill="rgb(207,104,49)" fg:x="9958" fg:w="11"/><text x="20.4226%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="20.1827%" y="293" width="0.0122%" height="15" fill="rgb(234,99,18)" fg:x="9963" fg:w="6"/><text x="20.4327%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.01%)</title><rect x="20.1827%" y="277" width="0.0122%" height="15" fill="rgb(213,191,49)" fg:x="9963" fg:w="6"/><text x="20.4327%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.01%)</title><rect x="20.1848%" y="261" width="0.0101%" height="15" fill="rgb(210,226,19)" fg:x="9964" fg:w="5"/><text x="20.4348%" y="271.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (13 samples, 0.03%)</title><rect x="20.1726%" y="325" width="0.0263%" height="15" fill="rgb(229,97,18)" fg:x="9958" fg:w="13"/><text x="20.4226%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (7 samples, 0.01%)</title><rect x="20.2860%" y="229" width="0.0142%" height="15" fill="rgb(211,167,15)" fg:x="10014" fg:w="7"/><text x="20.5360%" y="239.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (29 samples, 0.06%)</title><rect x="20.2435%" y="277" width="0.0587%" height="15" fill="rgb(210,169,34)" fg:x="9993" fg:w="29"/><text x="20.4935%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (12 samples, 0.02%)</title><rect x="20.2779%" y="261" width="0.0243%" height="15" fill="rgb(241,121,31)" fg:x="10010" fg:w="12"/><text x="20.5279%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (10 samples, 0.02%)</title><rect x="20.2820%" y="245" width="0.0203%" height="15" fill="rgb(232,40,11)" fg:x="10012" fg:w="10"/><text x="20.5320%" y="255.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (55 samples, 0.11%)</title><rect x="20.2070%" y="309" width="0.1114%" height="15" fill="rgb(205,86,26)" fg:x="9975" fg:w="55"/><text x="20.4570%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (53 samples, 0.11%)</title><rect x="20.2111%" y="293" width="0.1074%" height="15" fill="rgb(231,126,28)" fg:x="9977" fg:w="53"/><text x="20.4611%" y="303.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (59 samples, 0.12%)</title><rect x="20.2010%" y="325" width="0.1195%" height="15" fill="rgb(219,221,18)" fg:x="9972" fg:w="59"/><text x="20.4510%" y="335.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (119 samples, 0.24%)</title><rect x="20.0936%" y="341" width="0.2411%" height="15" fill="rgb(211,40,0)" fg:x="9919" fg:w="119"/><text x="20.3436%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (151 samples, 0.31%)</title><rect x="20.0510%" y="357" width="0.3059%" height="15" fill="rgb(239,85,43)" fg:x="9898" fg:w="151"/><text x="20.3010%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (216 samples, 0.44%)</title><rect x="19.9417%" y="373" width="0.4376%" height="15" fill="rgb(231,55,21)" fg:x="9844" fg:w="216"/><text x="20.1917%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.01%)</title><rect x="20.3671%" y="357" width="0.0122%" height="15" fill="rgb(225,184,43)" fg:x="10054" fg:w="6"/><text x="20.6171%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (335 samples, 0.68%)</title><rect x="19.7208%" y="389" width="0.6786%" height="15" fill="rgb(251,158,41)" fg:x="9735" fg:w="335"/><text x="19.9708%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="20.4157%" y="389" width="0.0122%" height="15" fill="rgb(234,159,37)" fg:x="10078" fg:w="6"/><text x="20.6657%" y="399.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (377 samples, 0.76%)</title><rect x="19.6682%" y="405" width="0.7637%" height="15" fill="rgb(216,204,22)" fg:x="9709" fg:w="377"/><text x="19.9182%" y="415.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (24 samples, 0.05%)</title><rect x="21.6129%" y="373" width="0.0486%" height="15" fill="rgb(214,17,3)" fg:x="10669" fg:w="24"/><text x="21.8629%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (8 samples, 0.02%)</title><rect x="21.7264%" y="325" width="0.0162%" height="15" fill="rgb(212,111,17)" fg:x="10725" fg:w="8"/><text x="21.9764%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (24 samples, 0.05%)</title><rect x="21.6980%" y="341" width="0.0486%" height="15" fill="rgb(221,157,24)" fg:x="10711" fg:w="24"/><text x="21.9480%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (35 samples, 0.07%)</title><rect x="21.6777%" y="357" width="0.0709%" height="15" fill="rgb(252,16,13)" fg:x="10701" fg:w="35"/><text x="21.9277%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (39 samples, 0.08%)</title><rect x="21.8418%" y="309" width="0.0790%" height="15" fill="rgb(221,62,2)" fg:x="10782" fg:w="39"/><text x="22.0918%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (101 samples, 0.20%)</title><rect x="21.7608%" y="341" width="0.2046%" height="15" fill="rgb(247,87,22)" fg:x="10742" fg:w="101"/><text x="22.0108%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (79 samples, 0.16%)</title><rect x="21.8054%" y="325" width="0.1600%" height="15" fill="rgb(215,73,9)" fg:x="10764" fg:w="79"/><text x="22.0554%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (21 samples, 0.04%)</title><rect x="21.9229%" y="309" width="0.0425%" height="15" fill="rgb(207,175,33)" fg:x="10822" fg:w="21"/><text x="22.1729%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (110 samples, 0.22%)</title><rect x="21.7567%" y="357" width="0.2228%" height="15" fill="rgb(243,129,54)" fg:x="10740" fg:w="110"/><text x="22.0067%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.01%)</title><rect x="21.9654%" y="341" width="0.0142%" height="15" fill="rgb(227,119,45)" fg:x="10843" fg:w="7"/><text x="22.2154%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (158 samples, 0.32%)</title><rect x="21.6615%" y="373" width="0.3201%" height="15" fill="rgb(205,109,36)" fg:x="10693" fg:w="158"/><text x="21.9115%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (770 samples, 1.56%)</title><rect x="20.4380%" y="389" width="1.5598%" height="15" fill="rgb(205,6,39)" fg:x="10089" fg:w="770"/><text x="20.6880%" y="399.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (21 samples, 0.04%)</title><rect x="22.1660%" y="341" width="0.0425%" height="15" fill="rgb(221,32,16)" fg:x="10942" fg:w="21"/><text x="22.4160%" y="351.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (23 samples, 0.05%)</title><rect x="22.2085%" y="341" width="0.0466%" height="15" fill="rgb(228,144,50)" fg:x="10963" fg:w="23"/><text x="22.4585%" y="351.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (94 samples, 0.19%)</title><rect x="22.0910%" y="357" width="0.1904%" height="15" fill="rgb(229,201,53)" fg:x="10905" fg:w="94"/><text x="22.3410%" y="367.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (13 samples, 0.03%)</title><rect x="22.2551%" y="341" width="0.0263%" height="15" fill="rgb(249,153,27)" fg:x="10986" fg:w="13"/><text x="22.5051%" y="351.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="22.3017%" y="341" width="0.0122%" height="15" fill="rgb(227,106,25)" fg:x="11009" fg:w="6"/><text x="22.5517%" y="351.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (7 samples, 0.01%)</title><rect x="22.3138%" y="341" width="0.0142%" height="15" fill="rgb(230,65,29)" fg:x="11015" fg:w="7"/><text x="22.5638%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.02%)</title><rect x="22.3300%" y="341" width="0.0203%" height="15" fill="rgb(221,57,46)" fg:x="11023" fg:w="10"/><text x="22.5800%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="22.3321%" y="325" width="0.0182%" height="15" fill="rgb(229,161,17)" fg:x="11024" fg:w="9"/><text x="22.5821%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (9 samples, 0.02%)</title><rect x="22.3321%" y="309" width="0.0182%" height="15" fill="rgb(222,213,11)" fg:x="11024" fg:w="9"/><text x="22.5821%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (8 samples, 0.02%)</title><rect x="22.3341%" y="293" width="0.0162%" height="15" fill="rgb(235,35,13)" fg:x="11025" fg:w="8"/><text x="22.5841%" y="303.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (35 samples, 0.07%)</title><rect x="22.2814%" y="357" width="0.0709%" height="15" fill="rgb(233,158,34)" fg:x="10999" fg:w="35"/><text x="22.5314%" y="367.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (163 samples, 0.33%)</title><rect x="22.0282%" y="373" width="0.3302%" height="15" fill="rgb(215,151,48)" fg:x="10874" fg:w="163"/><text x="22.2782%" y="383.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.03%)</title><rect x="22.5225%" y="341" width="0.0304%" height="15" fill="rgb(229,84,14)" fg:x="11118" fg:w="15"/><text x="22.7725%" y="351.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (29 samples, 0.06%)</title><rect x="22.5529%" y="341" width="0.0587%" height="15" fill="rgb(229,68,14)" fg:x="11133" fg:w="29"/><text x="22.8029%" y="351.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="22.6278%" y="325" width="0.0142%" height="15" fill="rgb(243,106,26)" fg:x="11170" fg:w="7"/><text x="22.8778%" y="335.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="22.6420%" y="325" width="0.0101%" height="15" fill="rgb(206,45,38)" fg:x="11177" fg:w="5"/><text x="22.8920%" y="335.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (27 samples, 0.05%)</title><rect x="22.6116%" y="341" width="0.0547%" height="15" fill="rgb(226,6,15)" fg:x="11162" fg:w="27"/><text x="22.8616%" y="351.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (130 samples, 0.26%)</title><rect x="22.4050%" y="357" width="0.2633%" height="15" fill="rgb(232,22,54)" fg:x="11060" fg:w="130"/><text x="22.6550%" y="367.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="22.7190%" y="341" width="0.0101%" height="15" fill="rgb(229,222,32)" fg:x="11215" fg:w="5"/><text x="22.9690%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.02%)</title><rect x="22.7352%" y="341" width="0.0162%" height="15" fill="rgb(228,62,29)" fg:x="11223" fg:w="8"/><text x="22.9852%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="22.7372%" y="325" width="0.0142%" height="15" fill="rgb(251,103,34)" fg:x="11224" fg:w="7"/><text x="22.9872%" y="335.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (47 samples, 0.10%)</title><rect x="22.6683%" y="357" width="0.0952%" height="15" fill="rgb(233,12,30)" fg:x="11190" fg:w="47"/><text x="22.9183%" y="367.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (201 samples, 0.41%)</title><rect x="22.3584%" y="373" width="0.4072%" height="15" fill="rgb(238,52,0)" fg:x="11037" fg:w="201"/><text x="22.6084%" y="383.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (32 samples, 0.06%)</title><rect x="22.9580%" y="341" width="0.0648%" height="15" fill="rgb(223,98,5)" fg:x="11333" fg:w="32"/><text x="23.2080%" y="351.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (41 samples, 0.08%)</title><rect x="23.0229%" y="341" width="0.0831%" height="15" fill="rgb(228,75,37)" fg:x="11365" fg:w="41"/><text x="23.2729%" y="351.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="23.1120%" y="325" width="0.0122%" height="15" fill="rgb(205,115,49)" fg:x="11409" fg:w="6"/><text x="23.3620%" y="335.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (7 samples, 0.01%)</title><rect x="23.1241%" y="325" width="0.0142%" height="15" fill="rgb(250,154,43)" fg:x="11415" fg:w="7"/><text x="23.3741%" y="335.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (186 samples, 0.38%)</title><rect x="22.7656%" y="373" width="0.3768%" height="15" fill="rgb(226,43,29)" fg:x="11238" fg:w="186"/><text x="23.0156%" y="383.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (119 samples, 0.24%)</title><rect x="22.9013%" y="357" width="0.2411%" height="15" fill="rgb(249,228,39)" fg:x="11305" fg:w="119"/><text x="23.1513%" y="367.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (18 samples, 0.04%)</title><rect x="23.1059%" y="341" width="0.0365%" height="15" fill="rgb(216,79,43)" fg:x="11406" fg:w="18"/><text x="23.3559%" y="351.50"></text></g><g><title>databend-query`DYLD-STUB$$memmove (5 samples, 0.01%)</title><rect x="23.1424%" y="373" width="0.0101%" height="15" fill="rgb(228,95,12)" fg:x="11424" fg:w="5"/><text x="23.3924%" y="383.50"></text></g><g><title>databend-query`common_base::runtime::runtime_tracker::ThreadTracker::alloc (7 samples, 0.01%)</title><rect x="24.3983%" y="325" width="0.0142%" height="15" fill="rgb(249,221,15)" fg:x="12044" fg:w="7"/><text x="24.6483%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (22 samples, 0.04%)</title><rect x="24.4125%" y="325" width="0.0446%" height="15" fill="rgb(233,34,13)" fg:x="12051" fg:w="22"/><text x="24.6625%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (32 samples, 0.06%)</title><rect x="24.4875%" y="309" width="0.0648%" height="15" fill="rgb(214,103,39)" fg:x="12088" fg:w="32"/><text x="24.7375%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (21 samples, 0.04%)</title><rect x="24.5098%" y="293" width="0.0425%" height="15" fill="rgb(251,126,39)" fg:x="12099" fg:w="21"/><text x="24.7598%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.01%)</title><rect x="24.5422%" y="277" width="0.0101%" height="15" fill="rgb(214,216,36)" fg:x="12115" fg:w="5"/><text x="24.7922%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (33 samples, 0.07%)</title><rect x="24.6394%" y="261" width="0.0669%" height="15" fill="rgb(220,221,8)" fg:x="12163" fg:w="33"/><text x="24.8894%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (115 samples, 0.23%)</title><rect x="24.5685%" y="293" width="0.2330%" height="15" fill="rgb(240,216,3)" fg:x="12128" fg:w="115"/><text x="24.8185%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (98 samples, 0.20%)</title><rect x="24.6029%" y="277" width="0.1985%" height="15" fill="rgb(232,218,17)" fg:x="12145" fg:w="98"/><text x="24.8529%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (43 samples, 0.09%)</title><rect x="24.7144%" y="261" width="0.0871%" height="15" fill="rgb(229,163,45)" fg:x="12200" fg:w="43"/><text x="24.9644%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (187 samples, 0.38%)</title><rect x="24.4571%" y="325" width="0.3788%" height="15" fill="rgb(231,110,42)" fg:x="12073" fg:w="187"/><text x="24.7071%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (138 samples, 0.28%)</title><rect x="24.5564%" y="309" width="0.2796%" height="15" fill="rgb(208,170,48)" fg:x="12122" fg:w="138"/><text x="24.8064%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (16 samples, 0.03%)</title><rect x="24.8035%" y="293" width="0.0324%" height="15" fill="rgb(239,116,25)" fg:x="12244" fg:w="16"/><text x="25.0535%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.02%)</title><rect x="24.8177%" y="277" width="0.0182%" height="15" fill="rgb(219,200,50)" fg:x="12251" fg:w="9"/><text x="25.0677%" y="287.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (832 samples, 1.69%)</title><rect x="23.1606%" y="341" width="1.6854%" height="15" fill="rgb(245,200,0)" fg:x="11433" fg:w="832"/><text x="23.4106%" y="351.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="24.9716%" y="293" width="0.0142%" height="15" fill="rgb(245,119,33)" fg:x="12327" fg:w="7"/><text x="25.2216%" y="303.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (17 samples, 0.03%)</title><rect x="24.9858%" y="293" width="0.0344%" height="15" fill="rgb(231,125,12)" fg:x="12334" fg:w="17"/><text x="25.2358%" y="303.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="25.0405%" y="277" width="0.0162%" height="15" fill="rgb(216,96,41)" fg:x="12361" fg:w="8"/><text x="25.2905%" y="287.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (88 samples, 0.18%)</title><rect x="24.9028%" y="309" width="0.1783%" height="15" fill="rgb(248,43,45)" fg:x="12293" fg:w="88"/><text x="25.1528%" y="319.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (30 samples, 0.06%)</title><rect x="25.0203%" y="293" width="0.0608%" height="15" fill="rgb(217,222,7)" fg:x="12351" fg:w="30"/><text x="25.2703%" y="303.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (12 samples, 0.02%)</title><rect x="25.0567%" y="277" width="0.0243%" height="15" fill="rgb(233,28,6)" fg:x="12369" fg:w="12"/><text x="25.3067%" y="287.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (11 samples, 0.02%)</title><rect x="25.1114%" y="293" width="0.0223%" height="15" fill="rgb(231,218,15)" fg:x="12396" fg:w="11"/><text x="25.3614%" y="303.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (31 samples, 0.06%)</title><rect x="25.0810%" y="309" width="0.0628%" height="15" fill="rgb(226,171,48)" fg:x="12381" fg:w="31"/><text x="25.3310%" y="319.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (140 samples, 0.28%)</title><rect x="24.8643%" y="325" width="0.2836%" height="15" fill="rgb(235,201,9)" fg:x="12274" fg:w="140"/><text x="25.1143%" y="335.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="25.2451%" y="293" width="0.0101%" height="15" fill="rgb(217,80,15)" fg:x="12462" fg:w="5"/><text x="25.4951%" y="303.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (11 samples, 0.02%)</title><rect x="25.2552%" y="293" width="0.0223%" height="15" fill="rgb(219,152,8)" fg:x="12467" fg:w="11"/><text x="25.5052%" y="303.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17 samples, 0.03%)</title><rect x="25.3018%" y="277" width="0.0344%" height="15" fill="rgb(243,107,38)" fg:x="12490" fg:w="17"/><text x="25.5518%" y="287.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (16 samples, 0.03%)</title><rect x="25.3363%" y="277" width="0.0324%" height="15" fill="rgb(231,17,5)" fg:x="12507" fg:w="16"/><text x="25.5863%" y="287.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (113 samples, 0.23%)</title><rect x="25.1580%" y="309" width="0.2289%" height="15" fill="rgb(209,25,54)" fg:x="12419" fg:w="113"/><text x="25.4080%" y="319.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (54 samples, 0.11%)</title><rect x="25.2775%" y="293" width="0.1094%" height="15" fill="rgb(219,0,2)" fg:x="12478" fg:w="54"/><text x="25.5275%" y="303.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (119 samples, 0.24%)</title><rect x="25.1479%" y="325" width="0.2411%" height="15" fill="rgb(246,9,5)" fg:x="12414" fg:w="119"/><text x="25.3979%" y="335.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (7 samples, 0.01%)</title><rect x="25.4659%" y="309" width="0.0142%" height="15" fill="rgb(226,159,4)" fg:x="12571" fg:w="7"/><text x="25.7159%" y="319.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.03%)</title><rect x="25.5206%" y="293" width="0.0284%" height="15" fill="rgb(219,175,34)" fg:x="12598" fg:w="14"/><text x="25.7706%" y="303.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (11 samples, 0.02%)</title><rect x="25.5490%" y="293" width="0.0223%" height="15" fill="rgb(236,10,46)" fg:x="12612" fg:w="11"/><text x="25.7990%" y="303.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="25.5976%" y="277" width="0.0142%" height="15" fill="rgb(240,211,16)" fg:x="12636" fg:w="7"/><text x="25.8476%" y="287.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (9 samples, 0.02%)</title><rect x="25.6118%" y="277" width="0.0182%" height="15" fill="rgb(205,3,43)" fg:x="12643" fg:w="9"/><text x="25.8618%" y="287.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (33 samples, 0.07%)</title><rect x="25.5713%" y="293" width="0.0669%" height="15" fill="rgb(245,7,22)" fg:x="12623" fg:w="33"/><text x="25.8213%" y="303.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (79 samples, 0.16%)</title><rect x="25.4801%" y="309" width="0.1600%" height="15" fill="rgb(239,132,32)" fg:x="12578" fg:w="79"/><text x="25.7301%" y="319.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (125 samples, 0.25%)</title><rect x="25.3889%" y="325" width="0.2532%" height="15" fill="rgb(228,202,34)" fg:x="12533" fg:w="125"/><text x="25.6389%" y="335.50"></text></g><g><title>databend-query`common_base::runtime::runtime_tracker::ThreadTracker::alloc (5 samples, 0.01%)</title><rect x="26.2843%" y="277" width="0.0101%" height="15" fill="rgb(254,200,22)" fg:x="12975" fg:w="5"/><text x="26.5343%" y="287.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (12 samples, 0.02%)</title><rect x="26.2945%" y="277" width="0.0243%" height="15" fill="rgb(219,10,39)" fg:x="12980" fg:w="12"/><text x="26.5445%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (13 samples, 0.03%)</title><rect x="26.3451%" y="245" width="0.0263%" height="15" fill="rgb(226,210,39)" fg:x="13005" fg:w="13"/><text x="26.5951%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (20 samples, 0.04%)</title><rect x="26.3330%" y="261" width="0.0405%" height="15" fill="rgb(208,219,16)" fg:x="12999" fg:w="20"/><text x="26.5830%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (19 samples, 0.04%)</title><rect x="26.4261%" y="213" width="0.0385%" height="15" fill="rgb(216,158,51)" fg:x="13045" fg:w="19"/><text x="26.6761%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (55 samples, 0.11%)</title><rect x="26.3836%" y="245" width="0.1114%" height="15" fill="rgb(233,14,44)" fg:x="13024" fg:w="55"/><text x="26.6336%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (49 samples, 0.10%)</title><rect x="26.3958%" y="229" width="0.0993%" height="15" fill="rgb(237,97,39)" fg:x="13030" fg:w="49"/><text x="26.6458%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (14 samples, 0.03%)</title><rect x="26.4667%" y="213" width="0.0284%" height="15" fill="rgb(218,198,43)" fg:x="13065" fg:w="14"/><text x="26.7167%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (93 samples, 0.19%)</title><rect x="26.3188%" y="277" width="0.1884%" height="15" fill="rgb(231,104,20)" fg:x="12992" fg:w="93"/><text x="26.5688%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (65 samples, 0.13%)</title><rect x="26.3755%" y="261" width="0.1317%" height="15" fill="rgb(254,36,13)" fg:x="13020" fg:w="65"/><text x="26.6255%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="26.4950%" y="245" width="0.0122%" height="15" fill="rgb(248,14,50)" fg:x="13079" fg:w="6"/><text x="26.7450%" y="255.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (430 samples, 0.87%)</title><rect x="25.6462%" y="293" width="0.8711%" height="15" fill="rgb(217,107,29)" fg:x="12660" fg:w="430"/><text x="25.8962%" y="303.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="26.5639%" y="245" width="0.0142%" height="15" fill="rgb(251,169,33)" fg:x="13113" fg:w="7"/><text x="26.8139%" y="255.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (33 samples, 0.07%)</title><rect x="26.5396%" y="261" width="0.0669%" height="15" fill="rgb(217,108,32)" fg:x="13101" fg:w="33"/><text x="26.7896%" y="271.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (14 samples, 0.03%)</title><rect x="26.5781%" y="245" width="0.0284%" height="15" fill="rgb(219,66,42)" fg:x="13120" fg:w="14"/><text x="26.8281%" y="255.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (43 samples, 0.09%)</title><rect x="26.5234%" y="277" width="0.0871%" height="15" fill="rgb(206,180,7)" fg:x="13093" fg:w="43"/><text x="26.7734%" y="287.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.02%)</title><rect x="26.6530%" y="245" width="0.0182%" height="15" fill="rgb(208,226,31)" fg:x="13157" fg:w="9"/><text x="26.9030%" y="255.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (6 samples, 0.01%)</title><rect x="26.6713%" y="245" width="0.0122%" height="15" fill="rgb(218,26,49)" fg:x="13166" fg:w="6"/><text x="26.9213%" y="255.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="26.6976%" y="229" width="0.0101%" height="15" fill="rgb(233,197,48)" fg:x="13179" fg:w="5"/><text x="26.9476%" y="239.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (6 samples, 0.01%)</title><rect x="26.7077%" y="229" width="0.0122%" height="15" fill="rgb(252,181,51)" fg:x="13184" fg:w="6"/><text x="26.9577%" y="239.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (50 samples, 0.10%)</title><rect x="26.6247%" y="261" width="0.1013%" height="15" fill="rgb(253,90,19)" fg:x="13143" fg:w="50"/><text x="26.8747%" y="271.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (21 samples, 0.04%)</title><rect x="26.6834%" y="245" width="0.0425%" height="15" fill="rgb(215,171,30)" fg:x="13172" fg:w="21"/><text x="26.9334%" y="255.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (63 samples, 0.13%)</title><rect x="26.6105%" y="277" width="0.1276%" height="15" fill="rgb(214,222,9)" fg:x="13136" fg:w="63"/><text x="26.8605%" y="287.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (22 samples, 0.04%)</title><rect x="26.7827%" y="261" width="0.0446%" height="15" fill="rgb(223,3,22)" fg:x="13221" fg:w="22"/><text x="27.0327%" y="271.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (8 samples, 0.02%)</title><rect x="26.8110%" y="245" width="0.0162%" height="15" fill="rgb(225,196,46)" fg:x="13235" fg:w="8"/><text x="27.0610%" y="255.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (47 samples, 0.10%)</title><rect x="26.7381%" y="277" width="0.0952%" height="15" fill="rgb(209,110,37)" fg:x="13199" fg:w="47"/><text x="26.9881%" y="287.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.01%)</title><rect x="27.2162%" y="229" width="0.0122%" height="15" fill="rgb(249,89,12)" fg:x="13435" fg:w="6"/><text x="27.4662%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.01%)</title><rect x="27.2446%" y="197" width="0.0101%" height="15" fill="rgb(226,27,33)" fg:x="13449" fg:w="5"/><text x="27.4946%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (10 samples, 0.02%)</title><rect x="27.2364%" y="213" width="0.0203%" height="15" fill="rgb(213,82,22)" fg:x="13445" fg:w="10"/><text x="27.4864%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (12 samples, 0.02%)</title><rect x="27.2871%" y="165" width="0.0243%" height="15" fill="rgb(248,140,0)" fg:x="13470" fg:w="12"/><text x="27.5371%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (33 samples, 0.07%)</title><rect x="27.2689%" y="197" width="0.0669%" height="15" fill="rgb(228,106,3)" fg:x="13461" fg:w="33"/><text x="27.5189%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (31 samples, 0.06%)</title><rect x="27.2729%" y="181" width="0.0628%" height="15" fill="rgb(209,23,37)" fg:x="13463" fg:w="31"/><text x="27.5229%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (12 samples, 0.02%)</title><rect x="27.3114%" y="165" width="0.0243%" height="15" fill="rgb(241,93,50)" fg:x="13482" fg:w="12"/><text x="27.5614%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (58 samples, 0.12%)</title><rect x="27.2283%" y="229" width="0.1175%" height="15" fill="rgb(253,46,43)" fg:x="13441" fg:w="58"/><text x="27.4783%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (43 samples, 0.09%)</title><rect x="27.2587%" y="213" width="0.0871%" height="15" fill="rgb(226,206,43)" fg:x="13456" fg:w="43"/><text x="27.5087%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="27.3357%" y="197" width="0.0101%" height="15" fill="rgb(217,54,7)" fg:x="13494" fg:w="5"/><text x="27.5857%" y="207.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (252 samples, 0.51%)</title><rect x="26.8394%" y="245" width="0.5105%" height="15" fill="rgb(223,5,52)" fg:x="13249" fg:w="252"/><text x="27.0894%" y="255.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="27.4329%" y="197" width="0.0101%" height="15" fill="rgb(206,52,46)" fg:x="13542" fg:w="5"/><text x="27.6829%" y="207.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (20 samples, 0.04%)</title><rect x="27.4431%" y="197" width="0.0405%" height="15" fill="rgb(253,136,11)" fg:x="13547" fg:w="20"/><text x="27.6931%" y="207.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (43 samples, 0.09%)</title><rect x="27.4066%" y="213" width="0.0871%" height="15" fill="rgb(208,106,33)" fg:x="13529" fg:w="43"/><text x="27.6566%" y="223.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (21 samples, 0.04%)</title><rect x="27.4937%" y="213" width="0.0425%" height="15" fill="rgb(206,54,4)" fg:x="13572" fg:w="21"/><text x="27.7437%" y="223.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (81 samples, 0.16%)</title><rect x="27.3742%" y="229" width="0.1641%" height="15" fill="rgb(213,3,15)" fg:x="13513" fg:w="81"/><text x="27.6242%" y="239.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (31 samples, 0.06%)</title><rect x="27.5504%" y="213" width="0.0628%" height="15" fill="rgb(252,211,39)" fg:x="13600" fg:w="31"/><text x="27.8004%" y="223.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (10 samples, 0.02%)</title><rect x="27.5930%" y="197" width="0.0203%" height="15" fill="rgb(223,6,36)" fg:x="13621" fg:w="10"/><text x="27.8430%" y="207.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="27.6274%" y="197" width="0.0122%" height="15" fill="rgb(252,169,45)" fg:x="13638" fg:w="6"/><text x="27.8774%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="27.6477%" y="197" width="0.0142%" height="15" fill="rgb(212,48,26)" fg:x="13648" fg:w="7"/><text x="27.8977%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="27.6497%" y="181" width="0.0122%" height="15" fill="rgb(251,102,48)" fg:x="13649" fg:w="6"/><text x="27.8997%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="27.6517%" y="165" width="0.0101%" height="15" fill="rgb(243,208,16)" fg:x="13650" fg:w="5"/><text x="27.9017%" y="175.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (28 samples, 0.06%)</title><rect x="27.6132%" y="213" width="0.0567%" height="15" fill="rgb(219,96,24)" fg:x="13631" fg:w="28"/><text x="27.8632%" y="223.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (67 samples, 0.14%)</title><rect x="27.5383%" y="229" width="0.1357%" height="15" fill="rgb(219,33,29)" fg:x="13594" fg:w="67"/><text x="27.7883%" y="239.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="27.7348%" y="197" width="0.0162%" height="15" fill="rgb(223,176,5)" fg:x="13691" fg:w="8"/><text x="27.9848%" y="207.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (13 samples, 0.03%)</title><rect x="27.7510%" y="197" width="0.0263%" height="15" fill="rgb(228,140,14)" fg:x="13699" fg:w="13"/><text x="28.0010%" y="207.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="27.8016%" y="181" width="0.0101%" height="15" fill="rgb(217,179,31)" fg:x="13724" fg:w="5"/><text x="28.0516%" y="191.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (55 samples, 0.11%)</title><rect x="27.7166%" y="213" width="0.1114%" height="15" fill="rgb(230,9,30)" fg:x="13682" fg:w="55"/><text x="27.9666%" y="223.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (25 samples, 0.05%)</title><rect x="27.7773%" y="197" width="0.0506%" height="15" fill="rgb(230,136,20)" fg:x="13712" fg:w="25"/><text x="28.0273%" y="207.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (82 samples, 0.17%)</title><rect x="27.6740%" y="229" width="0.1661%" height="15" fill="rgb(215,210,22)" fg:x="13661" fg:w="82"/><text x="27.9240%" y="239.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="27.8280%" y="213" width="0.0122%" height="15" fill="rgb(218,43,5)" fg:x="13737" fg:w="6"/><text x="28.0780%" y="223.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (11 samples, 0.02%)</title><rect x="28.2615%" y="181" width="0.0223%" height="15" fill="rgb(216,11,5)" fg:x="13951" fg:w="11"/><text x="28.5115%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (13 samples, 0.03%)</title><rect x="28.3020%" y="165" width="0.0263%" height="15" fill="rgb(209,82,29)" fg:x="13971" fg:w="13"/><text x="28.5520%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.02%)</title><rect x="28.3121%" y="149" width="0.0162%" height="15" fill="rgb(244,115,12)" fg:x="13976" fg:w="8"/><text x="28.5621%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (8 samples, 0.02%)</title><rect x="28.3506%" y="117" width="0.0162%" height="15" fill="rgb(222,82,18)" fg:x="13995" fg:w="8"/><text x="28.6006%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (25 samples, 0.05%)</title><rect x="28.3304%" y="149" width="0.0506%" height="15" fill="rgb(249,227,8)" fg:x="13985" fg:w="25"/><text x="28.5804%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (19 samples, 0.04%)</title><rect x="28.3425%" y="133" width="0.0385%" height="15" fill="rgb(253,141,45)" fg:x="13991" fg:w="19"/><text x="28.5925%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (7 samples, 0.01%)</title><rect x="28.3668%" y="117" width="0.0142%" height="15" fill="rgb(234,184,4)" fg:x="14003" fg:w="7"/><text x="28.6168%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (52 samples, 0.11%)</title><rect x="28.2838%" y="181" width="0.1053%" height="15" fill="rgb(218,194,23)" fg:x="13962" fg:w="52"/><text x="28.5338%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (29 samples, 0.06%)</title><rect x="28.3304%" y="165" width="0.0587%" height="15" fill="rgb(235,66,41)" fg:x="13985" fg:w="29"/><text x="28.5804%" y="175.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (263 samples, 0.53%)</title><rect x="27.8624%" y="197" width="0.5328%" height="15" fill="rgb(245,217,1)" fg:x="13754" fg:w="263"/><text x="28.1124%" y="207.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (19 samples, 0.04%)</title><rect x="28.4195%" y="165" width="0.0385%" height="15" fill="rgb(229,91,1)" fg:x="14029" fg:w="19"/><text x="28.6695%" y="175.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (7 samples, 0.01%)</title><rect x="28.4438%" y="149" width="0.0142%" height="15" fill="rgb(207,101,30)" fg:x="14041" fg:w="7"/><text x="28.6938%" y="159.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (40 samples, 0.08%)</title><rect x="28.4033%" y="181" width="0.0810%" height="15" fill="rgb(223,82,49)" fg:x="14021" fg:w="40"/><text x="28.6533%" y="191.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (13 samples, 0.03%)</title><rect x="28.4580%" y="165" width="0.0263%" height="15" fill="rgb(218,167,17)" fg:x="14048" fg:w="13"/><text x="28.7080%" y="175.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="28.5147%" y="149" width="0.0101%" height="15" fill="rgb(208,103,14)" fg:x="14076" fg:w="5"/><text x="28.7647%" y="159.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (22 samples, 0.04%)</title><rect x="28.4884%" y="165" width="0.0446%" height="15" fill="rgb(238,20,8)" fg:x="14063" fg:w="22"/><text x="28.7384%" y="175.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (45 samples, 0.09%)</title><rect x="28.4843%" y="181" width="0.0912%" height="15" fill="rgb(218,80,54)" fg:x="14061" fg:w="45"/><text x="28.7343%" y="191.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (21 samples, 0.04%)</title><rect x="28.5329%" y="165" width="0.0425%" height="15" fill="rgb(240,144,17)" fg:x="14085" fg:w="21"/><text x="28.7829%" y="175.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="28.6140%" y="149" width="0.0122%" height="15" fill="rgb(245,27,50)" fg:x="14125" fg:w="6"/><text x="28.8640%" y="159.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (17 samples, 0.03%)</title><rect x="28.5998%" y="165" width="0.0344%" height="15" fill="rgb(251,51,7)" fg:x="14118" fg:w="17"/><text x="28.8498%" y="175.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (31 samples, 0.06%)</title><rect x="28.5755%" y="181" width="0.0628%" height="15" fill="rgb(245,217,29)" fg:x="14106" fg:w="31"/><text x="28.8255%" y="191.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.02%)</title><rect x="28.9178%" y="133" width="0.0162%" height="15" fill="rgb(221,176,29)" fg:x="14275" fg:w="8"/><text x="29.1678%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.01%)</title><rect x="28.9381%" y="117" width="0.0142%" height="15" fill="rgb(212,180,24)" fg:x="14285" fg:w="7"/><text x="29.1881%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.01%)</title><rect x="28.9421%" y="101" width="0.0101%" height="15" fill="rgb(254,24,2)" fg:x="14287" fg:w="5"/><text x="29.1921%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (19 samples, 0.04%)</title><rect x="28.9523%" y="101" width="0.0385%" height="15" fill="rgb(230,100,2)" fg:x="14292" fg:w="19"/><text x="29.2023%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (14 samples, 0.03%)</title><rect x="28.9624%" y="85" width="0.0284%" height="15" fill="rgb(219,142,25)" fg:x="14297" fg:w="14"/><text x="29.2124%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (7 samples, 0.01%)</title><rect x="28.9766%" y="69" width="0.0142%" height="15" fill="rgb(240,73,43)" fg:x="14304" fg:w="7"/><text x="29.2266%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (30 samples, 0.06%)</title><rect x="28.9340%" y="133" width="0.0608%" height="15" fill="rgb(214,114,15)" fg:x="14283" fg:w="30"/><text x="29.1840%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.04%)</title><rect x="28.9523%" y="117" width="0.0425%" height="15" fill="rgb(207,130,4)" fg:x="14292" fg:w="21"/><text x="29.2023%" y="127.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (177 samples, 0.36%)</title><rect x="28.6403%" y="149" width="0.3586%" height="15" fill="rgb(221,25,40)" fg:x="14138" fg:w="177"/><text x="28.8903%" y="159.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (185 samples, 0.37%)</title><rect x="28.6403%" y="181" width="0.3748%" height="15" fill="rgb(241,184,7)" fg:x="14138" fg:w="185"/><text x="28.8903%" y="191.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (185 samples, 0.37%)</title><rect x="28.6403%" y="165" width="0.3748%" height="15" fill="rgb(235,159,4)" fg:x="14138" fg:w="185"/><text x="28.8903%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.02%)</title><rect x="28.9989%" y="149" width="0.0162%" height="15" fill="rgb(214,87,48)" fg:x="14315" fg:w="8"/><text x="29.2489%" y="159.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (9 samples, 0.02%)</title><rect x="29.0151%" y="181" width="0.0182%" height="15" fill="rgb(246,198,24)" fg:x="14323" fg:w="9"/><text x="29.2651%" y="191.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::update_statistic (10 samples, 0.02%)</title><rect x="29.0333%" y="181" width="0.0203%" height="15" fill="rgb(209,66,40)" fg:x="14332" fg:w="10"/><text x="29.2833%" y="191.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="29.0637%" y="165" width="0.0101%" height="15" fill="rgb(233,147,39)" fg:x="14347" fg:w="5"/><text x="29.3137%" y="175.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (13 samples, 0.03%)</title><rect x="29.0536%" y="181" width="0.0263%" height="15" fill="rgb(231,145,52)" fg:x="14342" fg:w="13"/><text x="29.3036%" y="191.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="29.0799%" y="181" width="0.0101%" height="15" fill="rgb(206,20,26)" fg:x="14355" fg:w="5"/><text x="29.3299%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="29.0961%" y="181" width="0.0101%" height="15" fill="rgb(238,220,4)" fg:x="14363" fg:w="5"/><text x="29.3461%" y="191.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (359 samples, 0.73%)</title><rect x="28.3952%" y="197" width="0.7273%" height="15" fill="rgb(252,195,42)" fg:x="14017" fg:w="359"/><text x="28.6452%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.01%)</title><rect x="29.1083%" y="181" width="0.0142%" height="15" fill="rgb(209,10,6)" fg:x="14369" fg:w="7"/><text x="29.3583%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.02%)</title><rect x="29.1447%" y="197" width="0.0203%" height="15" fill="rgb(229,3,52)" fg:x="14387" fg:w="10"/><text x="29.3947%" y="207.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (652 samples, 1.32%)</title><rect x="27.8462%" y="229" width="1.3208%" height="15" fill="rgb(253,49,37)" fg:x="13746" fg:w="652"/><text x="28.0962%" y="239.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (651 samples, 1.32%)</title><rect x="27.8482%" y="213" width="1.3188%" height="15" fill="rgb(240,103,49)" fg:x="13747" fg:w="651"/><text x="28.0982%" y="223.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.01%)</title><rect x="29.1731%" y="197" width="0.0142%" height="15" fill="rgb(250,182,30)" fg:x="14401" fg:w="7"/><text x="29.4231%" y="207.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="29.1771%" y="181" width="0.0101%" height="15" fill="rgb(248,8,30)" fg:x="14403" fg:w="5"/><text x="29.4271%" y="191.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="29.1873%" y="197" width="0.0122%" height="15" fill="rgb(237,120,30)" fg:x="14408" fg:w="6"/><text x="29.4373%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="29.1893%" y="181" width="0.0101%" height="15" fill="rgb(221,146,34)" fg:x="14409" fg:w="5"/><text x="29.4393%" y="191.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (16 samples, 0.03%)</title><rect x="29.1731%" y="213" width="0.0324%" height="15" fill="rgb(242,55,13)" fg:x="14401" fg:w="16"/><text x="29.4231%" y="223.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (24 samples, 0.05%)</title><rect x="29.1711%" y="229" width="0.0486%" height="15" fill="rgb(242,112,31)" fg:x="14400" fg:w="24"/><text x="29.4211%" y="239.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (7 samples, 0.01%)</title><rect x="29.2237%" y="213" width="0.0142%" height="15" fill="rgb(249,192,27)" fg:x="14426" fg:w="7"/><text x="29.4737%" y="223.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::update_statistic (12 samples, 0.02%)</title><rect x="29.2197%" y="229" width="0.0243%" height="15" fill="rgb(208,204,44)" fg:x="14424" fg:w="12"/><text x="29.4697%" y="239.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.02%)</title><rect x="29.2501%" y="213" width="0.0182%" height="15" fill="rgb(208,93,54)" fg:x="14439" fg:w="9"/><text x="29.5001%" y="223.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (15 samples, 0.03%)</title><rect x="29.2440%" y="229" width="0.0304%" height="15" fill="rgb(242,1,31)" fg:x="14436" fg:w="15"/><text x="29.4940%" y="239.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (14 samples, 0.03%)</title><rect x="29.2744%" y="229" width="0.0284%" height="15" fill="rgb(241,83,25)" fg:x="14451" fg:w="14"/><text x="29.5244%" y="239.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (12 samples, 0.02%)</title><rect x="29.3048%" y="229" width="0.0243%" height="15" fill="rgb(205,169,50)" fg:x="14466" fg:w="12"/><text x="29.5548%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (7 samples, 0.01%)</title><rect x="29.3432%" y="213" width="0.0142%" height="15" fill="rgb(239,186,37)" fg:x="14485" fg:w="7"/><text x="29.5932%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (15 samples, 0.03%)</title><rect x="29.3351%" y="229" width="0.0304%" height="15" fill="rgb(205,221,10)" fg:x="14481" fg:w="15"/><text x="29.5851%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_small (5 samples, 0.01%)</title><rect x="29.3655%" y="229" width="0.0101%" height="15" fill="rgb(218,196,15)" fg:x="14496" fg:w="5"/><text x="29.6155%" y="239.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (1,011 samples, 2.05%)</title><rect x="27.3499%" y="245" width="2.0481%" height="15" fill="rgb(218,196,35)" fg:x="13501" fg:w="1011"/><text x="27.5999%" y="255.50">d..</text></g><g><title>databend-query`DYLD-STUB$$memcpy (5 samples, 0.01%)</title><rect x="29.4020%" y="245" width="0.0101%" height="15" fill="rgb(233,63,24)" fg:x="14514" fg:w="5"/><text x="29.6520%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.03%)</title><rect x="29.4466%" y="245" width="0.0284%" height="15" fill="rgb(225,8,4)" fg:x="14536" fg:w="14"/><text x="29.6966%" y="255.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (1,305 samples, 2.64%)</title><rect x="26.8333%" y="277" width="2.6436%" height="15" fill="rgb(234,105,35)" fg:x="13246" fg:w="1305"/><text x="27.0833%" y="287.50">da..</text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (1,303 samples, 2.64%)</title><rect x="26.8374%" y="261" width="2.6396%" height="15" fill="rgb(236,21,32)" fg:x="13248" fg:w="1303"/><text x="27.0874%" y="271.50">da..</text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="29.4790%" y="261" width="0.0122%" height="15" fill="rgb(228,109,6)" fg:x="14552" fg:w="6"/><text x="29.7290%" y="271.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (10 samples, 0.02%)</title><rect x="29.4769%" y="277" width="0.0203%" height="15" fill="rgb(229,215,31)" fg:x="14551" fg:w="10"/><text x="29.7269%" y="287.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::update_statistic (11 samples, 0.02%)</title><rect x="29.4972%" y="277" width="0.0223%" height="15" fill="rgb(221,52,54)" fg:x="14561" fg:w="11"/><text x="29.7472%" y="287.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="29.5195%" y="261" width="0.0101%" height="15" fill="rgb(252,129,43)" fg:x="14572" fg:w="5"/><text x="29.7695%" y="271.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (10 samples, 0.02%)</title><rect x="29.5195%" y="277" width="0.0203%" height="15" fill="rgb(248,183,27)" fg:x="14572" fg:w="10"/><text x="29.7695%" y="287.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.02%)</title><rect x="29.5397%" y="277" width="0.0203%" height="15" fill="rgb(250,0,22)" fg:x="14582" fg:w="10"/><text x="29.7897%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.01%)</title><rect x="29.5681%" y="277" width="0.0122%" height="15" fill="rgb(213,166,10)" fg:x="14596" fg:w="6"/><text x="29.8181%" y="287.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (1,522 samples, 3.08%)</title><rect x="26.5173%" y="293" width="3.0832%" height="15" fill="rgb(207,163,36)" fg:x="13090" fg:w="1522"/><text x="26.7673%" y="303.50">dat..</text></g><g><title>databend-query`common_base::runtime::runtime_tracker::ThreadTracker::alloc (5 samples, 0.01%)</title><rect x="29.6086%" y="293" width="0.0101%" height="15" fill="rgb(208,122,22)" fg:x="14616" fg:w="5"/><text x="29.8586%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (19 samples, 0.04%)</title><rect x="29.6390%" y="293" width="0.0385%" height="15" fill="rgb(207,104,49)" fg:x="14631" fg:w="19"/><text x="29.8890%" y="303.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (1,995 samples, 4.04%)</title><rect x="25.6422%" y="325" width="4.0414%" height="15" fill="rgb(248,211,50)" fg:x="12658" fg:w="1995"/><text x="25.8922%" y="335.50">data..</text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (1,995 samples, 4.04%)</title><rect x="25.6422%" y="309" width="4.0414%" height="15" fill="rgb(217,13,45)" fg:x="12658" fg:w="1995"/><text x="25.8922%" y="319.50">data..</text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="29.6937%" y="293" width="0.0101%" height="15" fill="rgb(211,216,49)" fg:x="14658" fg:w="5"/><text x="29.9437%" y="303.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.02%)</title><rect x="29.6897%" y="309" width="0.0162%" height="15" fill="rgb(221,58,53)" fg:x="14656" fg:w="8"/><text x="29.9397%" y="319.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (6 samples, 0.01%)</title><rect x="29.7059%" y="309" width="0.0122%" height="15" fill="rgb(220,112,41)" fg:x="14664" fg:w="6"/><text x="29.9559%" y="319.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="29.7059%" y="293" width="0.0122%" height="15" fill="rgb(236,38,28)" fg:x="14664" fg:w="6"/><text x="29.9559%" y="303.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (19 samples, 0.04%)</title><rect x="29.6897%" y="325" width="0.0385%" height="15" fill="rgb(227,195,22)" fg:x="14656" fg:w="19"/><text x="29.9397%" y="335.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (8 samples, 0.02%)</title><rect x="29.7423%" y="309" width="0.0162%" height="15" fill="rgb(214,55,33)" fg:x="14682" fg:w="8"/><text x="29.9923%" y="319.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::update_statistic (16 samples, 0.03%)</title><rect x="29.7281%" y="325" width="0.0324%" height="15" fill="rgb(248,80,13)" fg:x="14675" fg:w="16"/><text x="29.9781%" y="335.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (7 samples, 0.01%)</title><rect x="29.7606%" y="325" width="0.0142%" height="15" fill="rgb(238,52,6)" fg:x="14691" fg:w="7"/><text x="30.0106%" y="335.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (15 samples, 0.03%)</title><rect x="29.7768%" y="325" width="0.0304%" height="15" fill="rgb(224,198,47)" fg:x="14699" fg:w="15"/><text x="30.0268%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="29.8071%" y="325" width="0.0101%" height="15" fill="rgb(233,171,20)" fg:x="14714" fg:w="5"/><text x="30.0571%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.01%)</title><rect x="29.8234%" y="325" width="0.0142%" height="15" fill="rgb(241,30,25)" fg:x="14722" fg:w="7"/><text x="30.0734%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_small (5 samples, 0.01%)</title><rect x="29.8375%" y="325" width="0.0101%" height="15" fill="rgb(207,171,38)" fg:x="14729" fg:w="5"/><text x="30.0875%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="29.8477%" y="325" width="0.0142%" height="15" fill="rgb(234,70,1)" fg:x="14734" fg:w="7"/><text x="30.0977%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="29.8497%" y="309" width="0.0122%" height="15" fill="rgb(232,178,18)" fg:x="14735" fg:w="6"/><text x="30.0997%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (2,480 samples, 5.02%)</title><rect x="24.8460%" y="341" width="5.0239%" height="15" fill="rgb(241,78,40)" fg:x="12265" fg:w="2480"/><text x="25.0960%" y="351.50">databe..</text></g><g><title>databend-query`common_base::runtime::runtime_tracker::ThreadTracker::alloc (9 samples, 0.02%)</title><rect x="29.8780%" y="341" width="0.0182%" height="15" fill="rgb(222,35,25)" fg:x="14749" fg:w="9"/><text x="30.1280%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="29.9044%" y="341" width="0.0122%" height="15" fill="rgb(207,92,16)" fg:x="14762" fg:w="6"/><text x="30.1544%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (27 samples, 0.05%)</title><rect x="29.9186%" y="341" width="0.0547%" height="15" fill="rgb(216,59,51)" fg:x="14769" fg:w="27"/><text x="30.1686%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (3,369 samples, 6.82%)</title><rect x="23.1525%" y="373" width="6.8248%" height="15" fill="rgb(213,80,28)" fg:x="11429" fg:w="3369"/><text x="23.4025%" y="383.50">databend-..</text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (3,369 samples, 6.82%)</title><rect x="23.1525%" y="357" width="6.8248%" height="15" fill="rgb(220,93,7)" fg:x="11429" fg:w="3369"/><text x="23.4025%" y="367.50">databend-..</text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="29.9996%" y="341" width="0.0101%" height="15" fill="rgb(225,24,44)" fg:x="14809" fg:w="5"/><text x="30.2496%" y="351.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 0.02%)</title><rect x="29.9874%" y="357" width="0.0243%" height="15" fill="rgb(243,74,40)" fg:x="14803" fg:w="12"/><text x="30.2374%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (9 samples, 0.02%)</title><rect x="30.0117%" y="357" width="0.0182%" height="15" fill="rgb(228,39,7)" fg:x="14815" fg:w="9"/><text x="30.2617%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (30 samples, 0.06%)</title><rect x="29.9814%" y="373" width="0.0608%" height="15" fill="rgb(227,79,8)" fg:x="14800" fg:w="30"/><text x="30.2314%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::update_statistic (13 samples, 0.03%)</title><rect x="30.0421%" y="373" width="0.0263%" height="15" fill="rgb(236,58,11)" fg:x="14830" fg:w="13"/><text x="30.2921%" y="383.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.02%)</title><rect x="30.0705%" y="357" width="0.0162%" height="15" fill="rgb(249,63,35)" fg:x="14844" fg:w="8"/><text x="30.3205%" y="367.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.02%)</title><rect x="30.0867%" y="357" width="0.0223%" height="15" fill="rgb(252,114,16)" fg:x="14852" fg:w="11"/><text x="30.3367%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="30.0968%" y="341" width="0.0122%" height="15" fill="rgb(254,151,24)" fg:x="14857" fg:w="6"/><text x="30.3468%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (21 samples, 0.04%)</title><rect x="30.0685%" y="373" width="0.0425%" height="15" fill="rgb(253,54,39)" fg:x="14843" fg:w="21"/><text x="30.3185%" y="383.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (27 samples, 0.05%)</title><rect x="30.1130%" y="373" width="0.0547%" height="15" fill="rgb(243,25,45)" fg:x="14865" fg:w="27"/><text x="30.3630%" y="383.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.01%)</title><rect x="30.1677%" y="373" width="0.0142%" height="15" fill="rgb(234,134,9)" fg:x="14892" fg:w="7"/><text x="30.4177%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.03%)</title><rect x="30.1880%" y="373" width="0.0284%" height="15" fill="rgb(227,166,31)" fg:x="14902" fg:w="14"/><text x="30.4380%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_small (9 samples, 0.02%)</title><rect x="30.2164%" y="373" width="0.0182%" height="15" fill="rgb(245,143,41)" fg:x="14916" fg:w="9"/><text x="30.4664%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.02%)</title><rect x="30.2346%" y="373" width="0.0223%" height="15" fill="rgb(238,181,32)" fg:x="14925" fg:w="11"/><text x="30.4846%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.02%)</title><rect x="30.2407%" y="357" width="0.0162%" height="15" fill="rgb(224,113,18)" fg:x="14928" fg:w="8"/><text x="30.4907%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (4,092 samples, 8.29%)</title><rect x="21.9978%" y="389" width="8.2894%" height="15" fill="rgb(240,229,28)" fg:x="10859" fg:w="4092"/><text x="22.2478%" y="399.50">databend-que..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.02%)</title><rect x="30.2710%" y="373" width="0.0162%" height="15" fill="rgb(250,185,3)" fg:x="14943" fg:w="8"/><text x="30.5210%" y="383.50"></text></g><g><title>databend-query`common_base::runtime::runtime_tracker::ThreadTracker::alloc (6 samples, 0.01%)</title><rect x="30.2933%" y="389" width="0.0122%" height="15" fill="rgb(212,59,25)" fg:x="14954" fg:w="6"/><text x="30.5433%" y="399.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.02%)</title><rect x="30.3055%" y="389" width="0.0162%" height="15" fill="rgb(221,87,20)" fg:x="14960" fg:w="8"/><text x="30.5555%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (27 samples, 0.05%)</title><rect x="30.3298%" y="389" width="0.0547%" height="15" fill="rgb(213,74,28)" fg:x="14972" fg:w="27"/><text x="30.5798%" y="399.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (4,916 samples, 9.96%)</title><rect x="20.4319%" y="405" width="9.9587%" height="15" fill="rgb(224,132,34)" fg:x="10086" fg:w="4916"/><text x="20.6819%" y="415.50">databend-query..</text></g><g><title>libsystem_malloc.dylib`free (41 samples, 0.08%)</title><rect x="30.9152%" y="373" width="0.0831%" height="15" fill="rgb(222,101,24)" fg:x="15261" fg:w="41"/><text x="31.1652%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (19 samples, 0.04%)</title><rect x="30.9598%" y="357" width="0.0385%" height="15" fill="rgb(254,142,4)" fg:x="15283" fg:w="19"/><text x="31.2098%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (12 samples, 0.02%)</title><rect x="31.0023%" y="373" width="0.0243%" height="15" fill="rgb(230,229,49)" fg:x="15304" fg:w="12"/><text x="31.2523%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (291 samples, 0.59%)</title><rect x="30.4453%" y="389" width="0.5895%" height="15" fill="rgb(238,70,47)" fg:x="15029" fg:w="291"/><text x="30.6953%" y="399.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (25 samples, 0.05%)</title><rect x="31.0348%" y="389" width="0.0506%" height="15" fill="rgb(231,160,17)" fg:x="15320" fg:w="25"/><text x="31.2848%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (41 samples, 0.08%)</title><rect x="31.0895%" y="389" width="0.0831%" height="15" fill="rgb(218,68,53)" fg:x="15347" fg:w="41"/><text x="31.3395%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (11 samples, 0.02%)</title><rect x="31.1502%" y="373" width="0.0223%" height="15" fill="rgb(236,111,10)" fg:x="15377" fg:w="11"/><text x="31.4002%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.02%)</title><rect x="31.1563%" y="357" width="0.0162%" height="15" fill="rgb(224,34,41)" fg:x="15380" fg:w="8"/><text x="31.4063%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (35 samples, 0.07%)</title><rect x="31.2880%" y="373" width="0.0709%" height="15" fill="rgb(241,118,19)" fg:x="15445" fg:w="35"/><text x="31.5380%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_find_by_ptr (7 samples, 0.01%)</title><rect x="31.3589%" y="373" width="0.0142%" height="15" fill="rgb(238,129,25)" fg:x="15480" fg:w="7"/><text x="31.6089%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (8 samples, 0.02%)</title><rect x="31.3731%" y="373" width="0.0162%" height="15" fill="rgb(238,22,31)" fg:x="15487" fg:w="8"/><text x="31.6231%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_small (164 samples, 0.33%)</title><rect x="31.1725%" y="389" width="0.3322%" height="15" fill="rgb(222,174,48)" fg:x="15388" fg:w="164"/><text x="31.4225%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (57 samples, 0.12%)</title><rect x="31.3893%" y="373" width="0.1155%" height="15" fill="rgb(206,152,40)" fg:x="15495" fg:w="57"/><text x="31.6393%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.02%)</title><rect x="31.5047%" y="389" width="0.0223%" height="15" fill="rgb(218,99,54)" fg:x="15552" fg:w="11"/><text x="31.7547%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.02%)</title><rect x="31.5047%" y="373" width="0.0223%" height="15" fill="rgb(220,174,26)" fg:x="15552" fg:w="11"/><text x="31.7547%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (568 samples, 1.15%)</title><rect x="30.3966%" y="405" width="1.1506%" height="15" fill="rgb(245,116,9)" fg:x="15005" fg:w="568"/><text x="30.6466%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (29 samples, 0.06%)</title><rect x="32.0314%" y="341" width="0.0587%" height="15" fill="rgb(209,72,35)" fg:x="15812" fg:w="29"/><text x="32.2814%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (14 samples, 0.03%)</title><rect x="32.0618%" y="325" width="0.0284%" height="15" fill="rgb(226,126,21)" fg:x="15827" fg:w="14"/><text x="32.3118%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (13 samples, 0.03%)</title><rect x="32.0983%" y="341" width="0.0263%" height="15" fill="rgb(227,192,1)" fg:x="15845" fg:w="13"/><text x="32.3483%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (263 samples, 0.53%)</title><rect x="31.6020%" y="357" width="0.5328%" height="15" fill="rgb(237,180,29)" fg:x="15600" fg:w="263"/><text x="31.8520%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (5 samples, 0.01%)</title><rect x="32.1246%" y="341" width="0.0101%" height="15" fill="rgb(230,197,35)" fg:x="15858" fg:w="5"/><text x="32.3746%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (33 samples, 0.07%)</title><rect x="32.1348%" y="357" width="0.0669%" height="15" fill="rgb(246,193,31)" fg:x="15863" fg:w="33"/><text x="32.3848%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_size (11 samples, 0.02%)</title><rect x="32.2543%" y="341" width="0.0223%" height="15" fill="rgb(241,36,4)" fg:x="15922" fg:w="11"/><text x="32.5043%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (46 samples, 0.09%)</title><rect x="32.2097%" y="357" width="0.0932%" height="15" fill="rgb(241,130,17)" fg:x="15900" fg:w="46"/><text x="32.4597%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (13 samples, 0.03%)</title><rect x="32.2766%" y="341" width="0.0263%" height="15" fill="rgb(206,137,32)" fg:x="15933" fg:w="13"/><text x="32.5266%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (6 samples, 0.01%)</title><rect x="32.2907%" y="325" width="0.0122%" height="15" fill="rgb(237,228,51)" fg:x="15940" fg:w="6"/><text x="32.5407%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (26 samples, 0.05%)</title><rect x="32.3475%" y="341" width="0.0527%" height="15" fill="rgb(243,6,42)" fg:x="15968" fg:w="26"/><text x="32.5975%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_find_by_ptr (5 samples, 0.01%)</title><rect x="32.4001%" y="341" width="0.0101%" height="15" fill="rgb(251,74,28)" fg:x="15994" fg:w="5"/><text x="32.6501%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (7 samples, 0.01%)</title><rect x="32.4103%" y="341" width="0.0142%" height="15" fill="rgb(218,20,49)" fg:x="15999" fg:w="7"/><text x="32.6603%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_small (113 samples, 0.23%)</title><rect x="32.3029%" y="357" width="0.2289%" height="15" fill="rgb(238,28,14)" fg:x="15946" fg:w="113"/><text x="32.5529%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (53 samples, 0.11%)</title><rect x="32.4244%" y="341" width="0.1074%" height="15" fill="rgb(229,40,46)" fg:x="16006" fg:w="53"/><text x="32.6744%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.02%)</title><rect x="32.5318%" y="357" width="0.0223%" height="15" fill="rgb(244,195,20)" fg:x="16059" fg:w="11"/><text x="32.7818%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.02%)</title><rect x="32.5318%" y="341" width="0.0223%" height="15" fill="rgb(253,56,35)" fg:x="16059" fg:w="11"/><text x="32.7818%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (6 samples, 0.01%)</title><rect x="32.5743%" y="357" width="0.0122%" height="15" fill="rgb(210,149,44)" fg:x="16080" fg:w="6"/><text x="32.8243%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (512 samples, 1.04%)</title><rect x="31.5574%" y="373" width="1.0372%" height="15" fill="rgb(240,135,12)" fg:x="15578" fg:w="512"/><text x="31.8074%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.03%)</title><rect x="32.8661%" y="309" width="0.0344%" height="15" fill="rgb(251,24,50)" fg:x="16224" fg:w="17"/><text x="33.1161%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (7 samples, 0.01%)</title><rect x="32.8863%" y="293" width="0.0142%" height="15" fill="rgb(243,200,47)" fg:x="16234" fg:w="7"/><text x="33.1363%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (11 samples, 0.02%)</title><rect x="32.9025%" y="309" width="0.0223%" height="15" fill="rgb(224,166,26)" fg:x="16242" fg:w="11"/><text x="33.1525%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (153 samples, 0.31%)</title><rect x="32.6209%" y="325" width="0.3099%" height="15" fill="rgb(233,0,47)" fg:x="16103" fg:w="153"/><text x="32.8709%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (15 samples, 0.03%)</title><rect x="32.9309%" y="325" width="0.0304%" height="15" fill="rgb(253,80,5)" fg:x="16256" fg:w="15"/><text x="33.1809%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (16 samples, 0.03%)</title><rect x="32.9653%" y="325" width="0.0324%" height="15" fill="rgb(214,133,25)" fg:x="16273" fg:w="16"/><text x="33.2153%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.01%)</title><rect x="32.9876%" y="309" width="0.0101%" height="15" fill="rgb(209,27,14)" fg:x="16284" fg:w="5"/><text x="33.2376%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (9 samples, 0.02%)</title><rect x="33.0281%" y="309" width="0.0182%" height="15" fill="rgb(219,102,51)" fg:x="16304" fg:w="9"/><text x="33.2781%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_small (58 samples, 0.12%)</title><rect x="32.9977%" y="325" width="0.1175%" height="15" fill="rgb(237,18,16)" fg:x="16289" fg:w="58"/><text x="33.2477%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (31 samples, 0.06%)</title><rect x="33.0524%" y="309" width="0.0628%" height="15" fill="rgb(241,85,17)" fg:x="16316" fg:w="31"/><text x="33.3024%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (271 samples, 0.55%)</title><rect x="32.5987%" y="341" width="0.5490%" height="15" fill="rgb(236,90,42)" fg:x="16092" fg:w="271"/><text x="32.8487%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.02%)</title><rect x="33.2975%" y="277" width="0.0203%" height="15" fill="rgb(249,57,21)" fg:x="16437" fg:w="10"/><text x="33.5475%" y="287.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (78 samples, 0.16%)</title><rect x="33.1659%" y="293" width="0.1580%" height="15" fill="rgb(243,12,36)" fg:x="16372" fg:w="78"/><text x="33.4159%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="33.3239%" y="293" width="0.0101%" height="15" fill="rgb(253,128,47)" fg:x="16450" fg:w="5"/><text x="33.5739%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (15 samples, 0.03%)</title><rect x="33.3340%" y="293" width="0.0304%" height="15" fill="rgb(207,33,20)" fg:x="16455" fg:w="15"/><text x="33.5840%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_small (25 samples, 0.05%)</title><rect x="33.3644%" y="293" width="0.0506%" height="15" fill="rgb(233,215,35)" fg:x="16470" fg:w="25"/><text x="33.6144%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (9 samples, 0.02%)</title><rect x="33.3968%" y="277" width="0.0182%" height="15" fill="rgb(249,188,52)" fg:x="16486" fg:w="9"/><text x="33.6468%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="33.4150%" y="293" width="0.0182%" height="15" fill="rgb(225,12,32)" fg:x="16495" fg:w="9"/><text x="33.6650%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.01%)</title><rect x="33.4191%" y="277" width="0.0142%" height="15" fill="rgb(247,98,14)" fg:x="16497" fg:w="7"/><text x="33.6691%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (5 samples, 0.01%)</title><rect x="33.4414%" y="293" width="0.0101%" height="15" fill="rgb(247,219,48)" fg:x="16508" fg:w="5"/><text x="33.6914%" y="303.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (147 samples, 0.30%)</title><rect x="33.1557%" y="309" width="0.2978%" height="15" fill="rgb(253,60,48)" fg:x="16367" fg:w="147"/><text x="33.4057%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.02%)</title><rect x="33.5872%" y="245" width="0.0162%" height="15" fill="rgb(245,15,52)" fg:x="16580" fg:w="8"/><text x="33.8372%" y="255.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (73 samples, 0.15%)</title><rect x="33.4677%" y="261" width="0.1479%" height="15" fill="rgb(220,133,28)" fg:x="16521" fg:w="73"/><text x="33.7177%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.01%)</title><rect x="33.6055%" y="245" width="0.0101%" height="15" fill="rgb(217,180,4)" fg:x="16589" fg:w="5"/><text x="33.8555%" y="255.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (10 samples, 0.02%)</title><rect x="33.6156%" y="261" width="0.0203%" height="15" fill="rgb(251,24,1)" fg:x="16594" fg:w="10"/><text x="33.8656%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.03%)</title><rect x="33.6358%" y="261" width="0.0284%" height="15" fill="rgb(212,185,49)" fg:x="16604" fg:w="14"/><text x="33.8858%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (7 samples, 0.01%)</title><rect x="33.6500%" y="245" width="0.0142%" height="15" fill="rgb(215,175,22)" fg:x="16611" fg:w="7"/><text x="33.9000%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (7 samples, 0.01%)</title><rect x="33.6500%" y="229" width="0.0142%" height="15" fill="rgb(250,205,14)" fg:x="16611" fg:w="7"/><text x="33.9000%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (12 samples, 0.02%)</title><rect x="33.6804%" y="245" width="0.0243%" height="15" fill="rgb(225,211,22)" fg:x="16626" fg:w="12"/><text x="33.9304%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_small (37 samples, 0.07%)</title><rect x="33.6642%" y="261" width="0.0750%" height="15" fill="rgb(251,179,42)" fg:x="16618" fg:w="37"/><text x="33.9142%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (15 samples, 0.03%)</title><rect x="33.7088%" y="245" width="0.0304%" height="15" fill="rgb(208,216,51)" fg:x="16640" fg:w="15"/><text x="33.9588%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="33.7392%" y="261" width="0.0182%" height="15" fill="rgb(235,36,11)" fg:x="16655" fg:w="9"/><text x="33.9892%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.02%)</title><rect x="33.7412%" y="245" width="0.0162%" height="15" fill="rgb(213,189,28)" fg:x="16656" fg:w="8"/><text x="33.9912%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (5 samples, 0.01%)</title><rect x="33.7473%" y="229" width="0.0101%" height="15" fill="rgb(227,203,42)" fg:x="16659" fg:w="5"/><text x="33.9973%" y="239.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (158 samples, 0.32%)</title><rect x="33.4535%" y="277" width="0.3201%" height="15" fill="rgb(244,72,36)" fg:x="16514" fg:w="158"/><text x="33.7035%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.02%)</title><rect x="33.8870%" y="213" width="0.0162%" height="15" fill="rgb(213,53,17)" fg:x="16728" fg:w="8"/><text x="34.1370%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.01%)</title><rect x="33.8931%" y="197" width="0.0101%" height="15" fill="rgb(207,167,3)" fg:x="16731" fg:w="5"/><text x="34.1431%" y="207.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (60 samples, 0.12%)</title><rect x="33.7858%" y="229" width="0.1215%" height="15" fill="rgb(216,98,30)" fg:x="16678" fg:w="60"/><text x="34.0358%" y="239.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.01%)</title><rect x="33.9073%" y="229" width="0.0142%" height="15" fill="rgb(236,123,15)" fg:x="16738" fg:w="7"/><text x="34.1573%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.02%)</title><rect x="33.9235%" y="229" width="0.0203%" height="15" fill="rgb(248,81,50)" fg:x="16746" fg:w="10"/><text x="34.1735%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (7 samples, 0.01%)</title><rect x="33.9802%" y="213" width="0.0142%" height="15" fill="rgb(214,120,4)" fg:x="16774" fg:w="7"/><text x="34.2302%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_small (31 samples, 0.06%)</title><rect x="33.9438%" y="229" width="0.0628%" height="15" fill="rgb(208,179,34)" fg:x="16756" fg:w="31"/><text x="34.1938%" y="239.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (118 samples, 0.24%)</title><rect x="33.7756%" y="245" width="0.2390%" height="15" fill="rgb(227,140,7)" fg:x="16673" fg:w="118"/><text x="34.0256%" y="255.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="34.0349%" y="213" width="0.0101%" height="15" fill="rgb(214,22,6)" fg:x="16801" fg:w="5"/><text x="34.2849%" y="223.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (17 samples, 0.03%)</title><rect x="34.0248%" y="229" width="0.0344%" height="15" fill="rgb(207,137,27)" fg:x="16796" fg:w="17"/><text x="34.2748%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.01%)</title><rect x="34.0451%" y="213" width="0.0142%" height="15" fill="rgb(210,8,46)" fg:x="16806" fg:w="7"/><text x="34.2951%" y="223.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (25 samples, 0.05%)</title><rect x="34.0147%" y="245" width="0.0506%" height="15" fill="rgb(240,16,54)" fg:x="16791" fg:w="25"/><text x="34.2647%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.03%)</title><rect x="34.0673%" y="245" width="0.0284%" height="15" fill="rgb(211,209,29)" fg:x="16817" fg:w="14"/><text x="34.3173%" y="255.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (163 samples, 0.33%)</title><rect x="33.7736%" y="261" width="0.3302%" height="15" fill="rgb(226,228,24)" fg:x="16672" fg:w="163"/><text x="34.0236%" y="271.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (6 samples, 0.01%)</title><rect x="34.1058%" y="261" width="0.0122%" height="15" fill="rgb(222,84,9)" fg:x="16836" fg:w="6"/><text x="34.3558%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="34.1180%" y="245" width="0.0101%" height="15" fill="rgb(234,203,30)" fg:x="16842" fg:w="5"/><text x="34.3680%" y="255.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::scan::Scan&gt; (6 samples, 0.01%)</title><rect x="34.1180%" y="261" width="0.0122%" height="15" fill="rgb(238,109,14)" fg:x="16842" fg:w="6"/><text x="34.3680%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="34.1443%" y="245" width="0.0101%" height="15" fill="rgb(233,206,34)" fg:x="16855" fg:w="5"/><text x="34.3943%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.01%)</title><rect x="34.1443%" y="229" width="0.0101%" height="15" fill="rgb(220,167,47)" fg:x="16855" fg:w="5"/><text x="34.3943%" y="239.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (14 samples, 0.03%)</title><rect x="34.1301%" y="261" width="0.0284%" height="15" fill="rgb(238,105,10)" fg:x="16848" fg:w="14"/><text x="34.3801%" y="271.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (204 samples, 0.41%)</title><rect x="33.7736%" y="277" width="0.4133%" height="15" fill="rgb(213,227,17)" fg:x="16672" fg:w="204"/><text x="34.0236%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.01%)</title><rect x="34.1889%" y="277" width="0.0122%" height="15" fill="rgb(217,132,38)" fg:x="16877" fg:w="6"/><text x="34.4389%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_small (6 samples, 0.01%)</title><rect x="34.2010%" y="277" width="0.0122%" height="15" fill="rgb(242,146,4)" fg:x="16883" fg:w="6"/><text x="34.4510%" y="287.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (377 samples, 0.76%)</title><rect x="33.4535%" y="293" width="0.7637%" height="15" fill="rgb(212,61,9)" fg:x="16514" fg:w="377"/><text x="33.7035%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="34.2233%" y="261" width="0.0101%" height="15" fill="rgb(247,126,22)" fg:x="16894" fg:w="5"/><text x="34.4733%" y="271.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::binder::bind_context::ColumnBinding&gt; (8 samples, 0.02%)</title><rect x="34.2233%" y="277" width="0.0162%" height="15" fill="rgb(220,196,2)" fg:x="16894" fg:w="8"/><text x="34.4733%" y="287.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (17 samples, 0.03%)</title><rect x="34.2193%" y="293" width="0.0344%" height="15" fill="rgb(208,46,4)" fg:x="16892" fg:w="17"/><text x="34.4693%" y="303.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (403 samples, 0.82%)</title><rect x="33.4535%" y="309" width="0.8164%" height="15" fill="rgb(252,104,46)" fg:x="16514" fg:w="403"/><text x="33.7035%" y="319.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (564 samples, 1.14%)</title><rect x="33.1476%" y="325" width="1.1425%" height="15" fill="rgb(237,152,48)" fg:x="16363" fg:w="564"/><text x="33.3976%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="34.3044%" y="309" width="0.0101%" height="15" fill="rgb(221,59,37)" fg:x="16934" fg:w="5"/><text x="34.5544%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (11 samples, 0.02%)</title><rect x="34.2962%" y="325" width="0.0223%" height="15" fill="rgb(209,202,51)" fg:x="16930" fg:w="11"/><text x="34.5462%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_expression::values::Scalar&gt; (15 samples, 0.03%)</title><rect x="34.3307%" y="309" width="0.0304%" height="15" fill="rgb(228,81,30)" fg:x="16947" fg:w="15"/><text x="34.5807%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.01%)</title><rect x="34.3631%" y="309" width="0.0142%" height="15" fill="rgb(227,42,39)" fg:x="16963" fg:w="7"/><text x="34.6131%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.01%)</title><rect x="34.3672%" y="293" width="0.0101%" height="15" fill="rgb(221,26,2)" fg:x="16965" fg:w="5"/><text x="34.6172%" y="303.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (30 samples, 0.06%)</title><rect x="34.3266%" y="325" width="0.0608%" height="15" fill="rgb(254,61,31)" fg:x="16945" fg:w="30"/><text x="34.5766%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (618 samples, 1.25%)</title><rect x="33.1476%" y="341" width="1.2519%" height="15" fill="rgb(222,173,38)" fg:x="16363" fg:w="618"/><text x="33.3976%" y="351.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (898 samples, 1.82%)</title><rect x="32.5946%" y="357" width="1.8191%" height="15" fill="rgb(218,50,12)" fg:x="16090" fg:w="898"/><text x="32.8446%" y="367.50">d..</text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (10 samples, 0.02%)</title><rect x="34.4198%" y="357" width="0.0203%" height="15" fill="rgb(223,88,40)" fg:x="16991" fg:w="10"/><text x="34.6698%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::scan::Scan&gt; (5 samples, 0.01%)</title><rect x="34.4401%" y="357" width="0.0101%" height="15" fill="rgb(237,54,19)" fg:x="17001" fg:w="5"/><text x="34.6901%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_expression::values::Scalar&gt; (18 samples, 0.04%)</title><rect x="34.4583%" y="341" width="0.0365%" height="15" fill="rgb(251,129,25)" fg:x="17010" fg:w="18"/><text x="34.7083%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.02%)</title><rect x="34.4948%" y="341" width="0.0162%" height="15" fill="rgb(238,97,19)" fg:x="17028" fg:w="8"/><text x="34.7448%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.02%)</title><rect x="34.5110%" y="341" width="0.0182%" height="15" fill="rgb(240,169,18)" fg:x="17036" fg:w="9"/><text x="34.7610%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.01%)</title><rect x="34.5191%" y="325" width="0.0101%" height="15" fill="rgb(230,187,49)" fg:x="17040" fg:w="5"/><text x="34.7691%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (45 samples, 0.09%)</title><rect x="34.4502%" y="357" width="0.0912%" height="15" fill="rgb(209,44,26)" fg:x="17006" fg:w="45"/><text x="34.7002%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.01%)</title><rect x="34.5434%" y="357" width="0.0142%" height="15" fill="rgb(244,0,6)" fg:x="17052" fg:w="7"/><text x="34.7934%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (972 samples, 1.97%)</title><rect x="32.5946%" y="373" width="1.9690%" height="15" fill="rgb(248,18,21)" fg:x="16090" fg:w="972"/><text x="32.8446%" y="383.50">d..</text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (5 samples, 0.01%)</title><rect x="34.5657%" y="373" width="0.0101%" height="15" fill="rgb(245,180,19)" fg:x="17063" fg:w="5"/><text x="34.8157%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.02%)</title><rect x="34.5758%" y="373" width="0.0182%" height="15" fill="rgb(252,118,36)" fg:x="17068" fg:w="9"/><text x="34.8258%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_small (10 samples, 0.02%)</title><rect x="34.5940%" y="373" width="0.0203%" height="15" fill="rgb(210,224,19)" fg:x="17077" fg:w="10"/><text x="34.8440%" y="383.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (1,519 samples, 3.08%)</title><rect x="31.5473%" y="389" width="3.0771%" height="15" fill="rgb(218,30,24)" fg:x="15573" fg:w="1519"/><text x="31.7973%" y="399.50">dat..</text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="34.6264%" y="357" width="0.0101%" height="15" fill="rgb(219,75,50)" fg:x="17093" fg:w="5"/><text x="34.8764%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::binder::bind_context::ColumnBinding&gt; (7 samples, 0.01%)</title><rect x="34.6244%" y="373" width="0.0142%" height="15" fill="rgb(234,72,50)" fg:x="17092" fg:w="7"/><text x="34.8744%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (14 samples, 0.03%)</title><rect x="34.6244%" y="389" width="0.0284%" height="15" fill="rgb(219,100,48)" fg:x="17092" fg:w="14"/><text x="34.8744%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (1,538 samples, 3.12%)</title><rect x="31.5473%" y="405" width="3.1156%" height="15" fill="rgb(253,5,41)" fg:x="15573" fg:w="1538"/><text x="31.7973%" y="415.50">dat..</text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="34.6710%" y="405" width="0.0101%" height="15" fill="rgb(247,181,11)" fg:x="17115" fg:w="5"/><text x="34.9210%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_small (6 samples, 0.01%)</title><rect x="34.6811%" y="405" width="0.0122%" height="15" fill="rgb(222,223,25)" fg:x="17120" fg:w="6"/><text x="34.9311%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::join_node::JoinNode::cardinality (7,427 samples, 15.05%)</title><rect x="19.6601%" y="421" width="15.0454%" height="15" fill="rgb(214,198,28)" fg:x="9705" fg:w="7427"/><text x="19.9101%" y="431.50">databend-query`common_s..</text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(common_sql::planner::plans::scalar_expr::ScalarExpr,common_sql::planner::plans::scalar_expr::ScalarExpr)&gt;&gt; (6 samples, 0.01%)</title><rect x="34.7156%" y="421" width="0.0122%" height="15" fill="rgb(230,46,43)" fg:x="17137" fg:w="6"/><text x="34.9656%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.01%)</title><rect x="34.7318%" y="373" width="0.0142%" height="15" fill="rgb(233,65,53)" fg:x="17145" fg:w="7"/><text x="34.9818%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::binder::bind_context::ColumnBinding&gt; (8 samples, 0.02%)</title><rect x="34.7318%" y="389" width="0.0162%" height="15" fill="rgb(221,121,27)" fg:x="17145" fg:w="8"/><text x="34.9818%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(common_sql::planner::plans::scalar_expr::ScalarExpr,common_sql::planner::plans::scalar_expr::ScalarExpr)&gt;&gt; (12 samples, 0.02%)</title><rect x="34.7277%" y="405" width="0.0243%" height="15" fill="rgb(247,70,47)" fg:x="17143" fg:w="12"/><text x="34.9777%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(common_sql::planner::plans::scalar_expr::ScalarExpr,common_sql::planner::plans::scalar_expr::ScalarExpr)&gt;&gt; (5 samples, 0.01%)</title><rect x="34.7520%" y="389" width="0.0101%" height="15" fill="rgb(228,85,35)" fg:x="17155" fg:w="5"/><text x="35.0020%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(common_sql::planner::plans::scalar_expr::ScalarExpr,common_sql::planner::plans::scalar_expr::ScalarExpr)&gt;&gt; (9 samples, 0.02%)</title><rect x="34.7642%" y="373" width="0.0182%" height="15" fill="rgb(209,50,18)" fg:x="17161" fg:w="9"/><text x="35.0142%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::binder::bind_context::ColumnBinding&gt; (7 samples, 0.01%)</title><rect x="34.7824%" y="341" width="0.0142%" height="15" fill="rgb(250,19,35)" fg:x="17170" fg:w="7"/><text x="35.0324%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(common_sql::planner::plans::scalar_expr::ScalarExpr,common_sql::planner::plans::scalar_expr::ScalarExpr)&gt;&gt; (14 samples, 0.03%)</title><rect x="34.7824%" y="357" width="0.0284%" height="15" fill="rgb(253,107,29)" fg:x="17170" fg:w="14"/><text x="35.0324%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(common_sql::planner::plans::scalar_expr::ScalarExpr,common_sql::planner::plans::scalar_expr::ScalarExpr)&gt;&gt; (6 samples, 0.01%)</title><rect x="34.8128%" y="341" width="0.0122%" height="15" fill="rgb(252,179,29)" fg:x="17185" fg:w="6"/><text x="35.0628%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (7 samples, 0.01%)</title><rect x="34.8250%" y="341" width="0.0142%" height="15" fill="rgb(238,194,6)" fg:x="17191" fg:w="7"/><text x="35.0750%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (20 samples, 0.04%)</title><rect x="34.8108%" y="357" width="0.0405%" height="15" fill="rgb(238,164,29)" fg:x="17184" fg:w="20"/><text x="35.0608%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (42 samples, 0.09%)</title><rect x="34.7824%" y="373" width="0.0851%" height="15" fill="rgb(224,25,9)" fg:x="17170" fg:w="42"/><text x="35.0324%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (59 samples, 0.12%)</title><rect x="34.7622%" y="389" width="0.1195%" height="15" fill="rgb(244,153,23)" fg:x="17160" fg:w="59"/><text x="35.0122%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (68 samples, 0.14%)</title><rect x="34.7520%" y="405" width="0.1378%" height="15" fill="rgb(212,203,14)" fg:x="17155" fg:w="68"/><text x="35.0020%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (83 samples, 0.17%)</title><rect x="34.7277%" y="421" width="0.1681%" height="15" fill="rgb(220,164,20)" fg:x="17143" fg:w="83"/><text x="34.9777%" y="431.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::emit_csg_cmp (7,618 samples, 15.43%)</title><rect x="19.4697%" y="437" width="15.4323%" height="15" fill="rgb(222,203,48)" fg:x="9611" fg:w="7618"/><text x="19.7197%" y="447.50">databend-query`common_sq..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (16 samples, 0.03%)</title><rect x="34.9020%" y="437" width="0.0324%" height="15" fill="rgb(215,159,22)" fg:x="17229" fg:w="16"/><text x="35.1520%" y="447.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::query_graph::QueryGraph::neighbors (16 samples, 0.03%)</title><rect x="34.9020%" y="421" width="0.0324%" height="15" fill="rgb(216,183,47)" fg:x="17229" fg:w="16"/><text x="35.1520%" y="431.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::join_relation::RelationSetTree::get_relation_set_by_index (7 samples, 0.01%)</title><rect x="34.9344%" y="437" width="0.0142%" height="15" fill="rgb(229,195,25)" fg:x="17245" fg:w="7"/><text x="35.1844%" y="447.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::query_graph::QueryGraph::neighbors (7 samples, 0.01%)</title><rect x="34.9566%" y="437" width="0.0142%" height="15" fill="rgb(224,132,51)" fg:x="17256" fg:w="7"/><text x="35.2066%" y="447.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (7,670 samples, 15.54%)</title><rect x="19.4636%" y="453" width="15.5376%" height="15" fill="rgb(240,63,7)" fg:x="9608" fg:w="7670"/><text x="19.7136%" y="463.50">databend-query`common_sq..</text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="35.0073%" y="405" width="0.0223%" height="15" fill="rgb(249,182,41)" fg:x="17281" fg:w="11"/><text x="35.2573%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.02%)</title><rect x="35.0113%" y="389" width="0.0182%" height="15" fill="rgb(243,47,26)" fg:x="17283" fg:w="9"/><text x="35.2613%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.01%)</title><rect x="35.0194%" y="373" width="0.0101%" height="15" fill="rgb(233,48,2)" fg:x="17287" fg:w="5"/><text x="35.2694%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (13 samples, 0.03%)</title><rect x="35.0073%" y="421" width="0.0263%" height="15" fill="rgb(244,165,34)" fg:x="17281" fg:w="13"/><text x="35.2573%" y="431.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.03%)</title><rect x="35.0073%" y="437" width="0.0284%" height="15" fill="rgb(207,89,7)" fg:x="17281" fg:w="14"/><text x="35.2573%" y="447.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::query_graph::QueryGraph::is_connected (17 samples, 0.03%)</title><rect x="35.0032%" y="453" width="0.0344%" height="15" fill="rgb(244,117,36)" fg:x="17279" fg:w="17"/><text x="35.2532%" y="463.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::query_graph::QueryGraph::neighbors (8 samples, 0.02%)</title><rect x="35.0377%" y="453" width="0.0162%" height="15" fill="rgb(226,144,34)" fg:x="17296" fg:w="8"/><text x="35.2877%" y="463.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="35.0620%" y="453" width="0.0101%" height="15" fill="rgb(213,23,19)" fg:x="17308" fg:w="5"/><text x="35.3120%" y="463.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="35.0620%" y="437" width="0.0101%" height="15" fill="rgb(217,75,12)" fg:x="17308" fg:w="5"/><text x="35.3120%" y="447.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (12,780 samples, 25.89%)</title><rect x="9.1929%" y="469" width="25.8893%" height="15" fill="rgb(224,159,17)" fg:x="4538" fg:w="12780"/><text x="9.4429%" y="479.50">databend-query`common_sql::planner::optim..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (14,609 samples, 29.59%)</title><rect x="5.5101%" y="485" width="29.5944%" height="15" fill="rgb(217,118,1)" fg:x="2720" fg:w="14609"/><text x="5.7601%" y="495.50">databend-query`common_sql::planner::optimizer::h..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::emit_csg (15,116 samples, 30.62%)</title><rect x="4.4871%" y="565" width="30.6215%" height="15" fill="rgb(232,180,48)" fg:x="2215" fg:w="15116"/><text x="4.7371%" y="575.50">databend-query`common_sql::planner::optimizer::hy..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (15,113 samples, 30.62%)</title><rect x="4.4932%" y="549" width="30.6154%" height="15" fill="rgb(230,27,33)" fg:x="2218" fg:w="15113"/><text x="4.7432%" y="559.50">databend-query`common_sql::planner::optimizer::hy..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (15,111 samples, 30.61%)</title><rect x="4.4972%" y="533" width="30.6114%" height="15" fill="rgb(205,31,21)" fg:x="2220" fg:w="15111"/><text x="4.7472%" y="543.50">databend-query`common_sql::planner::optimizer::hy..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (15,094 samples, 30.58%)</title><rect x="4.5316%" y="517" width="30.5769%" height="15" fill="rgb(253,59,4)" fg:x="2237" fg:w="15094"/><text x="4.7816%" y="527.50">databend-query`common_sql::planner::optimizer::hy..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (15,017 samples, 30.42%)</title><rect x="4.6876%" y="501" width="30.4210%" height="15" fill="rgb(224,201,9)" fg:x="2314" fg:w="15017"/><text x="4.9376%" y="511.50">databend-query`common_sql::planner::optimizer::hy..</text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (6 samples, 0.01%)</title><rect x="35.1268%" y="469" width="0.0122%" height="15" fill="rgb(229,206,30)" fg:x="17340" fg:w="6"/><text x="35.3768%" y="479.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (6 samples, 0.01%)</title><rect x="35.1268%" y="453" width="0.0122%" height="15" fill="rgb(212,67,47)" fg:x="17340" fg:w="6"/><text x="35.3768%" y="463.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::emit_csg_cmp (14 samples, 0.03%)</title><rect x="35.1228%" y="501" width="0.0284%" height="15" fill="rgb(211,96,50)" fg:x="17338" fg:w="14"/><text x="35.3728%" y="511.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::join_node::JoinNode::cardinality (13 samples, 0.03%)</title><rect x="35.1248%" y="485" width="0.0263%" height="15" fill="rgb(252,114,18)" fg:x="17339" fg:w="13"/><text x="35.3748%" y="495.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (5 samples, 0.01%)</title><rect x="35.1531%" y="453" width="0.0101%" height="15" fill="rgb(223,58,37)" fg:x="17353" fg:w="5"/><text x="35.4031%" y="463.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (5 samples, 0.01%)</title><rect x="35.1531%" y="437" width="0.0101%" height="15" fill="rgb(237,70,4)" fg:x="17353" fg:w="5"/><text x="35.4031%" y="447.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (5 samples, 0.01%)</title><rect x="35.1531%" y="421" width="0.0101%" height="15" fill="rgb(244,85,46)" fg:x="17353" fg:w="5"/><text x="35.4031%" y="431.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="35.1633%" y="437" width="0.0142%" height="15" fill="rgb(223,39,52)" fg:x="17358" fg:w="7"/><text x="35.4133%" y="447.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (5 samples, 0.01%)</title><rect x="35.1795%" y="421" width="0.0101%" height="15" fill="rgb(218,200,14)" fg:x="17366" fg:w="5"/><text x="35.4295%" y="431.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (13 samples, 0.03%)</title><rect x="35.1977%" y="389" width="0.0263%" height="15" fill="rgb(208,171,16)" fg:x="17375" fg:w="13"/><text x="35.4477%" y="399.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="35.2342%" y="341" width="0.0142%" height="15" fill="rgb(234,200,18)" fg:x="17393" fg:w="7"/><text x="35.4842%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (13 samples, 0.03%)</title><rect x="35.2342%" y="373" width="0.0263%" height="15" fill="rgb(228,45,11)" fg:x="17393" fg:w="13"/><text x="35.4842%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (13 samples, 0.03%)</title><rect x="35.2342%" y="357" width="0.0263%" height="15" fill="rgb(237,182,11)" fg:x="17393" fg:w="13"/><text x="35.4842%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (6 samples, 0.01%)</title><rect x="35.2484%" y="341" width="0.0122%" height="15" fill="rgb(241,175,49)" fg:x="17400" fg:w="6"/><text x="35.4984%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (21 samples, 0.04%)</title><rect x="35.2240%" y="389" width="0.0425%" height="15" fill="rgb(247,38,35)" fg:x="17388" fg:w="21"/><text x="35.4740%" y="399.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (36 samples, 0.07%)</title><rect x="35.1977%" y="421" width="0.0729%" height="15" fill="rgb(228,39,49)" fg:x="17375" fg:w="36"/><text x="35.4477%" y="431.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (36 samples, 0.07%)</title><rect x="35.1977%" y="405" width="0.0729%" height="15" fill="rgb(226,101,26)" fg:x="17375" fg:w="36"/><text x="35.4477%" y="415.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (50 samples, 0.10%)</title><rect x="35.1775%" y="437" width="0.1013%" height="15" fill="rgb(206,141,19)" fg:x="17365" fg:w="50"/><text x="35.4275%" y="447.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (58 samples, 0.12%)</title><rect x="35.1633%" y="453" width="0.1175%" height="15" fill="rgb(211,200,13)" fg:x="17358" fg:w="58"/><text x="35.4133%" y="463.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (8 samples, 0.02%)</title><rect x="35.2808%" y="453" width="0.0162%" height="15" fill="rgb(241,121,6)" fg:x="17416" fg:w="8"/><text x="35.5308%" y="463.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (5 samples, 0.01%)</title><rect x="35.3031%" y="389" width="0.0101%" height="15" fill="rgb(234,221,29)" fg:x="17427" fg:w="5"/><text x="35.5531%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (5 samples, 0.01%)</title><rect x="35.3031%" y="373" width="0.0101%" height="15" fill="rgb(229,136,5)" fg:x="17427" fg:w="5"/><text x="35.5531%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (5 samples, 0.01%)</title><rect x="35.3132%" y="389" width="0.0101%" height="15" fill="rgb(238,36,11)" fg:x="17432" fg:w="5"/><text x="35.5632%" y="399.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (11 samples, 0.02%)</title><rect x="35.3031%" y="405" width="0.0223%" height="15" fill="rgb(251,55,41)" fg:x="17427" fg:w="11"/><text x="35.5531%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::join_node::JoinNode::cardinality (87 samples, 0.18%)</title><rect x="35.1531%" y="469" width="0.1762%" height="15" fill="rgb(242,34,40)" fg:x="17353" fg:w="87"/><text x="35.4031%" y="479.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (16 samples, 0.03%)</title><rect x="35.2970%" y="453" width="0.0324%" height="15" fill="rgb(215,42,17)" fg:x="17424" fg:w="16"/><text x="35.5470%" y="463.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (16 samples, 0.03%)</title><rect x="35.2970%" y="437" width="0.0324%" height="15" fill="rgb(207,44,46)" fg:x="17424" fg:w="16"/><text x="35.5470%" y="447.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (13 samples, 0.03%)</title><rect x="35.3031%" y="421" width="0.0263%" height="15" fill="rgb(211,206,28)" fg:x="17427" fg:w="13"/><text x="35.5531%" y="431.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::emit_csg_cmp (89 samples, 0.18%)</title><rect x="35.1531%" y="485" width="0.1803%" height="15" fill="rgb(237,167,16)" fg:x="17353" fg:w="89"/><text x="35.4031%" y="495.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="35.3355%" y="437" width="0.0122%" height="15" fill="rgb(233,66,6)" fg:x="17443" fg:w="6"/><text x="35.5855%" y="447.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="35.3355%" y="453" width="0.0142%" height="15" fill="rgb(246,123,29)" fg:x="17443" fg:w="7"/><text x="35.5855%" y="463.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="35.3496%" y="405" width="0.0101%" height="15" fill="rgb(209,62,40)" fg:x="17450" fg:w="5"/><text x="35.5996%" y="415.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="35.3496%" y="389" width="0.0101%" height="15" fill="rgb(218,4,25)" fg:x="17450" fg:w="5"/><text x="35.5996%" y="399.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="35.3618%" y="389" width="0.0142%" height="15" fill="rgb(253,91,49)" fg:x="17456" fg:w="7"/><text x="35.6118%" y="399.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="35.3618%" y="373" width="0.0142%" height="15" fill="rgb(228,155,29)" fg:x="17456" fg:w="7"/><text x="35.6118%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="35.3780%" y="373" width="0.0122%" height="15" fill="rgb(243,57,37)" fg:x="17464" fg:w="6"/><text x="35.6280%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="35.3800%" y="357" width="0.0101%" height="15" fill="rgb(244,167,17)" fg:x="17465" fg:w="5"/><text x="35.6300%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (15 samples, 0.03%)</title><rect x="35.3618%" y="405" width="0.0304%" height="15" fill="rgb(207,181,38)" fg:x="17456" fg:w="15"/><text x="35.6118%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (7 samples, 0.01%)</title><rect x="35.3780%" y="389" width="0.0142%" height="15" fill="rgb(211,8,23)" fg:x="17464" fg:w="7"/><text x="35.6280%" y="399.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (22 samples, 0.04%)</title><rect x="35.3496%" y="421" width="0.0446%" height="15" fill="rgb(235,11,44)" fg:x="17450" fg:w="22"/><text x="35.5996%" y="431.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (24 samples, 0.05%)</title><rect x="35.3496%" y="437" width="0.0486%" height="15" fill="rgb(248,18,52)" fg:x="17450" fg:w="24"/><text x="35.5996%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (7 samples, 0.01%)</title><rect x="35.5036%" y="373" width="0.0142%" height="15" fill="rgb(208,4,7)" fg:x="17526" fg:w="7"/><text x="35.7536%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (5 samples, 0.01%)</title><rect x="35.5077%" y="357" width="0.0101%" height="15" fill="rgb(240,17,39)" fg:x="17528" fg:w="5"/><text x="35.7577%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (60 samples, 0.12%)</title><rect x="35.4003%" y="421" width="0.1215%" height="15" fill="rgb(207,170,3)" fg:x="17475" fg:w="60"/><text x="35.6503%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (13 samples, 0.03%)</title><rect x="35.4955%" y="405" width="0.0263%" height="15" fill="rgb(236,100,52)" fg:x="17522" fg:w="13"/><text x="35.7455%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="35.5036%" y="389" width="0.0182%" height="15" fill="rgb(246,78,51)" fg:x="17526" fg:w="9"/><text x="35.7536%" y="399.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (15 samples, 0.03%)</title><rect x="35.5360%" y="389" width="0.0304%" height="15" fill="rgb(211,17,15)" fg:x="17542" fg:w="15"/><text x="35.7860%" y="399.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (22 samples, 0.04%)</title><rect x="35.5320%" y="405" width="0.0446%" height="15" fill="rgb(209,59,46)" fg:x="17540" fg:w="22"/><text x="35.7820%" y="415.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (13 samples, 0.03%)</title><rect x="35.5786%" y="389" width="0.0263%" height="15" fill="rgb(210,92,25)" fg:x="17563" fg:w="13"/><text x="35.8286%" y="399.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (18 samples, 0.04%)</title><rect x="35.5765%" y="405" width="0.0365%" height="15" fill="rgb(238,174,52)" fg:x="17562" fg:w="18"/><text x="35.8265%" y="415.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (15 samples, 0.03%)</title><rect x="35.6130%" y="405" width="0.0304%" height="15" fill="rgb(230,73,7)" fg:x="17580" fg:w="15"/><text x="35.8630%" y="415.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.02%)</title><rect x="35.6231%" y="389" width="0.0203%" height="15" fill="rgb(243,124,40)" fg:x="17585" fg:w="10"/><text x="35.8731%" y="399.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (50 samples, 0.10%)</title><rect x="35.6454%" y="373" width="0.1013%" height="15" fill="rgb(244,170,11)" fg:x="17596" fg:w="50"/><text x="35.8954%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.03%)</title><rect x="35.7143%" y="357" width="0.0324%" height="15" fill="rgb(207,114,54)" fg:x="17630" fg:w="16"/><text x="35.9643%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="35.7244%" y="341" width="0.0223%" height="15" fill="rgb(205,42,20)" fg:x="17635" fg:w="11"/><text x="35.9744%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (10 samples, 0.02%)</title><rect x="35.7264%" y="325" width="0.0203%" height="15" fill="rgb(230,30,28)" fg:x="17636" fg:w="10"/><text x="35.9764%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (8 samples, 0.02%)</title><rect x="35.7305%" y="309" width="0.0162%" height="15" fill="rgb(205,73,54)" fg:x="17638" fg:w="8"/><text x="35.9805%" y="319.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (9 samples, 0.02%)</title><rect x="35.7467%" y="357" width="0.0182%" height="15" fill="rgb(254,227,23)" fg:x="17646" fg:w="9"/><text x="35.9967%" y="367.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.01%)</title><rect x="35.7670%" y="341" width="0.0122%" height="15" fill="rgb(228,202,34)" fg:x="17656" fg:w="6"/><text x="36.0170%" y="351.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (9 samples, 0.02%)</title><rect x="35.7649%" y="357" width="0.0182%" height="15" fill="rgb(222,225,37)" fg:x="17655" fg:w="9"/><text x="36.0149%" y="367.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (13 samples, 0.03%)</title><rect x="35.7832%" y="357" width="0.0263%" height="15" fill="rgb(221,14,54)" fg:x="17664" fg:w="13"/><text x="36.0332%" y="367.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.02%)</title><rect x="35.7892%" y="341" width="0.0203%" height="15" fill="rgb(254,102,2)" fg:x="17667" fg:w="10"/><text x="36.0392%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (44 samples, 0.09%)</title><rect x="35.8095%" y="325" width="0.0891%" height="15" fill="rgb(232,104,17)" fg:x="17677" fg:w="44"/><text x="36.0595%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (15 samples, 0.03%)</title><rect x="35.8682%" y="309" width="0.0304%" height="15" fill="rgb(250,220,14)" fg:x="17706" fg:w="15"/><text x="36.1182%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="35.8763%" y="293" width="0.0223%" height="15" fill="rgb(241,158,9)" fg:x="17710" fg:w="11"/><text x="36.1263%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (11 samples, 0.02%)</title><rect x="35.8763%" y="277" width="0.0223%" height="15" fill="rgb(246,9,43)" fg:x="17710" fg:w="11"/><text x="36.1263%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (9 samples, 0.02%)</title><rect x="35.8804%" y="261" width="0.0182%" height="15" fill="rgb(206,73,33)" fg:x="17712" fg:w="9"/><text x="36.1304%" y="271.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (5 samples, 0.01%)</title><rect x="35.8986%" y="309" width="0.0101%" height="15" fill="rgb(222,79,8)" fg:x="17721" fg:w="5"/><text x="36.1486%" y="319.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (6 samples, 0.01%)</title><rect x="35.9088%" y="309" width="0.0122%" height="15" fill="rgb(234,8,54)" fg:x="17726" fg:w="6"/><text x="36.1588%" y="319.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.01%)</title><rect x="35.9209%" y="309" width="0.0101%" height="15" fill="rgb(209,134,38)" fg:x="17732" fg:w="5"/><text x="36.1709%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (14 samples, 0.03%)</title><rect x="35.9310%" y="277" width="0.0284%" height="15" fill="rgb(230,127,29)" fg:x="17737" fg:w="14"/><text x="36.1810%" y="287.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (8 samples, 0.02%)</title><rect x="35.9594%" y="277" width="0.0162%" height="15" fill="rgb(242,44,41)" fg:x="17751" fg:w="8"/><text x="36.2094%" y="287.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (23 samples, 0.05%)</title><rect x="35.9310%" y="309" width="0.0466%" height="15" fill="rgb(222,56,43)" fg:x="17737" fg:w="23"/><text x="36.1810%" y="319.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (23 samples, 0.05%)</title><rect x="35.9310%" y="293" width="0.0466%" height="15" fill="rgb(238,39,47)" fg:x="17737" fg:w="23"/><text x="36.1810%" y="303.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (48 samples, 0.10%)</title><rect x="35.8986%" y="325" width="0.0972%" height="15" fill="rgb(226,79,43)" fg:x="17721" fg:w="48"/><text x="36.1486%" y="335.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (96 samples, 0.19%)</title><rect x="35.8095%" y="357" width="0.1945%" height="15" fill="rgb(242,105,53)" fg:x="17677" fg:w="96"/><text x="36.0595%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (96 samples, 0.19%)</title><rect x="35.8095%" y="341" width="0.1945%" height="15" fill="rgb(251,132,46)" fg:x="17677" fg:w="96"/><text x="36.0595%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (145 samples, 0.29%)</title><rect x="35.7467%" y="373" width="0.2937%" height="15" fill="rgb(231,77,14)" fg:x="17646" fg:w="145"/><text x="35.9967%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (202 samples, 0.41%)</title><rect x="35.6434%" y="405" width="0.4092%" height="15" fill="rgb(240,135,9)" fg:x="17595" fg:w="202"/><text x="35.8934%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (202 samples, 0.41%)</title><rect x="35.6434%" y="389" width="0.4092%" height="15" fill="rgb(248,109,14)" fg:x="17595" fg:w="202"/><text x="35.8934%" y="399.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (277 samples, 0.56%)</title><rect x="35.5218%" y="421" width="0.5611%" height="15" fill="rgb(227,146,52)" fg:x="17535" fg:w="277"/><text x="35.7718%" y="431.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (345 samples, 0.70%)</title><rect x="35.3983%" y="437" width="0.6989%" height="15" fill="rgb(232,54,3)" fg:x="17474" fg:w="345"/><text x="35.6483%" y="447.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (28 samples, 0.06%)</title><rect x="36.0972%" y="421" width="0.0567%" height="15" fill="rgb(229,201,43)" fg:x="17819" fg:w="28"/><text x="36.3472%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_small (18 samples, 0.04%)</title><rect x="36.1640%" y="421" width="0.0365%" height="15" fill="rgb(252,161,33)" fg:x="17852" fg:w="18"/><text x="36.4140%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (5 samples, 0.01%)</title><rect x="36.1903%" y="405" width="0.0101%" height="15" fill="rgb(226,146,40)" fg:x="17865" fg:w="5"/><text x="36.4403%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (52 samples, 0.11%)</title><rect x="36.0972%" y="437" width="0.1053%" height="15" fill="rgb(219,47,25)" fg:x="17819" fg:w="52"/><text x="36.3472%" y="447.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (15 samples, 0.03%)</title><rect x="36.2065%" y="389" width="0.0304%" height="15" fill="rgb(250,135,13)" fg:x="17873" fg:w="15"/><text x="36.4565%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_small (9 samples, 0.02%)</title><rect x="36.2531%" y="389" width="0.0182%" height="15" fill="rgb(219,229,18)" fg:x="17896" fg:w="9"/><text x="36.5031%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (34 samples, 0.07%)</title><rect x="36.2045%" y="405" width="0.0689%" height="15" fill="rgb(217,152,27)" fg:x="17872" fg:w="34"/><text x="36.4545%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (8 samples, 0.02%)</title><rect x="36.2734%" y="357" width="0.0162%" height="15" fill="rgb(225,71,47)" fg:x="17906" fg:w="8"/><text x="36.5234%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (19 samples, 0.04%)</title><rect x="36.2734%" y="373" width="0.0385%" height="15" fill="rgb(220,139,14)" fg:x="17906" fg:w="19"/><text x="36.5234%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_small (6 samples, 0.01%)</title><rect x="36.2997%" y="357" width="0.0122%" height="15" fill="rgb(247,54,32)" fg:x="17919" fg:w="6"/><text x="36.5497%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (5 samples, 0.01%)</title><rect x="36.3018%" y="341" width="0.0101%" height="15" fill="rgb(252,131,39)" fg:x="17920" fg:w="5"/><text x="36.5518%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_small (5 samples, 0.01%)</title><rect x="36.3261%" y="325" width="0.0101%" height="15" fill="rgb(210,108,39)" fg:x="17932" fg:w="5"/><text x="36.5761%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (13 samples, 0.03%)</title><rect x="36.3119%" y="341" width="0.0263%" height="15" fill="rgb(205,23,29)" fg:x="17925" fg:w="13"/><text x="36.5619%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="36.3463%" y="325" width="0.0101%" height="15" fill="rgb(246,139,46)" fg:x="17942" fg:w="5"/><text x="36.5963%" y="335.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (23 samples, 0.05%)</title><rect x="36.3119%" y="357" width="0.0466%" height="15" fill="rgb(250,81,26)" fg:x="17925" fg:w="23"/><text x="36.5619%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (10 samples, 0.02%)</title><rect x="36.3382%" y="341" width="0.0203%" height="15" fill="rgb(214,104,7)" fg:x="17938" fg:w="10"/><text x="36.5882%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (27 samples, 0.05%)</title><rect x="36.3119%" y="373" width="0.0547%" height="15" fill="rgb(233,189,8)" fg:x="17925" fg:w="27"/><text x="36.5619%" y="383.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (49 samples, 0.10%)</title><rect x="36.2734%" y="389" width="0.0993%" height="15" fill="rgb(228,141,17)" fg:x="17906" fg:w="49"/><text x="36.5234%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (5 samples, 0.01%)</title><rect x="36.3747%" y="389" width="0.0101%" height="15" fill="rgb(247,157,1)" fg:x="17956" fg:w="5"/><text x="36.6247%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (60 samples, 0.12%)</title><rect x="36.2734%" y="405" width="0.1215%" height="15" fill="rgb(249,225,5)" fg:x="17906" fg:w="60"/><text x="36.5234%" y="415.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (101 samples, 0.20%)</title><rect x="36.2025%" y="421" width="0.2046%" height="15" fill="rgb(242,55,13)" fg:x="17871" fg:w="101"/><text x="36.4525%" y="431.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (106 samples, 0.21%)</title><rect x="36.2025%" y="437" width="0.2147%" height="15" fill="rgb(230,49,50)" fg:x="17871" fg:w="106"/><text x="36.4525%" y="447.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::join_node::JoinNode::cardinality (532 samples, 1.08%)</title><rect x="35.3496%" y="453" width="1.0777%" height="15" fill="rgb(241,111,38)" fg:x="17450" fg:w="532"/><text x="35.5996%" y="463.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (5 samples, 0.01%)</title><rect x="36.4274%" y="453" width="0.0101%" height="15" fill="rgb(252,155,4)" fg:x="17982" fg:w="5"/><text x="36.6774%" y="463.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::emit_csg_cmp (546 samples, 1.11%)</title><rect x="35.3355%" y="469" width="1.1061%" height="15" fill="rgb(212,69,32)" fg:x="17443" fg:w="546"/><text x="35.5855%" y="479.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="36.4476%" y="405" width="0.0101%" height="15" fill="rgb(243,107,47)" fg:x="17992" fg:w="5"/><text x="36.6976%" y="415.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="36.4577%" y="405" width="0.0162%" height="15" fill="rgb(247,130,12)" fg:x="17997" fg:w="8"/><text x="36.7077%" y="415.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (16 samples, 0.03%)</title><rect x="36.4476%" y="421" width="0.0324%" height="15" fill="rgb(233,74,16)" fg:x="17992" fg:w="16"/><text x="36.6976%" y="431.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (20 samples, 0.04%)</title><rect x="36.4436%" y="437" width="0.0405%" height="15" fill="rgb(208,58,18)" fg:x="17990" fg:w="20"/><text x="36.6936%" y="447.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (13 samples, 0.03%)</title><rect x="36.5124%" y="357" width="0.0263%" height="15" fill="rgb(242,225,1)" fg:x="18024" fg:w="13"/><text x="36.7624%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="36.5266%" y="341" width="0.0122%" height="15" fill="rgb(249,39,40)" fg:x="18031" fg:w="6"/><text x="36.7766%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (21 samples, 0.04%)</title><rect x="36.5023%" y="389" width="0.0425%" height="15" fill="rgb(207,72,44)" fg:x="18019" fg:w="21"/><text x="36.7523%" y="399.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (18 samples, 0.04%)</title><rect x="36.5084%" y="373" width="0.0365%" height="15" fill="rgb(215,193,12)" fg:x="18022" fg:w="18"/><text x="36.7584%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="36.5449%" y="389" width="0.0101%" height="15" fill="rgb(248,41,39)" fg:x="18040" fg:w="5"/><text x="36.7949%" y="399.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (19 samples, 0.04%)</title><rect x="36.5611%" y="357" width="0.0385%" height="15" fill="rgb(253,85,4)" fg:x="18048" fg:w="19"/><text x="36.8111%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (23 samples, 0.05%)</title><rect x="36.5550%" y="373" width="0.0466%" height="15" fill="rgb(243,70,31)" fg:x="18045" fg:w="23"/><text x="36.8050%" y="383.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="36.6279%" y="309" width="0.0162%" height="15" fill="rgb(253,195,26)" fg:x="18081" fg:w="8"/><text x="36.8779%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (15 samples, 0.03%)</title><rect x="36.6178%" y="341" width="0.0304%" height="15" fill="rgb(243,42,11)" fg:x="18076" fg:w="15"/><text x="36.8678%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (15 samples, 0.03%)</title><rect x="36.6178%" y="325" width="0.0304%" height="15" fill="rgb(239,66,17)" fg:x="18076" fg:w="15"/><text x="36.8678%" y="335.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (18 samples, 0.04%)</title><rect x="36.6158%" y="357" width="0.0365%" height="15" fill="rgb(217,132,21)" fg:x="18075" fg:w="18"/><text x="36.8658%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (26 samples, 0.05%)</title><rect x="36.6036%" y="373" width="0.0527%" height="15" fill="rgb(252,202,21)" fg:x="18069" fg:w="26"/><text x="36.8536%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (52 samples, 0.11%)</title><rect x="36.5550%" y="389" width="0.1053%" height="15" fill="rgb(233,98,36)" fg:x="18045" fg:w="52"/><text x="36.8050%" y="399.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (82 samples, 0.17%)</title><rect x="36.5003%" y="405" width="0.1661%" height="15" fill="rgb(216,153,54)" fg:x="18018" fg:w="82"/><text x="36.7503%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (91 samples, 0.18%)</title><rect x="36.4922%" y="421" width="0.1843%" height="15" fill="rgb(250,99,7)" fg:x="18014" fg:w="91"/><text x="36.7422%" y="431.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (11 samples, 0.02%)</title><rect x="37.0371%" y="389" width="0.0223%" height="15" fill="rgb(207,56,50)" fg:x="18283" fg:w="11"/><text x="37.2871%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.02%)</title><rect x="37.0614%" y="373" width="0.0182%" height="15" fill="rgb(244,61,34)" fg:x="18295" fg:w="9"/><text x="37.3114%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.02%)</title><rect x="37.0634%" y="357" width="0.0162%" height="15" fill="rgb(241,50,38)" fg:x="18296" fg:w="8"/><text x="37.3134%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (7 samples, 0.01%)</title><rect x="37.1040%" y="325" width="0.0142%" height="15" fill="rgb(212,166,30)" fg:x="18316" fg:w="7"/><text x="37.3540%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (39 samples, 0.08%)</title><rect x="37.0594%" y="389" width="0.0790%" height="15" fill="rgb(249,127,32)" fg:x="18294" fg:w="39"/><text x="37.3094%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (29 samples, 0.06%)</title><rect x="37.0797%" y="373" width="0.0587%" height="15" fill="rgb(209,103,0)" fg:x="18304" fg:w="29"/><text x="37.3297%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (28 samples, 0.06%)</title><rect x="37.0817%" y="357" width="0.0567%" height="15" fill="rgb(238,209,51)" fg:x="18305" fg:w="28"/><text x="37.3317%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (21 samples, 0.04%)</title><rect x="37.0959%" y="341" width="0.0425%" height="15" fill="rgb(237,56,23)" fg:x="18312" fg:w="21"/><text x="37.3459%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (9 samples, 0.02%)</title><rect x="37.1202%" y="325" width="0.0182%" height="15" fill="rgb(215,153,46)" fg:x="18324" fg:w="9"/><text x="37.3702%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (229 samples, 0.46%)</title><rect x="36.6765%" y="405" width="0.4639%" height="15" fill="rgb(224,49,31)" fg:x="18105" fg:w="229"/><text x="36.9265%" y="415.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (7 samples, 0.01%)</title><rect x="37.2134%" y="357" width="0.0142%" height="15" fill="rgb(250,18,42)" fg:x="18370" fg:w="7"/><text x="37.4634%" y="367.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (33 samples, 0.07%)</title><rect x="37.1728%" y="373" width="0.0669%" height="15" fill="rgb(215,176,39)" fg:x="18350" fg:w="33"/><text x="37.4228%" y="383.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="37.2275%" y="357" width="0.0122%" height="15" fill="rgb(223,77,29)" fg:x="18377" fg:w="6"/><text x="37.4775%" y="367.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (49 samples, 0.10%)</title><rect x="37.1526%" y="389" width="0.0993%" height="15" fill="rgb(234,94,52)" fg:x="18340" fg:w="49"/><text x="37.4026%" y="399.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="37.2397%" y="373" width="0.0122%" height="15" fill="rgb(220,154,50)" fg:x="18383" fg:w="6"/><text x="37.4897%" y="383.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="37.3146%" y="357" width="0.0122%" height="15" fill="rgb(212,11,10)" fg:x="18420" fg:w="6"/><text x="37.5646%" y="367.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (16 samples, 0.03%)</title><rect x="37.3268%" y="357" width="0.0324%" height="15" fill="rgb(205,166,19)" fg:x="18426" fg:w="16"/><text x="37.5768%" y="367.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (8 samples, 0.02%)</title><rect x="37.3795%" y="341" width="0.0162%" height="15" fill="rgb(244,198,16)" fg:x="18452" fg:w="8"/><text x="37.6295%" y="351.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (69 samples, 0.14%)</title><rect x="37.2660%" y="373" width="0.1398%" height="15" fill="rgb(219,69,12)" fg:x="18396" fg:w="69"/><text x="37.5160%" y="383.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (23 samples, 0.05%)</title><rect x="37.3592%" y="357" width="0.0466%" height="15" fill="rgb(245,30,7)" fg:x="18442" fg:w="23"/><text x="37.6092%" y="367.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (87 samples, 0.18%)</title><rect x="37.2518%" y="389" width="0.1762%" height="15" fill="rgb(218,221,48)" fg:x="18389" fg:w="87"/><text x="37.5018%" y="399.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.02%)</title><rect x="37.4058%" y="373" width="0.0223%" height="15" fill="rgb(216,66,15)" fg:x="18465" fg:w="11"/><text x="37.6558%" y="383.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="37.5010%" y="357" width="0.0122%" height="15" fill="rgb(226,122,50)" fg:x="18512" fg:w="6"/><text x="37.7510%" y="367.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (6 samples, 0.01%)</title><rect x="37.5132%" y="357" width="0.0122%" height="15" fill="rgb(239,156,16)" fg:x="18518" fg:w="6"/><text x="37.7632%" y="367.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (9 samples, 0.02%)</title><rect x="37.5436%" y="341" width="0.0182%" height="15" fill="rgb(224,27,38)" fg:x="18533" fg:w="9"/><text x="37.7936%" y="351.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (51 samples, 0.10%)</title><rect x="37.4645%" y="373" width="0.1033%" height="15" fill="rgb(224,39,27)" fg:x="18494" fg:w="51"/><text x="37.7145%" y="383.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (21 samples, 0.04%)</title><rect x="37.5253%" y="357" width="0.0425%" height="15" fill="rgb(215,92,29)" fg:x="18524" fg:w="21"/><text x="37.7753%" y="367.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (70 samples, 0.14%)</title><rect x="37.4281%" y="389" width="0.1418%" height="15" fill="rgb(207,159,16)" fg:x="18476" fg:w="70"/><text x="37.6781%" y="399.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (10 samples, 0.02%)</title><rect x="37.9507%" y="341" width="0.0203%" height="15" fill="rgb(238,163,47)" fg:x="18734" fg:w="10"/><text x="38.2007%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.02%)</title><rect x="37.9811%" y="309" width="0.0162%" height="15" fill="rgb(219,91,49)" fg:x="18749" fg:w="8"/><text x="38.2311%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (12 samples, 0.02%)</title><rect x="37.9771%" y="325" width="0.0243%" height="15" fill="rgb(227,167,31)" fg:x="18747" fg:w="12"/><text x="38.2271%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (11 samples, 0.02%)</title><rect x="38.0318%" y="277" width="0.0223%" height="15" fill="rgb(234,80,54)" fg:x="18774" fg:w="11"/><text x="38.2818%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (39 samples, 0.08%)</title><rect x="38.0075%" y="309" width="0.0790%" height="15" fill="rgb(212,114,2)" fg:x="18762" fg:w="39"/><text x="38.2575%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (34 samples, 0.07%)</title><rect x="38.0176%" y="293" width="0.0689%" height="15" fill="rgb(234,50,24)" fg:x="18767" fg:w="34"/><text x="38.2676%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (14 samples, 0.03%)</title><rect x="38.0581%" y="277" width="0.0284%" height="15" fill="rgb(221,68,8)" fg:x="18787" fg:w="14"/><text x="38.3081%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (63 samples, 0.13%)</title><rect x="37.9710%" y="341" width="0.1276%" height="15" fill="rgb(254,180,31)" fg:x="18744" fg:w="63"/><text x="38.2210%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (45 samples, 0.09%)</title><rect x="38.0075%" y="325" width="0.0912%" height="15" fill="rgb(247,130,50)" fg:x="18762" fg:w="45"/><text x="38.2575%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="38.0885%" y="309" width="0.0101%" height="15" fill="rgb(211,109,4)" fg:x="18802" fg:w="5"/><text x="38.3385%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (258 samples, 0.52%)</title><rect x="37.5800%" y="357" width="0.5226%" height="15" fill="rgb(238,50,21)" fg:x="18551" fg:w="258"/><text x="37.8300%" y="367.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (6 samples, 0.01%)</title><rect x="38.1472%" y="309" width="0.0122%" height="15" fill="rgb(225,57,45)" fg:x="18831" fg:w="6"/><text x="38.3972%" y="319.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (28 samples, 0.06%)</title><rect x="38.1270%" y="325" width="0.0567%" height="15" fill="rgb(209,196,50)" fg:x="18821" fg:w="28"/><text x="38.3770%" y="335.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (12 samples, 0.02%)</title><rect x="38.1594%" y="309" width="0.0243%" height="15" fill="rgb(242,140,13)" fg:x="18837" fg:w="12"/><text x="38.4094%" y="319.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="38.1837%" y="325" width="0.0122%" height="15" fill="rgb(217,111,7)" fg:x="18849" fg:w="6"/><text x="38.4337%" y="335.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (41 samples, 0.08%)</title><rect x="38.1148%" y="341" width="0.0831%" height="15" fill="rgb(253,193,51)" fg:x="18815" fg:w="41"/><text x="38.3648%" y="351.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (13 samples, 0.03%)</title><rect x="38.2222%" y="309" width="0.0263%" height="15" fill="rgb(252,70,29)" fg:x="18868" fg:w="13"/><text x="38.4722%" y="319.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (35 samples, 0.07%)</title><rect x="38.1999%" y="325" width="0.0709%" height="15" fill="rgb(232,127,12)" fg:x="18857" fg:w="35"/><text x="38.4499%" y="335.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.02%)</title><rect x="38.2485%" y="309" width="0.0223%" height="15" fill="rgb(211,180,21)" fg:x="18881" fg:w="11"/><text x="38.4985%" y="319.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="38.2708%" y="325" width="0.0101%" height="15" fill="rgb(229,72,13)" fg:x="18892" fg:w="5"/><text x="38.5208%" y="335.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (42 samples, 0.09%)</title><rect x="38.1979%" y="341" width="0.0851%" height="15" fill="rgb(240,211,49)" fg:x="18856" fg:w="42"/><text x="38.4479%" y="351.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="38.3356%" y="309" width="0.0122%" height="15" fill="rgb(219,149,40)" fg:x="18924" fg:w="6"/><text x="38.5856%" y="319.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (6 samples, 0.01%)</title><rect x="38.3478%" y="309" width="0.0122%" height="15" fill="rgb(210,127,46)" fg:x="18930" fg:w="6"/><text x="38.5978%" y="319.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (6 samples, 0.01%)</title><rect x="38.3680%" y="293" width="0.0122%" height="15" fill="rgb(220,106,7)" fg:x="18940" fg:w="6"/><text x="38.6180%" y="303.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (40 samples, 0.08%)</title><rect x="38.3073%" y="325" width="0.0810%" height="15" fill="rgb(249,31,22)" fg:x="18910" fg:w="40"/><text x="38.5573%" y="335.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (14 samples, 0.03%)</title><rect x="38.3599%" y="309" width="0.0284%" height="15" fill="rgb(253,1,49)" fg:x="18936" fg:w="14"/><text x="38.6099%" y="319.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (54 samples, 0.11%)</title><rect x="38.2830%" y="341" width="0.1094%" height="15" fill="rgb(227,144,33)" fg:x="18898" fg:w="54"/><text x="38.5330%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.01%)</title><rect x="38.6152%" y="293" width="0.0122%" height="15" fill="rgb(249,163,44)" fg:x="19062" fg:w="6"/><text x="38.8652%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.01%)</title><rect x="38.6294%" y="277" width="0.0142%" height="15" fill="rgb(234,15,39)" fg:x="19069" fg:w="7"/><text x="38.8794%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (5 samples, 0.01%)</title><rect x="38.6618%" y="229" width="0.0101%" height="15" fill="rgb(207,66,16)" fg:x="19085" fg:w="5"/><text x="38.9118%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (24 samples, 0.05%)</title><rect x="38.6516%" y="261" width="0.0486%" height="15" fill="rgb(233,112,24)" fg:x="19080" fg:w="24"/><text x="38.9016%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (19 samples, 0.04%)</title><rect x="38.6618%" y="245" width="0.0385%" height="15" fill="rgb(230,90,22)" fg:x="19085" fg:w="19"/><text x="38.9118%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (14 samples, 0.03%)</title><rect x="38.6719%" y="229" width="0.0284%" height="15" fill="rgb(229,61,13)" fg:x="19090" fg:w="14"/><text x="38.9219%" y="239.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (152 samples, 0.31%)</title><rect x="38.4005%" y="309" width="0.3079%" height="15" fill="rgb(225,57,24)" fg:x="18956" fg:w="152"/><text x="38.6505%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (40 samples, 0.08%)</title><rect x="38.6273%" y="293" width="0.0810%" height="15" fill="rgb(208,169,48)" fg:x="19068" fg:w="40"/><text x="38.8773%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (31 samples, 0.06%)</title><rect x="38.6456%" y="277" width="0.0628%" height="15" fill="rgb(244,218,51)" fg:x="19077" fg:w="31"/><text x="38.8956%" y="287.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.02%)</title><rect x="38.7286%" y="277" width="0.0162%" height="15" fill="rgb(214,148,10)" fg:x="19118" fg:w="8"/><text x="38.9786%" y="287.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (16 samples, 0.03%)</title><rect x="38.7226%" y="293" width="0.0324%" height="15" fill="rgb(225,174,27)" fg:x="19115" fg:w="16"/><text x="38.9726%" y="303.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="38.7448%" y="277" width="0.0101%" height="15" fill="rgb(230,96,26)" fg:x="19126" fg:w="5"/><text x="38.9948%" y="287.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.02%)</title><rect x="38.7610%" y="277" width="0.0162%" height="15" fill="rgb(232,10,30)" fg:x="19134" fg:w="8"/><text x="39.0110%" y="287.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (17 samples, 0.03%)</title><rect x="38.7550%" y="293" width="0.0344%" height="15" fill="rgb(222,8,50)" fg:x="19131" fg:w="17"/><text x="39.0050%" y="303.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (15 samples, 0.03%)</title><rect x="38.7894%" y="293" width="0.0304%" height="15" fill="rgb(213,81,27)" fg:x="19148" fg:w="15"/><text x="39.0394%" y="303.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (12 samples, 0.02%)</title><rect x="38.7955%" y="277" width="0.0243%" height="15" fill="rgb(245,50,10)" fg:x="19151" fg:w="12"/><text x="39.0455%" y="287.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="38.8076%" y="261" width="0.0122%" height="15" fill="rgb(216,100,18)" fg:x="19157" fg:w="6"/><text x="39.0576%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (12 samples, 0.02%)</title><rect x="38.9555%" y="213" width="0.0243%" height="15" fill="rgb(236,147,54)" fg:x="19230" fg:w="12"/><text x="39.2055%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (9 samples, 0.02%)</title><rect x="38.9616%" y="197" width="0.0182%" height="15" fill="rgb(205,143,26)" fg:x="19233" fg:w="9"/><text x="39.2116%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (5 samples, 0.01%)</title><rect x="38.9697%" y="181" width="0.0101%" height="15" fill="rgb(236,26,9)" fg:x="19237" fg:w="5"/><text x="39.2197%" y="191.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (78 samples, 0.16%)</title><rect x="38.8238%" y="261" width="0.1580%" height="15" fill="rgb(221,165,53)" fg:x="19165" fg:w="78"/><text x="39.0738%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (20 samples, 0.04%)</title><rect x="38.9413%" y="245" width="0.0405%" height="15" fill="rgb(214,110,17)" fg:x="19223" fg:w="20"/><text x="39.1913%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.03%)</title><rect x="38.9535%" y="229" width="0.0284%" height="15" fill="rgb(237,197,12)" fg:x="19229" fg:w="14"/><text x="39.2035%" y="239.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (16 samples, 0.03%)</title><rect x="38.9839%" y="245" width="0.0324%" height="15" fill="rgb(205,84,17)" fg:x="19244" fg:w="16"/><text x="39.2339%" y="255.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (12 samples, 0.02%)</title><rect x="38.9920%" y="229" width="0.0243%" height="15" fill="rgb(237,18,45)" fg:x="19248" fg:w="12"/><text x="39.2420%" y="239.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.01%)</title><rect x="39.0183%" y="229" width="0.0122%" height="15" fill="rgb(221,87,14)" fg:x="19261" fg:w="6"/><text x="39.2683%" y="239.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (9 samples, 0.02%)</title><rect x="39.0163%" y="245" width="0.0182%" height="15" fill="rgb(238,186,15)" fg:x="19260" fg:w="9"/><text x="39.2663%" y="255.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.01%)</title><rect x="39.0345%" y="245" width="0.0101%" height="15" fill="rgb(208,115,11)" fg:x="19269" fg:w="5"/><text x="39.2845%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (13 samples, 0.03%)</title><rect x="39.0953%" y="197" width="0.0263%" height="15" fill="rgb(254,175,0)" fg:x="19299" fg:w="13"/><text x="39.3453%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="39.0993%" y="181" width="0.0223%" height="15" fill="rgb(227,24,42)" fg:x="19301" fg:w="11"/><text x="39.3493%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (10 samples, 0.02%)</title><rect x="39.1014%" y="165" width="0.0203%" height="15" fill="rgb(223,211,37)" fg:x="19302" fg:w="10"/><text x="39.3514%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (7 samples, 0.01%)</title><rect x="39.1074%" y="149" width="0.0142%" height="15" fill="rgb(235,49,27)" fg:x="19305" fg:w="7"/><text x="39.3574%" y="159.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (38 samples, 0.08%)</title><rect x="39.0467%" y="213" width="0.0770%" height="15" fill="rgb(254,97,51)" fg:x="19275" fg:w="38"/><text x="39.2967%" y="223.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (7 samples, 0.01%)</title><rect x="39.1237%" y="213" width="0.0142%" height="15" fill="rgb(249,51,40)" fg:x="19313" fg:w="7"/><text x="39.3737%" y="223.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (48 samples, 0.10%)</title><rect x="39.0446%" y="245" width="0.0972%" height="15" fill="rgb(210,128,45)" fg:x="19274" fg:w="48"/><text x="39.2946%" y="255.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (48 samples, 0.10%)</title><rect x="39.0446%" y="229" width="0.0972%" height="15" fill="rgb(224,137,50)" fg:x="19274" fg:w="48"/><text x="39.2946%" y="239.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="39.1439%" y="229" width="0.0122%" height="15" fill="rgb(242,15,9)" fg:x="19323" fg:w="6"/><text x="39.3939%" y="239.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (7 samples, 0.01%)</title><rect x="39.1439%" y="245" width="0.0142%" height="15" fill="rgb(233,187,41)" fg:x="19323" fg:w="7"/><text x="39.3939%" y="255.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (101 samples, 0.20%)</title><rect x="38.9818%" y="261" width="0.2046%" height="15" fill="rgb(227,2,29)" fg:x="19243" fg:w="101"/><text x="39.2318%" y="271.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (189 samples, 0.38%)</title><rect x="38.8198%" y="293" width="0.3829%" height="15" fill="rgb(222,70,3)" fg:x="19163" fg:w="189"/><text x="39.0698%" y="303.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (188 samples, 0.38%)</title><rect x="38.8218%" y="277" width="0.3808%" height="15" fill="rgb(213,11,42)" fg:x="19164" fg:w="188"/><text x="39.0718%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.01%)</title><rect x="39.1925%" y="261" width="0.0101%" height="15" fill="rgb(225,150,9)" fg:x="19347" fg:w="5"/><text x="39.4425%" y="271.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (6 samples, 0.01%)</title><rect x="39.2027%" y="293" width="0.0122%" height="15" fill="rgb(230,162,45)" fg:x="19352" fg:w="6"/><text x="39.4527%" y="303.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (261 samples, 0.53%)</title><rect x="38.7084%" y="309" width="0.5287%" height="15" fill="rgb(222,14,52)" fg:x="19108" fg:w="261"/><text x="38.9584%" y="319.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (425 samples, 0.86%)</title><rect x="38.3964%" y="341" width="0.8610%" height="15" fill="rgb(254,198,14)" fg:x="18954" fg:w="425"/><text x="38.6464%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (425 samples, 0.86%)</title><rect x="38.3964%" y="325" width="0.8610%" height="15" fill="rgb(220,217,30)" fg:x="18954" fg:w="425"/><text x="38.6464%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.02%)</title><rect x="39.2391%" y="309" width="0.0182%" height="15" fill="rgb(215,146,41)" fg:x="19370" fg:w="9"/><text x="39.4891%" y="319.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.01%)</title><rect x="39.2655%" y="325" width="0.0101%" height="15" fill="rgb(217,27,36)" fg:x="19383" fg:w="5"/><text x="39.5155%" y="335.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (11 samples, 0.02%)</title><rect x="39.2634%" y="341" width="0.0223%" height="15" fill="rgb(219,218,39)" fg:x="19382" fg:w="11"/><text x="39.5134%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::update_statistic (5 samples, 0.01%)</title><rect x="39.2857%" y="341" width="0.0101%" height="15" fill="rgb(219,4,42)" fg:x="19393" fg:w="5"/><text x="39.5357%" y="351.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="39.3019%" y="341" width="0.0101%" height="15" fill="rgb(249,119,36)" fg:x="19401" fg:w="5"/><text x="39.5519%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="39.3141%" y="341" width="0.0101%" height="15" fill="rgb(209,23,33)" fg:x="19407" fg:w="5"/><text x="39.5641%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (613 samples, 1.24%)</title><rect x="38.1027%" y="357" width="1.2418%" height="15" fill="rgb(211,10,0)" fg:x="18809" fg:w="613"/><text x="38.3527%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (886 samples, 1.79%)</title><rect x="37.5739%" y="389" width="1.7948%" height="15" fill="rgb(208,99,37)" fg:x="18548" fg:w="886"/><text x="37.8239%" y="399.50">d..</text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (886 samples, 1.79%)</title><rect x="37.5739%" y="373" width="1.7948%" height="15" fill="rgb(213,132,31)" fg:x="18548" fg:w="886"/><text x="37.8239%" y="383.50">d..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.01%)</title><rect x="39.3586%" y="357" width="0.0101%" height="15" fill="rgb(243,129,40)" fg:x="19429" fg:w="5"/><text x="39.6086%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (6 samples, 0.01%)</title><rect x="39.3688%" y="389" width="0.0122%" height="15" fill="rgb(210,66,33)" fg:x="19434" fg:w="6"/><text x="39.6188%" y="399.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="39.3850%" y="373" width="0.0101%" height="15" fill="rgb(209,189,4)" fg:x="19442" fg:w="5"/><text x="39.6350%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (7 samples, 0.01%)</title><rect x="39.3850%" y="389" width="0.0142%" height="15" fill="rgb(214,107,37)" fg:x="19442" fg:w="7"/><text x="39.6350%" y="399.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.02%)</title><rect x="39.3992%" y="389" width="0.0162%" height="15" fill="rgb(245,88,54)" fg:x="19449" fg:w="8"/><text x="39.6492%" y="399.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (1,140 samples, 2.31%)</title><rect x="37.1404%" y="405" width="2.3094%" height="15" fill="rgb(205,146,20)" fg:x="18334" fg:w="1140"/><text x="37.3904%" y="415.50">d..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.02%)</title><rect x="39.4701%" y="405" width="0.0203%" height="15" fill="rgb(220,161,25)" fg:x="19484" fg:w="10"/><text x="39.7201%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (1,390 samples, 2.82%)</title><rect x="36.6765%" y="421" width="2.8158%" height="15" fill="rgb(215,152,15)" fg:x="18105" fg:w="1390"/><text x="36.9265%" y="431.50">da..</text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.03%)</title><rect x="39.6038%" y="389" width="0.0284%" height="15" fill="rgb(233,192,44)" fg:x="19550" fg:w="14"/><text x="39.8538%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (7 samples, 0.01%)</title><rect x="39.6179%" y="373" width="0.0142%" height="15" fill="rgb(240,170,46)" fg:x="19557" fg:w="7"/><text x="39.8679%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (66 samples, 0.13%)</title><rect x="39.5085%" y="405" width="0.1337%" height="15" fill="rgb(207,104,33)" fg:x="19503" fg:w="66"/><text x="39.7585%" y="415.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.01%)</title><rect x="39.6422%" y="405" width="0.0142%" height="15" fill="rgb(219,21,39)" fg:x="19569" fg:w="7"/><text x="39.8922%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (15 samples, 0.03%)</title><rect x="39.6585%" y="405" width="0.0304%" height="15" fill="rgb(214,133,29)" fg:x="19577" fg:w="15"/><text x="39.9085%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (7 samples, 0.01%)</title><rect x="39.7213%" y="389" width="0.0142%" height="15" fill="rgb(226,93,6)" fg:x="19608" fg:w="7"/><text x="39.9713%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_small (43 samples, 0.09%)</title><rect x="39.6888%" y="405" width="0.0871%" height="15" fill="rgb(252,222,34)" fg:x="19592" fg:w="43"/><text x="39.9388%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (17 samples, 0.03%)</title><rect x="39.7415%" y="389" width="0.0344%" height="15" fill="rgb(252,92,48)" fg:x="19618" fg:w="17"/><text x="39.9915%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (141 samples, 0.29%)</title><rect x="39.4923%" y="421" width="0.2856%" height="15" fill="rgb(245,223,24)" fg:x="19495" fg:w="141"/><text x="39.7423%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.02%)</title><rect x="39.8772%" y="357" width="0.0182%" height="15" fill="rgb(205,176,3)" fg:x="19685" fg:w="9"/><text x="40.1272%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (6 samples, 0.01%)</title><rect x="39.8833%" y="341" width="0.0122%" height="15" fill="rgb(235,151,15)" fg:x="19688" fg:w="6"/><text x="40.1333%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (6 samples, 0.01%)</title><rect x="39.8975%" y="357" width="0.0122%" height="15" fill="rgb(237,209,11)" fg:x="19695" fg:w="6"/><text x="40.1475%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (63 samples, 0.13%)</title><rect x="39.7841%" y="373" width="0.1276%" height="15" fill="rgb(243,227,24)" fg:x="19639" fg:w="63"/><text x="40.0341%" y="383.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="39.9117%" y="373" width="0.0101%" height="15" fill="rgb(239,193,16)" fg:x="19702" fg:w="5"/><text x="40.1617%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.02%)</title><rect x="39.9259%" y="373" width="0.0203%" height="15" fill="rgb(231,27,9)" fg:x="19709" fg:w="10"/><text x="40.1759%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (9 samples, 0.02%)</title><rect x="39.9603%" y="357" width="0.0182%" height="15" fill="rgb(219,169,10)" fg:x="19726" fg:w="9"/><text x="40.2103%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_small (29 samples, 0.06%)</title><rect x="39.9461%" y="373" width="0.0587%" height="15" fill="rgb(244,229,43)" fg:x="19719" fg:w="29"/><text x="40.1961%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (11 samples, 0.02%)</title><rect x="39.9826%" y="357" width="0.0223%" height="15" fill="rgb(254,38,20)" fg:x="19737" fg:w="11"/><text x="40.2326%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (115 samples, 0.23%)</title><rect x="39.7780%" y="389" width="0.2330%" height="15" fill="rgb(250,47,30)" fg:x="19636" fg:w="115"/><text x="40.0280%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.01%)</title><rect x="40.0980%" y="325" width="0.0122%" height="15" fill="rgb(224,124,36)" fg:x="19794" fg:w="6"/><text x="40.3480%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (44 samples, 0.09%)</title><rect x="40.0231%" y="341" width="0.0891%" height="15" fill="rgb(246,68,51)" fg:x="19757" fg:w="44"/><text x="40.2731%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.01%)</title><rect x="40.1122%" y="341" width="0.0122%" height="15" fill="rgb(253,43,49)" fg:x="19801" fg:w="6"/><text x="40.3622%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.02%)</title><rect x="40.1244%" y="341" width="0.0162%" height="15" fill="rgb(219,54,36)" fg:x="19807" fg:w="8"/><text x="40.3744%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (8 samples, 0.02%)</title><rect x="40.1568%" y="325" width="0.0162%" height="15" fill="rgb(227,133,34)" fg:x="19823" fg:w="8"/><text x="40.4068%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_small (23 samples, 0.05%)</title><rect x="40.1406%" y="341" width="0.0466%" height="15" fill="rgb(247,227,15)" fg:x="19815" fg:w="23"/><text x="40.3906%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (6 samples, 0.01%)</title><rect x="40.1750%" y="325" width="0.0122%" height="15" fill="rgb(229,96,14)" fg:x="19832" fg:w="6"/><text x="40.4250%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="40.1872%" y="341" width="0.0101%" height="15" fill="rgb(220,79,17)" fg:x="19838" fg:w="5"/><text x="40.4372%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (95 samples, 0.19%)</title><rect x="40.0130%" y="357" width="0.1924%" height="15" fill="rgb(205,131,53)" fg:x="19752" fg:w="95"/><text x="40.2630%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (24 samples, 0.05%)</title><rect x="40.2054%" y="309" width="0.0486%" height="15" fill="rgb(209,50,29)" fg:x="19847" fg:w="24"/><text x="40.4554%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (36 samples, 0.07%)</title><rect x="40.2054%" y="325" width="0.0729%" height="15" fill="rgb(245,86,46)" fg:x="19847" fg:w="36"/><text x="40.4554%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (12 samples, 0.02%)</title><rect x="40.2824%" y="277" width="0.0243%" height="15" fill="rgb(235,66,46)" fg:x="19885" fg:w="12"/><text x="40.5324%" y="287.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (25 samples, 0.05%)</title><rect x="40.2783%" y="293" width="0.0506%" height="15" fill="rgb(232,148,31)" fg:x="19883" fg:w="25"/><text x="40.5283%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_small (6 samples, 0.01%)</title><rect x="40.3168%" y="277" width="0.0122%" height="15" fill="rgb(217,149,8)" fg:x="19902" fg:w="6"/><text x="40.5668%" y="287.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (7 samples, 0.01%)</title><rect x="40.3391%" y="277" width="0.0142%" height="15" fill="rgb(209,183,11)" fg:x="19913" fg:w="7"/><text x="40.5891%" y="287.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (14 samples, 0.03%)</title><rect x="40.3290%" y="293" width="0.0284%" height="15" fill="rgb(208,55,20)" fg:x="19908" fg:w="14"/><text x="40.5790%" y="303.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (41 samples, 0.08%)</title><rect x="40.2783%" y="309" width="0.0831%" height="15" fill="rgb(218,39,14)" fg:x="19883" fg:w="41"/><text x="40.5283%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (51 samples, 0.10%)</title><rect x="40.2783%" y="325" width="0.1033%" height="15" fill="rgb(216,169,33)" fg:x="19883" fg:w="51"/><text x="40.5283%" y="335.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (90 samples, 0.18%)</title><rect x="40.2054%" y="341" width="0.1823%" height="15" fill="rgb(233,80,24)" fg:x="19847" fg:w="90"/><text x="40.4554%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (5 samples, 0.01%)</title><rect x="40.3877%" y="341" width="0.0101%" height="15" fill="rgb(213,179,31)" fg:x="19937" fg:w="5"/><text x="40.6377%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (10 samples, 0.02%)</title><rect x="40.3979%" y="341" width="0.0203%" height="15" fill="rgb(209,19,5)" fg:x="19942" fg:w="10"/><text x="40.6479%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (111 samples, 0.22%)</title><rect x="40.2054%" y="357" width="0.2249%" height="15" fill="rgb(219,18,35)" fg:x="19847" fg:w="111"/><text x="40.4554%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.01%)</title><rect x="40.4303%" y="357" width="0.0122%" height="15" fill="rgb(209,169,16)" fg:x="19958" fg:w="6"/><text x="40.6803%" y="367.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (215 samples, 0.44%)</title><rect x="40.0109%" y="373" width="0.4355%" height="15" fill="rgb(245,90,51)" fg:x="19751" fg:w="215"/><text x="40.2609%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (12 samples, 0.02%)</title><rect x="40.4465%" y="373" width="0.0243%" height="15" fill="rgb(220,99,45)" fg:x="19966" fg:w="12"/><text x="40.6965%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_expression::values::Scalar&gt; (6 samples, 0.01%)</title><rect x="40.4748%" y="357" width="0.0122%" height="15" fill="rgb(249,89,25)" fg:x="19980" fg:w="6"/><text x="40.7248%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (13 samples, 0.03%)</title><rect x="40.4748%" y="373" width="0.0263%" height="15" fill="rgb(239,193,0)" fg:x="19980" fg:w="13"/><text x="40.7248%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (244 samples, 0.49%)</title><rect x="40.0109%" y="389" width="0.4943%" height="15" fill="rgb(231,126,1)" fg:x="19751" fg:w="244"/><text x="40.2609%" y="399.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (366 samples, 0.74%)</title><rect x="39.7780%" y="405" width="0.7414%" height="15" fill="rgb(243,166,3)" fg:x="19636" fg:w="366"/><text x="40.0280%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (372 samples, 0.75%)</title><rect x="39.7780%" y="421" width="0.7536%" height="15" fill="rgb(223,22,34)" fg:x="19636" fg:w="372"/><text x="40.0280%" y="431.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::join_node::JoinNode::cardinality (2,001 samples, 4.05%)</title><rect x="36.4902%" y="437" width="4.0536%" height="15" fill="rgb(251,52,51)" fg:x="18013" fg:w="2001"/><text x="36.7402%" y="447.50">data..</text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(common_sql::planner::plans::scalar_expr::ScalarExpr,common_sql::planner::plans::scalar_expr::ScalarExpr)&gt;&gt; (5 samples, 0.01%)</title><rect x="40.5599%" y="405" width="0.0101%" height="15" fill="rgb(221,165,28)" fg:x="20022" fg:w="5"/><text x="40.8099%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(common_sql::planner::plans::scalar_expr::ScalarExpr,common_sql::planner::plans::scalar_expr::ScalarExpr)&gt;&gt; (5 samples, 0.01%)</title><rect x="40.5721%" y="389" width="0.0101%" height="15" fill="rgb(218,121,47)" fg:x="20028" fg:w="5"/><text x="40.8221%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (5 samples, 0.01%)</title><rect x="40.5822%" y="389" width="0.0101%" height="15" fill="rgb(209,120,9)" fg:x="20033" fg:w="5"/><text x="40.8322%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (13 samples, 0.03%)</title><rect x="40.5701%" y="405" width="0.0263%" height="15" fill="rgb(236,68,12)" fg:x="20027" fg:w="13"/><text x="40.8201%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (22 samples, 0.04%)</title><rect x="40.5579%" y="421" width="0.0446%" height="15" fill="rgb(225,194,26)" fg:x="20021" fg:w="22"/><text x="40.8079%" y="431.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (29 samples, 0.06%)</title><rect x="40.5518%" y="437" width="0.0587%" height="15" fill="rgb(231,84,39)" fg:x="20018" fg:w="29"/><text x="40.8018%" y="447.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::emit_csg_cmp (2,062 samples, 4.18%)</title><rect x="36.4436%" y="453" width="4.1771%" height="15" fill="rgb(210,11,45)" fg:x="17990" fg:w="2062"/><text x="36.6936%" y="463.50">datab..</text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="40.6369%" y="373" width="0.0122%" height="15" fill="rgb(224,54,52)" fg:x="20060" fg:w="6"/><text x="40.8869%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="40.6369%" y="389" width="0.0162%" height="15" fill="rgb(238,102,14)" fg:x="20060" fg:w="8"/><text x="40.8869%" y="399.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="40.6369%" y="405" width="0.0223%" height="15" fill="rgb(243,160,52)" fg:x="20060" fg:w="11"/><text x="40.8869%" y="415.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="40.6653%" y="357" width="0.0142%" height="15" fill="rgb(216,114,19)" fg:x="20074" fg:w="7"/><text x="40.9153%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="40.6693%" y="341" width="0.0101%" height="15" fill="rgb(244,166,37)" fg:x="20076" fg:w="5"/><text x="40.9193%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="40.6653%" y="373" width="0.0223%" height="15" fill="rgb(246,29,44)" fg:x="20074" fg:w="11"/><text x="40.9153%" y="383.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.03%)</title><rect x="40.6653%" y="389" width="0.0263%" height="15" fill="rgb(215,56,53)" fg:x="20074" fg:w="13"/><text x="40.9153%" y="399.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="40.6916%" y="357" width="0.0101%" height="15" fill="rgb(217,60,2)" fg:x="20087" fg:w="5"/><text x="40.9416%" y="367.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="40.6916%" y="373" width="0.0162%" height="15" fill="rgb(207,26,24)" fg:x="20087" fg:w="8"/><text x="40.9416%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="40.7098%" y="325" width="0.0101%" height="15" fill="rgb(252,210,15)" fg:x="20096" fg:w="5"/><text x="40.9598%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="40.7098%" y="341" width="0.0162%" height="15" fill="rgb(253,209,26)" fg:x="20096" fg:w="8"/><text x="40.9598%" y="351.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="40.7078%" y="357" width="0.0223%" height="15" fill="rgb(238,170,14)" fg:x="20095" fg:w="11"/><text x="40.9578%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (13 samples, 0.03%)</title><rect x="40.7078%" y="373" width="0.0263%" height="15" fill="rgb(216,178,15)" fg:x="20095" fg:w="13"/><text x="40.9578%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (25 samples, 0.05%)</title><rect x="40.6916%" y="389" width="0.0506%" height="15" fill="rgb(250,197,2)" fg:x="20087" fg:w="25"/><text x="40.9416%" y="399.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (59 samples, 0.12%)</title><rect x="40.6308%" y="421" width="0.1195%" height="15" fill="rgb(212,70,42)" fg:x="20057" fg:w="59"/><text x="40.8808%" y="431.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (45 samples, 0.09%)</title><rect x="40.6592%" y="405" width="0.0912%" height="15" fill="rgb(227,213,9)" fg:x="20071" fg:w="45"/><text x="40.9092%" y="415.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="40.7666%" y="373" width="0.0223%" height="15" fill="rgb(245,99,25)" fg:x="20124" fg:w="11"/><text x="41.0166%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.02%)</title><rect x="40.7706%" y="357" width="0.0182%" height="15" fill="rgb(250,82,29)" fg:x="20126" fg:w="9"/><text x="41.0206%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.01%)</title><rect x="40.7747%" y="341" width="0.0142%" height="15" fill="rgb(241,226,54)" fg:x="20128" fg:w="7"/><text x="41.0247%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (6 samples, 0.01%)</title><rect x="40.7767%" y="325" width="0.0122%" height="15" fill="rgb(221,99,41)" fg:x="20129" fg:w="6"/><text x="41.0267%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (13 samples, 0.03%)</title><rect x="40.7666%" y="389" width="0.0263%" height="15" fill="rgb(213,90,21)" fg:x="20124" fg:w="13"/><text x="41.0166%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (11 samples, 0.02%)</title><rect x="40.8699%" y="325" width="0.0223%" height="15" fill="rgb(205,208,24)" fg:x="20175" fg:w="11"/><text x="41.1199%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.01%)</title><rect x="40.8780%" y="309" width="0.0142%" height="15" fill="rgb(246,31,12)" fg:x="20179" fg:w="7"/><text x="41.1280%" y="319.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (30 samples, 0.06%)</title><rect x="40.8334%" y="341" width="0.0608%" height="15" fill="rgb(213,154,6)" fg:x="20157" fg:w="30"/><text x="41.0834%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (52 samples, 0.11%)</title><rect x="40.8111%" y="357" width="0.1053%" height="15" fill="rgb(222,163,29)" fg:x="20146" fg:w="52"/><text x="41.0611%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (56 samples, 0.11%)</title><rect x="40.8050%" y="373" width="0.1134%" height="15" fill="rgb(227,201,8)" fg:x="20143" fg:w="56"/><text x="41.0550%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="40.9185%" y="357" width="0.0101%" height="15" fill="rgb(233,9,32)" fg:x="20199" fg:w="5"/><text x="41.1685%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="40.9185%" y="373" width="0.0162%" height="15" fill="rgb(217,54,24)" fg:x="20199" fg:w="8"/><text x="41.1685%" y="383.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (26 samples, 0.05%)</title><rect x="40.9671%" y="325" width="0.0527%" height="15" fill="rgb(235,192,0)" fg:x="20223" fg:w="26"/><text x="41.2171%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.02%)</title><rect x="41.0218%" y="325" width="0.0162%" height="15" fill="rgb(235,45,9)" fg:x="20250" fg:w="8"/><text x="41.2718%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="41.0258%" y="309" width="0.0122%" height="15" fill="rgb(246,42,40)" fg:x="20252" fg:w="6"/><text x="41.2758%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (52 samples, 0.11%)</title><rect x="40.9428%" y="357" width="0.1053%" height="15" fill="rgb(248,111,24)" fg:x="20211" fg:w="52"/><text x="41.1928%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (51 samples, 0.10%)</title><rect x="40.9448%" y="341" width="0.1033%" height="15" fill="rgb(249,65,22)" fg:x="20212" fg:w="51"/><text x="41.1948%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="41.0583%" y="341" width="0.0122%" height="15" fill="rgb(238,111,51)" fg:x="20268" fg:w="6"/><text x="41.3083%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="41.0583%" y="325" width="0.0122%" height="15" fill="rgb(250,118,22)" fg:x="20268" fg:w="6"/><text x="41.3083%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="41.0704%" y="341" width="0.0101%" height="15" fill="rgb(234,84,26)" fg:x="20274" fg:w="5"/><text x="41.3204%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.01%)</title><rect x="41.1211%" y="277" width="0.0142%" height="15" fill="rgb(243,172,12)" fg:x="20299" fg:w="7"/><text x="41.3711%" y="287.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (18 samples, 0.04%)</title><rect x="41.1130%" y="293" width="0.0365%" height="15" fill="rgb(236,150,49)" fg:x="20295" fg:w="18"/><text x="41.3630%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="41.1352%" y="277" width="0.0142%" height="15" fill="rgb(225,197,26)" fg:x="20306" fg:w="7"/><text x="41.3852%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.01%)</title><rect x="41.1373%" y="261" width="0.0122%" height="15" fill="rgb(214,17,42)" fg:x="20307" fg:w="6"/><text x="41.3873%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="41.1514%" y="293" width="0.0142%" height="15" fill="rgb(224,165,40)" fg:x="20314" fg:w="7"/><text x="41.4014%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="41.1555%" y="277" width="0.0101%" height="15" fill="rgb(246,100,4)" fg:x="20316" fg:w="5"/><text x="41.4055%" y="287.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (40 samples, 0.08%)</title><rect x="41.0886%" y="325" width="0.0810%" height="15" fill="rgb(222,103,0)" fg:x="20283" fg:w="40"/><text x="41.3386%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (39 samples, 0.08%)</title><rect x="41.0907%" y="309" width="0.0790%" height="15" fill="rgb(227,189,26)" fg:x="20284" fg:w="39"/><text x="41.3407%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="41.1697%" y="293" width="0.0142%" height="15" fill="rgb(214,202,17)" fg:x="20323" fg:w="7"/><text x="41.4197%" y="303.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (9 samples, 0.02%)</title><rect x="41.1697%" y="325" width="0.0182%" height="15" fill="rgb(229,111,3)" fg:x="20323" fg:w="9"/><text x="41.4197%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="41.1697%" y="309" width="0.0182%" height="15" fill="rgb(229,172,15)" fg:x="20323" fg:w="9"/><text x="41.4197%" y="319.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (55 samples, 0.11%)</title><rect x="41.0805%" y="341" width="0.1114%" height="15" fill="rgb(230,224,35)" fg:x="20279" fg:w="55"/><text x="41.3305%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="41.2021%" y="341" width="0.0142%" height="15" fill="rgb(251,141,6)" fg:x="20339" fg:w="7"/><text x="41.4521%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="41.2061%" y="325" width="0.0101%" height="15" fill="rgb(225,208,6)" fg:x="20341" fg:w="5"/><text x="41.4561%" y="335.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (82 samples, 0.17%)</title><rect x="41.0562%" y="357" width="0.1661%" height="15" fill="rgb(246,181,16)" fg:x="20267" fg:w="82"/><text x="41.3062%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="41.2284%" y="357" width="0.0101%" height="15" fill="rgb(227,129,36)" fg:x="20352" fg:w="5"/><text x="41.4784%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (152 samples, 0.31%)</title><rect x="40.9367%" y="373" width="0.3079%" height="15" fill="rgb(248,117,24)" fg:x="20208" fg:w="152"/><text x="41.1867%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (234 samples, 0.47%)</title><rect x="40.7949%" y="389" width="0.4740%" height="15" fill="rgb(214,185,35)" fg:x="20138" fg:w="234"/><text x="41.0449%" y="399.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::s_expr::SExpr::create (5 samples, 0.01%)</title><rect x="41.2689%" y="389" width="0.0101%" height="15" fill="rgb(236,150,34)" fg:x="20372" fg:w="5"/><text x="41.5189%" y="399.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (266 samples, 0.54%)</title><rect x="40.7625%" y="405" width="0.5389%" height="15" fill="rgb(243,228,27)" fg:x="20122" fg:w="266"/><text x="41.0125%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.01%)</title><rect x="41.2872%" y="389" width="0.0142%" height="15" fill="rgb(245,77,44)" fg:x="20381" fg:w="7"/><text x="41.5372%" y="399.50"></text></g><g><title>databend-query`common_base::runtime::runtime_tracker::ThreadTracker::alloc (8 samples, 0.02%)</title><rect x="42.3223%" y="373" width="0.0162%" height="15" fill="rgb(235,214,42)" fg:x="20892" fg:w="8"/><text x="42.5723%" y="383.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (24 samples, 0.05%)</title><rect x="42.3385%" y="373" width="0.0486%" height="15" fill="rgb(221,74,3)" fg:x="20900" fg:w="24"/><text x="42.5885%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (7 samples, 0.01%)</title><rect x="42.4378%" y="325" width="0.0142%" height="15" fill="rgb(206,121,29)" fg:x="20949" fg:w="7"/><text x="42.6878%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (27 samples, 0.05%)</title><rect x="42.4013%" y="357" width="0.0547%" height="15" fill="rgb(249,131,53)" fg:x="20931" fg:w="27"/><text x="42.6513%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (18 samples, 0.04%)</title><rect x="42.4196%" y="341" width="0.0365%" height="15" fill="rgb(236,170,29)" fg:x="20940" fg:w="18"/><text x="42.6696%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (23 samples, 0.05%)</title><rect x="42.5168%" y="309" width="0.0466%" height="15" fill="rgb(247,96,15)" fg:x="20988" fg:w="23"/><text x="42.7668%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (72 samples, 0.15%)</title><rect x="42.4682%" y="341" width="0.1459%" height="15" fill="rgb(211,210,7)" fg:x="20964" fg:w="72"/><text x="42.7182%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (61 samples, 0.12%)</title><rect x="42.4905%" y="325" width="0.1236%" height="15" fill="rgb(240,88,50)" fg:x="20975" fg:w="61"/><text x="42.7405%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (22 samples, 0.04%)</title><rect x="42.5695%" y="309" width="0.0446%" height="15" fill="rgb(209,229,26)" fg:x="21014" fg:w="22"/><text x="42.8195%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (115 samples, 0.23%)</title><rect x="42.3872%" y="373" width="0.2330%" height="15" fill="rgb(210,68,23)" fg:x="20924" fg:w="115"/><text x="42.6372%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (80 samples, 0.16%)</title><rect x="42.4581%" y="357" width="0.1621%" height="15" fill="rgb(229,180,13)" fg:x="20959" fg:w="80"/><text x="42.7081%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (5 samples, 0.01%)</title><rect x="42.6201%" y="373" width="0.0101%" height="15" fill="rgb(236,53,44)" fg:x="21039" fg:w="5"/><text x="42.8701%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (659 samples, 1.33%)</title><rect x="41.3054%" y="389" width="1.3350%" height="15" fill="rgb(244,214,29)" fg:x="20390" fg:w="659"/><text x="41.5554%" y="399.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.03%)</title><rect x="42.7680%" y="341" width="0.0304%" height="15" fill="rgb(220,75,29)" fg:x="21112" fg:w="15"/><text x="43.0180%" y="351.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (33 samples, 0.07%)</title><rect x="42.7984%" y="341" width="0.0669%" height="15" fill="rgb(214,183,37)" fg:x="21127" fg:w="33"/><text x="43.0484%" y="351.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="42.8652%" y="341" width="0.0122%" height="15" fill="rgb(239,117,29)" fg:x="21160" fg:w="6"/><text x="43.1152%" y="351.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (6 samples, 0.01%)</title><rect x="42.8652%" y="325" width="0.0122%" height="15" fill="rgb(237,171,35)" fg:x="21160" fg:w="6"/><text x="43.1152%" y="335.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (87 samples, 0.18%)</title><rect x="42.7032%" y="357" width="0.1762%" height="15" fill="rgb(229,178,53)" fg:x="21080" fg:w="87"/><text x="42.9532%" y="367.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="42.9037%" y="341" width="0.0142%" height="15" fill="rgb(210,102,19)" fg:x="21179" fg:w="7"/><text x="43.1537%" y="351.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (10 samples, 0.02%)</title><rect x="42.9179%" y="341" width="0.0203%" height="15" fill="rgb(235,127,22)" fg:x="21186" fg:w="10"/><text x="43.1679%" y="351.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (32 samples, 0.06%)</title><rect x="42.8794%" y="357" width="0.0648%" height="15" fill="rgb(244,31,31)" fg:x="21167" fg:w="32"/><text x="43.1294%" y="367.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (138 samples, 0.28%)</title><rect x="42.6667%" y="373" width="0.2796%" height="15" fill="rgb(231,43,21)" fg:x="21062" fg:w="138"/><text x="42.9167%" y="383.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.03%)</title><rect x="43.0617%" y="341" width="0.0263%" height="15" fill="rgb(217,131,35)" fg:x="21257" fg:w="13"/><text x="43.3117%" y="351.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (31 samples, 0.06%)</title><rect x="43.0881%" y="341" width="0.0628%" height="15" fill="rgb(221,149,4)" fg:x="21270" fg:w="31"/><text x="43.3381%" y="351.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.02%)</title><rect x="43.1752%" y="325" width="0.0203%" height="15" fill="rgb(232,170,28)" fg:x="21313" fg:w="10"/><text x="43.4252%" y="335.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (14 samples, 0.03%)</title><rect x="43.1954%" y="325" width="0.0284%" height="15" fill="rgb(238,56,10)" fg:x="21323" fg:w="14"/><text x="43.4454%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.02%)</title><rect x="43.2258%" y="325" width="0.0182%" height="15" fill="rgb(235,196,14)" fg:x="21338" fg:w="9"/><text x="43.4758%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="43.2279%" y="309" width="0.0162%" height="15" fill="rgb(216,45,48)" fg:x="21339" fg:w="8"/><text x="43.4779%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="43.2339%" y="293" width="0.0101%" height="15" fill="rgb(238,213,17)" fg:x="21342" fg:w="5"/><text x="43.4839%" y="303.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (138 samples, 0.28%)</title><rect x="42.9746%" y="357" width="0.2796%" height="15" fill="rgb(212,13,2)" fg:x="21214" fg:w="138"/><text x="43.2246%" y="367.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (51 samples, 0.10%)</title><rect x="43.1509%" y="341" width="0.1033%" height="15" fill="rgb(240,114,20)" fg:x="21301" fg:w="51"/><text x="43.4009%" y="351.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="43.2826%" y="341" width="0.0101%" height="15" fill="rgb(228,41,40)" fg:x="21366" fg:w="5"/><text x="43.5326%" y="351.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (28 samples, 0.06%)</title><rect x="43.2542%" y="357" width="0.0567%" height="15" fill="rgb(244,132,35)" fg:x="21352" fg:w="28"/><text x="43.5042%" y="367.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (181 samples, 0.37%)</title><rect x="42.9463%" y="373" width="0.3667%" height="15" fill="rgb(253,189,4)" fg:x="21200" fg:w="181"/><text x="43.1963%" y="383.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (16 samples, 0.03%)</title><rect x="43.4568%" y="341" width="0.0324%" height="15" fill="rgb(224,37,19)" fg:x="21452" fg:w="16"/><text x="43.7068%" y="351.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (22 samples, 0.04%)</title><rect x="43.4892%" y="341" width="0.0446%" height="15" fill="rgb(235,223,18)" fg:x="21468" fg:w="22"/><text x="43.7392%" y="351.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="43.5459%" y="325" width="0.0142%" height="15" fill="rgb(235,163,25)" fg:x="21496" fg:w="7"/><text x="43.7959%" y="335.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (17 samples, 0.03%)</title><rect x="43.5337%" y="341" width="0.0344%" height="15" fill="rgb(217,145,28)" fg:x="21490" fg:w="17"/><text x="43.7837%" y="351.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (88 samples, 0.18%)</title><rect x="43.3919%" y="357" width="0.1783%" height="15" fill="rgb(223,223,32)" fg:x="21420" fg:w="88"/><text x="43.6419%" y="367.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (129 samples, 0.26%)</title><rect x="43.3129%" y="373" width="0.2613%" height="15" fill="rgb(227,189,39)" fg:x="21381" fg:w="129"/><text x="43.5629%" y="383.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (21 samples, 0.04%)</title><rect x="44.5102%" y="325" width="0.0425%" height="15" fill="rgb(248,10,22)" fg:x="21972" fg:w="21"/><text x="44.7602%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (15 samples, 0.03%)</title><rect x="44.6054%" y="293" width="0.0304%" height="15" fill="rgb(248,46,39)" fg:x="22019" fg:w="15"/><text x="44.8554%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (26 samples, 0.05%)</title><rect x="44.5851%" y="309" width="0.0527%" height="15" fill="rgb(248,113,48)" fg:x="22009" fg:w="26"/><text x="44.8351%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (30 samples, 0.06%)</title><rect x="44.7067%" y="261" width="0.0608%" height="15" fill="rgb(245,16,25)" fg:x="22069" fg:w="30"/><text x="44.9567%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (93 samples, 0.19%)</title><rect x="44.6459%" y="293" width="0.1884%" height="15" fill="rgb(249,152,16)" fg:x="22039" fg:w="93"/><text x="44.8959%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (75 samples, 0.15%)</title><rect x="44.6824%" y="277" width="0.1519%" height="15" fill="rgb(250,16,1)" fg:x="22057" fg:w="75"/><text x="44.9324%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (30 samples, 0.06%)</title><rect x="44.7735%" y="261" width="0.0608%" height="15" fill="rgb(249,138,3)" fg:x="22102" fg:w="30"/><text x="45.0235%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (148 samples, 0.30%)</title><rect x="44.5527%" y="325" width="0.2998%" height="15" fill="rgb(227,71,41)" fg:x="21993" fg:w="148"/><text x="44.8027%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (106 samples, 0.21%)</title><rect x="44.6378%" y="309" width="0.2147%" height="15" fill="rgb(209,184,23)" fg:x="22035" fg:w="106"/><text x="44.8878%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="44.8363%" y="293" width="0.0162%" height="15" fill="rgb(223,215,31)" fg:x="22133" fg:w="8"/><text x="45.0863%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="44.8424%" y="277" width="0.0101%" height="15" fill="rgb(210,146,28)" fg:x="22136" fg:w="5"/><text x="45.0924%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (5 samples, 0.01%)</title><rect x="44.8525%" y="325" width="0.0101%" height="15" fill="rgb(209,183,41)" fg:x="22141" fg:w="5"/><text x="45.1025%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (632 samples, 1.28%)</title><rect x="43.5884%" y="341" width="1.2803%" height="15" fill="rgb(209,224,45)" fg:x="21517" fg:w="632"/><text x="43.8384%" y="351.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (29 samples, 0.06%)</title><rect x="44.9883%" y="293" width="0.0587%" height="15" fill="rgb(224,209,51)" fg:x="22208" fg:w="29"/><text x="45.2383%" y="303.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (8 samples, 0.02%)</title><rect x="45.0592%" y="277" width="0.0162%" height="15" fill="rgb(223,17,39)" fg:x="22243" fg:w="8"/><text x="45.3092%" y="287.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (20 samples, 0.04%)</title><rect x="45.0470%" y="293" width="0.0405%" height="15" fill="rgb(234,204,37)" fg:x="22237" fg:w="20"/><text x="45.2970%" y="303.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (73 samples, 0.15%)</title><rect x="44.9417%" y="309" width="0.1479%" height="15" fill="rgb(236,120,5)" fg:x="22185" fg:w="73"/><text x="45.1917%" y="319.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="45.1057%" y="293" width="0.0101%" height="15" fill="rgb(248,97,27)" fg:x="22266" fg:w="5"/><text x="45.3557%" y="303.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (6 samples, 0.01%)</title><rect x="45.1159%" y="293" width="0.0122%" height="15" fill="rgb(240,66,17)" fg:x="22271" fg:w="6"/><text x="45.3659%" y="303.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (23 samples, 0.05%)</title><rect x="45.0895%" y="309" width="0.0466%" height="15" fill="rgb(210,79,3)" fg:x="22258" fg:w="23"/><text x="45.3395%" y="319.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (123 samples, 0.25%)</title><rect x="44.8910%" y="325" width="0.2492%" height="15" fill="rgb(214,176,27)" fg:x="22160" fg:w="123"/><text x="45.1410%" y="335.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (16 samples, 0.03%)</title><rect x="45.2354%" y="293" width="0.0324%" height="15" fill="rgb(235,185,3)" fg:x="22330" fg:w="16"/><text x="45.4854%" y="303.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (17 samples, 0.03%)</title><rect x="45.2678%" y="293" width="0.0344%" height="15" fill="rgb(227,24,12)" fg:x="22346" fg:w="17"/><text x="45.5178%" y="303.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.02%)</title><rect x="45.3225%" y="277" width="0.0182%" height="15" fill="rgb(252,169,48)" fg:x="22373" fg:w="9"/><text x="45.5725%" y="287.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (10 samples, 0.02%)</title><rect x="45.3407%" y="277" width="0.0203%" height="15" fill="rgb(212,65,1)" fg:x="22382" fg:w="10"/><text x="45.5907%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="45.3610%" y="277" width="0.0101%" height="15" fill="rgb(242,39,24)" fg:x="22392" fg:w="5"/><text x="45.6110%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="45.3610%" y="261" width="0.0101%" height="15" fill="rgb(249,32,23)" fg:x="22392" fg:w="5"/><text x="45.6110%" y="271.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (37 samples, 0.07%)</title><rect x="45.3022%" y="293" width="0.0750%" height="15" fill="rgb(251,195,23)" fg:x="22363" fg:w="37"/><text x="45.5522%" y="303.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (110 samples, 0.22%)</title><rect x="45.1584%" y="309" width="0.2228%" height="15" fill="rgb(236,174,8)" fg:x="22292" fg:w="110"/><text x="45.4084%" y="319.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="45.3934%" y="293" width="0.0122%" height="15" fill="rgb(220,197,8)" fg:x="22408" fg:w="6"/><text x="45.6434%" y="303.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="45.4056%" y="293" width="0.0101%" height="15" fill="rgb(240,108,37)" fg:x="22414" fg:w="5"/><text x="45.6556%" y="303.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (141 samples, 0.29%)</title><rect x="45.1402%" y="325" width="0.2856%" height="15" fill="rgb(232,176,24)" fg:x="22283" fg:w="141"/><text x="45.3902%" y="335.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (22 samples, 0.04%)</title><rect x="45.3812%" y="309" width="0.0446%" height="15" fill="rgb(243,35,29)" fg:x="22402" fg:w="22"/><text x="45.6312%" y="319.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.02%)</title><rect x="45.5676%" y="293" width="0.0203%" height="15" fill="rgb(210,37,18)" fg:x="22494" fg:w="10"/><text x="45.8176%" y="303.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (16 samples, 0.03%)</title><rect x="45.5879%" y="293" width="0.0324%" height="15" fill="rgb(224,184,40)" fg:x="22504" fg:w="16"/><text x="45.8379%" y="303.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.02%)</title><rect x="45.6385%" y="277" width="0.0182%" height="15" fill="rgb(236,39,29)" fg:x="22529" fg:w="9"/><text x="45.8885%" y="287.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (10 samples, 0.02%)</title><rect x="45.6568%" y="277" width="0.0203%" height="15" fill="rgb(232,48,39)" fg:x="22538" fg:w="10"/><text x="45.9068%" y="287.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (88 samples, 0.18%)</title><rect x="45.5109%" y="309" width="0.1783%" height="15" fill="rgb(236,34,42)" fg:x="22466" fg:w="88"/><text x="45.7609%" y="319.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (34 samples, 0.07%)</title><rect x="45.6203%" y="293" width="0.0689%" height="15" fill="rgb(243,106,37)" fg:x="22520" fg:w="34"/><text x="45.8703%" y="303.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (132 samples, 0.27%)</title><rect x="45.4258%" y="325" width="0.2674%" height="15" fill="rgb(218,96,6)" fg:x="22424" fg:w="132"/><text x="45.6758%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.01%)</title><rect x="46.3374%" y="277" width="0.0142%" height="15" fill="rgb(235,130,12)" fg:x="22874" fg:w="7"/><text x="46.5874%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (6 samples, 0.01%)</title><rect x="46.3800%" y="245" width="0.0122%" height="15" fill="rgb(231,95,0)" fg:x="22895" fg:w="6"/><text x="46.6300%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (16 samples, 0.03%)</title><rect x="46.3617%" y="261" width="0.0324%" height="15" fill="rgb(228,12,23)" fg:x="22886" fg:w="16"/><text x="46.6117%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (22 samples, 0.04%)</title><rect x="46.4265%" y="213" width="0.0446%" height="15" fill="rgb(216,12,1)" fg:x="22918" fg:w="22"/><text x="46.6765%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (5 samples, 0.01%)</title><rect x="46.4711%" y="213" width="0.0101%" height="15" fill="rgb(219,59,3)" fg:x="22940" fg:w="5"/><text x="46.7211%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (65 samples, 0.13%)</title><rect x="46.4022%" y="245" width="0.1317%" height="15" fill="rgb(215,208,46)" fg:x="22906" fg:w="65"/><text x="46.6522%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (59 samples, 0.12%)</title><rect x="46.4144%" y="229" width="0.1195%" height="15" fill="rgb(254,224,29)" fg:x="22912" fg:w="59"/><text x="46.6644%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (26 samples, 0.05%)</title><rect x="46.4812%" y="213" width="0.0527%" height="15" fill="rgb(232,14,29)" fg:x="22945" fg:w="26"/><text x="46.7312%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (98 samples, 0.20%)</title><rect x="46.3516%" y="277" width="0.1985%" height="15" fill="rgb(208,45,52)" fg:x="22881" fg:w="98"/><text x="46.6016%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (77 samples, 0.16%)</title><rect x="46.3941%" y="261" width="0.1560%" height="15" fill="rgb(234,191,28)" fg:x="22902" fg:w="77"/><text x="46.6441%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="46.5339%" y="245" width="0.0162%" height="15" fill="rgb(244,67,43)" fg:x="22971" fg:w="8"/><text x="46.7839%" y="255.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (423 samples, 0.86%)</title><rect x="45.7013%" y="293" width="0.8569%" height="15" fill="rgb(236,189,24)" fg:x="22560" fg:w="423"/><text x="45.9513%" y="303.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="46.6129%" y="245" width="0.0142%" height="15" fill="rgb(239,214,33)" fg:x="23010" fg:w="7"/><text x="46.8629%" y="255.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (6 samples, 0.01%)</title><rect x="46.6271%" y="245" width="0.0122%" height="15" fill="rgb(226,176,41)" fg:x="23017" fg:w="6"/><text x="46.8771%" y="255.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (23 samples, 0.05%)</title><rect x="46.5967%" y="261" width="0.0466%" height="15" fill="rgb(248,47,8)" fg:x="23002" fg:w="23"/><text x="46.8467%" y="271.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (40 samples, 0.08%)</title><rect x="46.5805%" y="277" width="0.0810%" height="15" fill="rgb(218,81,44)" fg:x="22994" fg:w="40"/><text x="46.8305%" y="287.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.02%)</title><rect x="46.6433%" y="261" width="0.0182%" height="15" fill="rgb(213,98,6)" fg:x="23025" fg:w="9"/><text x="46.8933%" y="271.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="46.7021%" y="245" width="0.0122%" height="15" fill="rgb(222,85,22)" fg:x="23054" fg:w="6"/><text x="46.9521%" y="255.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (9 samples, 0.02%)</title><rect x="46.7142%" y="245" width="0.0182%" height="15" fill="rgb(239,46,39)" fg:x="23060" fg:w="9"/><text x="46.9642%" y="255.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (37 samples, 0.07%)</title><rect x="46.6696%" y="261" width="0.0750%" height="15" fill="rgb(237,12,29)" fg:x="23038" fg:w="37"/><text x="46.9196%" y="271.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="46.7324%" y="245" width="0.0122%" height="15" fill="rgb(214,77,8)" fg:x="23069" fg:w="6"/><text x="46.9824%" y="255.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (51 samples, 0.10%)</title><rect x="46.6615%" y="277" width="0.1033%" height="15" fill="rgb(217,168,37)" fg:x="23034" fg:w="51"/><text x="46.9115%" y="287.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.02%)</title><rect x="46.7446%" y="261" width="0.0203%" height="15" fill="rgb(221,217,23)" fg:x="23075" fg:w="10"/><text x="46.9946%" y="271.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="46.8155%" y="245" width="0.0101%" height="15" fill="rgb(243,229,36)" fg:x="23110" fg:w="5"/><text x="47.0655%" y="255.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.02%)</title><rect x="46.8256%" y="245" width="0.0182%" height="15" fill="rgb(251,163,40)" fg:x="23115" fg:w="9"/><text x="47.0756%" y="255.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (26 samples, 0.05%)</title><rect x="46.7932%" y="261" width="0.0527%" height="15" fill="rgb(237,222,12)" fg:x="23099" fg:w="26"/><text x="47.0432%" y="271.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (42 samples, 0.09%)</title><rect x="46.7648%" y="277" width="0.0851%" height="15" fill="rgb(248,132,6)" fg:x="23085" fg:w="42"/><text x="47.0148%" y="287.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (9 samples, 0.02%)</title><rect x="47.1214%" y="229" width="0.0182%" height="15" fill="rgb(227,167,50)" fg:x="23261" fg:w="9"/><text x="47.3714%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.02%)</title><rect x="47.1558%" y="197" width="0.0162%" height="15" fill="rgb(242,84,37)" fg:x="23278" fg:w="8"/><text x="47.4058%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (13 samples, 0.03%)</title><rect x="47.1477%" y="213" width="0.0263%" height="15" fill="rgb(212,4,50)" fg:x="23274" fg:w="13"/><text x="47.3977%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (8 samples, 0.02%)</title><rect x="47.2004%" y="165" width="0.0162%" height="15" fill="rgb(230,228,32)" fg:x="23300" fg:w="8"/><text x="47.4504%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (26 samples, 0.05%)</title><rect x="47.1761%" y="197" width="0.0527%" height="15" fill="rgb(248,217,23)" fg:x="23288" fg:w="26"/><text x="47.4261%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (17 samples, 0.03%)</title><rect x="47.1943%" y="181" width="0.0344%" height="15" fill="rgb(238,197,32)" fg:x="23297" fg:w="17"/><text x="47.4443%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (6 samples, 0.01%)</title><rect x="47.2166%" y="165" width="0.0122%" height="15" fill="rgb(236,106,1)" fg:x="23308" fg:w="6"/><text x="47.4666%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (31 samples, 0.06%)</title><rect x="47.1741%" y="213" width="0.0628%" height="15" fill="rgb(219,228,13)" fg:x="23287" fg:w="31"/><text x="47.4241%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (49 samples, 0.10%)</title><rect x="47.1396%" y="229" width="0.0993%" height="15" fill="rgb(238,30,35)" fg:x="23270" fg:w="49"/><text x="47.3896%" y="239.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (188 samples, 0.38%)</title><rect x="46.8601%" y="245" width="0.3808%" height="15" fill="rgb(236,70,23)" fg:x="23132" fg:w="188"/><text x="47.1101%" y="255.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="47.2895%" y="197" width="0.0101%" height="15" fill="rgb(249,104,48)" fg:x="23344" fg:w="5"/><text x="47.5395%" y="207.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (12 samples, 0.02%)</title><rect x="47.2997%" y="197" width="0.0243%" height="15" fill="rgb(254,117,50)" fg:x="23349" fg:w="12"/><text x="47.5497%" y="207.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (30 samples, 0.06%)</title><rect x="47.2693%" y="213" width="0.0608%" height="15" fill="rgb(223,152,4)" fg:x="23334" fg:w="30"/><text x="47.5193%" y="223.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (13 samples, 0.03%)</title><rect x="47.3300%" y="213" width="0.0263%" height="15" fill="rgb(245,6,2)" fg:x="23364" fg:w="13"/><text x="47.5800%" y="223.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (48 samples, 0.10%)</title><rect x="47.2632%" y="229" width="0.0972%" height="15" fill="rgb(249,150,24)" fg:x="23331" fg:w="48"/><text x="47.5132%" y="239.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (7 samples, 0.01%)</title><rect x="47.3969%" y="197" width="0.0142%" height="15" fill="rgb(228,185,42)" fg:x="23397" fg:w="7"/><text x="47.6469%" y="207.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (25 samples, 0.05%)</title><rect x="47.3665%" y="213" width="0.0506%" height="15" fill="rgb(226,39,33)" fg:x="23382" fg:w="25"/><text x="47.6165%" y="223.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="47.4374%" y="197" width="0.0101%" height="15" fill="rgb(221,166,19)" fg:x="23417" fg:w="5"/><text x="47.6874%" y="207.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (22 samples, 0.04%)</title><rect x="47.4171%" y="213" width="0.0446%" height="15" fill="rgb(209,109,2)" fg:x="23407" fg:w="22"/><text x="47.6671%" y="223.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (51 samples, 0.10%)</title><rect x="47.3604%" y="229" width="0.1033%" height="15" fill="rgb(252,216,26)" fg:x="23379" fg:w="51"/><text x="47.6104%" y="239.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (8 samples, 0.02%)</title><rect x="47.5083%" y="197" width="0.0162%" height="15" fill="rgb(227,173,36)" fg:x="23452" fg:w="8"/><text x="47.7583%" y="207.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (12 samples, 0.02%)</title><rect x="47.5245%" y="197" width="0.0243%" height="15" fill="rgb(209,90,7)" fg:x="23460" fg:w="12"/><text x="47.7745%" y="207.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (26 samples, 0.05%)</title><rect x="47.4982%" y="213" width="0.0527%" height="15" fill="rgb(250,194,11)" fg:x="23447" fg:w="26"/><text x="47.7482%" y="223.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (48 samples, 0.10%)</title><rect x="47.4637%" y="229" width="0.0972%" height="15" fill="rgb(220,72,50)" fg:x="23430" fg:w="48"/><text x="47.7137%" y="239.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="47.5508%" y="213" width="0.0101%" height="15" fill="rgb(222,106,48)" fg:x="23473" fg:w="5"/><text x="47.8008%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="47.5508%" y="197" width="0.0101%" height="15" fill="rgb(216,220,45)" fg:x="23473" fg:w="5"/><text x="47.8008%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="47.5508%" y="181" width="0.0101%" height="15" fill="rgb(234,112,18)" fg:x="23473" fg:w="5"/><text x="47.8008%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="47.5508%" y="165" width="0.0101%" height="15" fill="rgb(206,179,9)" fg:x="23473" fg:w="5"/><text x="47.8008%" y="175.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="47.8365%" y="181" width="0.0101%" height="15" fill="rgb(215,115,40)" fg:x="23614" fg:w="5"/><text x="48.0865%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.02%)</title><rect x="47.8588%" y="165" width="0.0182%" height="15" fill="rgb(222,69,34)" fg:x="23625" fg:w="9"/><text x="48.1088%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (5 samples, 0.01%)</title><rect x="47.8891%" y="117" width="0.0101%" height="15" fill="rgb(209,161,10)" fg:x="23640" fg:w="5"/><text x="48.1391%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (20 samples, 0.04%)</title><rect x="47.8810%" y="149" width="0.0405%" height="15" fill="rgb(217,6,38)" fg:x="23636" fg:w="20"/><text x="48.1310%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (19 samples, 0.04%)</title><rect x="47.8831%" y="133" width="0.0385%" height="15" fill="rgb(229,229,48)" fg:x="23637" fg:w="19"/><text x="48.1331%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (8 samples, 0.02%)</title><rect x="47.9054%" y="117" width="0.0162%" height="15" fill="rgb(225,21,28)" fg:x="23648" fg:w="8"/><text x="48.1554%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (41 samples, 0.08%)</title><rect x="47.8466%" y="181" width="0.0831%" height="15" fill="rgb(206,33,13)" fg:x="23619" fg:w="41"/><text x="48.0966%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (25 samples, 0.05%)</title><rect x="47.8790%" y="165" width="0.0506%" height="15" fill="rgb(242,178,17)" fg:x="23635" fg:w="25"/><text x="48.1290%" y="175.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (179 samples, 0.36%)</title><rect x="47.5691%" y="197" width="0.3626%" height="15" fill="rgb(220,162,5)" fg:x="23482" fg:w="179"/><text x="47.8191%" y="207.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (6 samples, 0.01%)</title><rect x="47.9337%" y="181" width="0.0122%" height="15" fill="rgb(210,33,43)" fg:x="23662" fg:w="6"/><text x="48.1837%" y="191.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.02%)</title><rect x="47.9479%" y="165" width="0.0182%" height="15" fill="rgb(216,116,54)" fg:x="23669" fg:w="9"/><text x="48.1979%" y="175.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (13 samples, 0.03%)</title><rect x="47.9459%" y="181" width="0.0263%" height="15" fill="rgb(249,92,24)" fg:x="23668" fg:w="13"/><text x="48.1959%" y="191.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (11 samples, 0.02%)</title><rect x="47.9722%" y="181" width="0.0223%" height="15" fill="rgb(231,189,14)" fg:x="23681" fg:w="11"/><text x="48.2222%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (6 samples, 0.01%)</title><rect x="48.0856%" y="101" width="0.0122%" height="15" fill="rgb(230,8,41)" fg:x="23737" fg:w="6"/><text x="48.3356%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (6 samples, 0.01%)</title><rect x="48.0856%" y="85" width="0.0122%" height="15" fill="rgb(249,7,27)" fg:x="23737" fg:w="6"/><text x="48.3356%" y="95.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (50 samples, 0.10%)</title><rect x="48.0006%" y="149" width="0.1013%" height="15" fill="rgb(232,86,5)" fg:x="23695" fg:w="50"/><text x="48.2506%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (13 samples, 0.03%)</title><rect x="48.0755%" y="133" width="0.0263%" height="15" fill="rgb(224,175,18)" fg:x="23732" fg:w="13"/><text x="48.3255%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="48.0856%" y="117" width="0.0162%" height="15" fill="rgb(220,129,12)" fg:x="23737" fg:w="8"/><text x="48.3356%" y="127.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (53 samples, 0.11%)</title><rect x="47.9985%" y="181" width="0.1074%" height="15" fill="rgb(210,19,36)" fg:x="23694" fg:w="53"/><text x="48.2485%" y="191.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (53 samples, 0.11%)</title><rect x="47.9985%" y="165" width="0.1074%" height="15" fill="rgb(219,96,14)" fg:x="23694" fg:w="53"/><text x="48.2485%" y="175.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (101 samples, 0.20%)</title><rect x="47.9317%" y="197" width="0.2046%" height="15" fill="rgb(249,106,1)" fg:x="23661" fg:w="101"/><text x="48.1817%" y="207.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (294 samples, 0.60%)</title><rect x="47.5650%" y="229" width="0.5956%" height="15" fill="rgb(249,155,20)" fg:x="23480" fg:w="294"/><text x="47.8150%" y="239.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (294 samples, 0.60%)</title><rect x="47.5650%" y="213" width="0.5956%" height="15" fill="rgb(244,168,9)" fg:x="23480" fg:w="294"/><text x="47.8150%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.01%)</title><rect x="48.1464%" y="197" width="0.0142%" height="15" fill="rgb(216,23,50)" fg:x="23767" fg:w="7"/><text x="48.3964%" y="207.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.01%)</title><rect x="48.1647%" y="213" width="0.0101%" height="15" fill="rgb(224,219,20)" fg:x="23776" fg:w="5"/><text x="48.4147%" y="223.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (11 samples, 0.02%)</title><rect x="48.1626%" y="229" width="0.0223%" height="15" fill="rgb(222,156,15)" fg:x="23775" fg:w="11"/><text x="48.4126%" y="239.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (5 samples, 0.01%)</title><rect x="48.1748%" y="213" width="0.0101%" height="15" fill="rgb(231,97,17)" fg:x="23781" fg:w="5"/><text x="48.4248%" y="223.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="48.1748%" y="197" width="0.0101%" height="15" fill="rgb(218,70,48)" fg:x="23781" fg:w="5"/><text x="48.4248%" y="207.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::update_statistic (6 samples, 0.01%)</title><rect x="48.1849%" y="229" width="0.0122%" height="15" fill="rgb(212,196,52)" fg:x="23786" fg:w="6"/><text x="48.4349%" y="239.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (8 samples, 0.02%)</title><rect x="48.1971%" y="229" width="0.0162%" height="15" fill="rgb(243,203,18)" fg:x="23792" fg:w="8"/><text x="48.4471%" y="239.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="48.2031%" y="213" width="0.0101%" height="15" fill="rgb(252,125,41)" fg:x="23795" fg:w="5"/><text x="48.4531%" y="223.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.01%)</title><rect x="48.2214%" y="229" width="0.0142%" height="15" fill="rgb(223,180,33)" fg:x="23804" fg:w="7"/><text x="48.4714%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.02%)</title><rect x="48.2376%" y="229" width="0.0203%" height="15" fill="rgb(254,159,46)" fg:x="23812" fg:w="10"/><text x="48.4876%" y="239.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (513 samples, 1.04%)</title><rect x="47.2409%" y="245" width="1.0392%" height="15" fill="rgb(254,38,10)" fg:x="23320" fg:w="513"/><text x="47.4909%" y="255.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (728 samples, 1.47%)</title><rect x="46.8540%" y="261" width="1.4748%" height="15" fill="rgb(208,217,32)" fg:x="23129" fg:w="728"/><text x="47.1040%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (12 samples, 0.02%)</title><rect x="48.3044%" y="245" width="0.0243%" height="15" fill="rgb(221,120,13)" fg:x="23845" fg:w="12"/><text x="48.5544%" y="255.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (729 samples, 1.48%)</title><rect x="46.8540%" y="277" width="1.4768%" height="15" fill="rgb(246,54,52)" fg:x="23129" fg:w="729"/><text x="47.1040%" y="287.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (8 samples, 0.02%)</title><rect x="48.3308%" y="277" width="0.0162%" height="15" fill="rgb(242,34,25)" fg:x="23858" fg:w="8"/><text x="48.5808%" y="287.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::update_statistic (8 samples, 0.02%)</title><rect x="48.3470%" y="277" width="0.0162%" height="15" fill="rgb(247,209,9)" fg:x="23866" fg:w="8"/><text x="48.5970%" y="287.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (8 samples, 0.02%)</title><rect x="48.3632%" y="277" width="0.0162%" height="15" fill="rgb(228,71,26)" fg:x="23874" fg:w="8"/><text x="48.6132%" y="287.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="48.3672%" y="261" width="0.0122%" height="15" fill="rgb(222,145,49)" fg:x="23876" fg:w="6"/><text x="48.6172%" y="271.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.01%)</title><rect x="48.3794%" y="277" width="0.0142%" height="15" fill="rgb(218,121,17)" fg:x="23882" fg:w="7"/><text x="48.6294%" y="287.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.02%)</title><rect x="48.3956%" y="277" width="0.0162%" height="15" fill="rgb(244,50,7)" fg:x="23890" fg:w="8"/><text x="48.6456%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.01%)</title><rect x="48.4179%" y="261" width="0.0101%" height="15" fill="rgb(246,229,37)" fg:x="23901" fg:w="5"/><text x="48.6679%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.02%)</title><rect x="48.4118%" y="277" width="0.0182%" height="15" fill="rgb(225,18,5)" fg:x="23898" fg:w="9"/><text x="48.6618%" y="287.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (935 samples, 1.89%)</title><rect x="46.5582%" y="293" width="1.8941%" height="15" fill="rgb(213,204,8)" fg:x="22983" fg:w="935"/><text x="46.8082%" y="303.50">d..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (20 samples, 0.04%)</title><rect x="48.4746%" y="293" width="0.0405%" height="15" fill="rgb(238,103,6)" fg:x="23929" fg:w="20"/><text x="48.7246%" y="303.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (1,394 samples, 2.82%)</title><rect x="45.6932%" y="325" width="2.8239%" height="15" fill="rgb(222,25,35)" fg:x="22556" fg:w="1394"/><text x="45.9432%" y="335.50">da..</text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (1,394 samples, 2.82%)</title><rect x="45.6932%" y="309" width="2.8239%" height="15" fill="rgb(213,203,35)" fg:x="22556" fg:w="1394"/><text x="45.9432%" y="319.50">da..</text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (11 samples, 0.02%)</title><rect x="48.5192%" y="309" width="0.0223%" height="15" fill="rgb(221,79,53)" fg:x="23951" fg:w="11"/><text x="48.7692%" y="319.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (22 samples, 0.04%)</title><rect x="48.5192%" y="325" width="0.0446%" height="15" fill="rgb(243,200,35)" fg:x="23951" fg:w="22"/><text x="48.7692%" y="335.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (7 samples, 0.01%)</title><rect x="48.5739%" y="309" width="0.0142%" height="15" fill="rgb(248,60,25)" fg:x="23978" fg:w="7"/><text x="48.8239%" y="319.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::update_statistic (16 samples, 0.03%)</title><rect x="48.5637%" y="325" width="0.0324%" height="15" fill="rgb(227,53,46)" fg:x="23973" fg:w="16"/><text x="48.8137%" y="335.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.02%)</title><rect x="48.6022%" y="309" width="0.0162%" height="15" fill="rgb(216,120,32)" fg:x="23992" fg:w="8"/><text x="48.8522%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="48.6063%" y="293" width="0.0122%" height="15" fill="rgb(220,134,1)" fg:x="23994" fg:w="6"/><text x="48.8563%" y="303.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (12 samples, 0.02%)</title><rect x="48.5961%" y="325" width="0.0243%" height="15" fill="rgb(237,168,5)" fg:x="23989" fg:w="12"/><text x="48.8461%" y="335.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (22 samples, 0.04%)</title><rect x="48.6245%" y="325" width="0.0446%" height="15" fill="rgb(231,100,33)" fg:x="24003" fg:w="22"/><text x="48.8745%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="48.6711%" y="325" width="0.0101%" height="15" fill="rgb(236,177,47)" fg:x="24026" fg:w="5"/><text x="48.9211%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.02%)</title><rect x="48.6914%" y="325" width="0.0223%" height="15" fill="rgb(235,7,49)" fg:x="24036" fg:w="11"/><text x="48.9414%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_small (8 samples, 0.02%)</title><rect x="48.7136%" y="325" width="0.0162%" height="15" fill="rgb(232,119,22)" fg:x="24047" fg:w="8"/><text x="48.9636%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="48.7298%" y="325" width="0.0142%" height="15" fill="rgb(254,73,53)" fg:x="24055" fg:w="7"/><text x="48.9798%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="48.7339%" y="309" width="0.0101%" height="15" fill="rgb(251,35,20)" fg:x="24057" fg:w="5"/><text x="48.9839%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (1,925 samples, 3.90%)</title><rect x="44.8687%" y="341" width="3.8996%" height="15" fill="rgb(241,119,20)" fg:x="22149" fg:w="1925"/><text x="45.1187%" y="351.50">data..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.02%)</title><rect x="48.7866%" y="341" width="0.0203%" height="15" fill="rgb(207,102,14)" fg:x="24083" fg:w="10"/><text x="49.0366%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (17 samples, 0.03%)</title><rect x="48.8109%" y="341" width="0.0344%" height="15" fill="rgb(248,201,50)" fg:x="24095" fg:w="17"/><text x="49.0609%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (2,600 samples, 5.27%)</title><rect x="43.5803%" y="357" width="5.2670%" height="15" fill="rgb(222,185,44)" fg:x="21513" fg:w="2600"/><text x="43.8303%" y="367.50">databe..</text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (2,602 samples, 5.27%)</title><rect x="43.5783%" y="373" width="5.2710%" height="15" fill="rgb(218,107,18)" fg:x="21512" fg:w="2602"/><text x="43.8283%" y="383.50">databe..</text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="48.8656%" y="341" width="0.0101%" height="15" fill="rgb(237,177,39)" fg:x="24122" fg:w="5"/><text x="49.1156%" y="351.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (15 samples, 0.03%)</title><rect x="48.8595%" y="357" width="0.0304%" height="15" fill="rgb(246,69,6)" fg:x="24119" fg:w="15"/><text x="49.1095%" y="367.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.01%)</title><rect x="48.8757%" y="341" width="0.0142%" height="15" fill="rgb(234,208,37)" fg:x="24127" fg:w="7"/><text x="49.1257%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (5 samples, 0.01%)</title><rect x="48.8899%" y="357" width="0.0101%" height="15" fill="rgb(225,4,6)" fg:x="24134" fg:w="5"/><text x="49.1399%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (24 samples, 0.05%)</title><rect x="48.8595%" y="373" width="0.0486%" height="15" fill="rgb(233,45,0)" fg:x="24119" fg:w="24"/><text x="49.1095%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (7 samples, 0.01%)</title><rect x="48.9162%" y="357" width="0.0142%" height="15" fill="rgb(226,136,5)" fg:x="24147" fg:w="7"/><text x="49.1662%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::update_statistic (13 samples, 0.03%)</title><rect x="48.9081%" y="373" width="0.0263%" height="15" fill="rgb(211,91,47)" fg:x="24143" fg:w="13"/><text x="49.1581%" y="383.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="48.9405%" y="357" width="0.0101%" height="15" fill="rgb(242,88,51)" fg:x="24159" fg:w="5"/><text x="49.1905%" y="367.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="48.9507%" y="357" width="0.0122%" height="15" fill="rgb(230,91,28)" fg:x="24164" fg:w="6"/><text x="49.2007%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (17 samples, 0.03%)</title><rect x="48.9344%" y="373" width="0.0344%" height="15" fill="rgb(254,186,29)" fg:x="24156" fg:w="17"/><text x="49.1844%" y="383.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (22 samples, 0.04%)</title><rect x="48.9709%" y="373" width="0.0446%" height="15" fill="rgb(238,6,4)" fg:x="24174" fg:w="22"/><text x="49.2209%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.02%)</title><rect x="49.0317%" y="373" width="0.0182%" height="15" fill="rgb(221,151,16)" fg:x="24204" fg:w="9"/><text x="49.2817%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_small (5 samples, 0.01%)</title><rect x="49.0499%" y="373" width="0.0101%" height="15" fill="rgb(251,143,52)" fg:x="24213" fg:w="5"/><text x="49.2999%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="49.0600%" y="373" width="0.0142%" height="15" fill="rgb(206,90,15)" fg:x="24218" fg:w="7"/><text x="49.3100%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="49.0641%" y="357" width="0.0101%" height="15" fill="rgb(218,35,8)" fg:x="24220" fg:w="5"/><text x="49.3141%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (3,184 samples, 6.45%)</title><rect x="42.6404%" y="389" width="6.4500%" height="15" fill="rgb(239,215,6)" fg:x="21049" fg:w="3184"/><text x="42.8904%" y="399.50">databend..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.01%)</title><rect x="49.0783%" y="373" width="0.0122%" height="15" fill="rgb(245,116,39)" fg:x="24227" fg:w="6"/><text x="49.3283%" y="383.50"></text></g><g><title>databend-query`common_base::runtime::runtime_tracker::ThreadTracker::alloc (7 samples, 0.01%)</title><rect x="49.1026%" y="389" width="0.0142%" height="15" fill="rgb(242,65,28)" fg:x="24239" fg:w="7"/><text x="49.3526%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (25 samples, 0.05%)</title><rect x="49.1370%" y="389" width="0.0506%" height="15" fill="rgb(252,132,53)" fg:x="24256" fg:w="25"/><text x="49.3870%" y="399.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (3,894 samples, 7.89%)</title><rect x="41.3014%" y="405" width="7.8883%" height="15" fill="rgb(224,159,50)" fg:x="20388" fg:w="3894"/><text x="41.5514%" y="415.50">databend-qu..</text></g><g><title>libsystem_malloc.dylib`free (20 samples, 0.04%)</title><rect x="49.5726%" y="373" width="0.0405%" height="15" fill="rgb(224,93,4)" fg:x="24471" fg:w="20"/><text x="49.8226%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (9 samples, 0.02%)</title><rect x="49.5948%" y="357" width="0.0182%" height="15" fill="rgb(208,81,34)" fg:x="24482" fg:w="9"/><text x="49.8448%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (9 samples, 0.02%)</title><rect x="49.6151%" y="373" width="0.0182%" height="15" fill="rgb(233,92,54)" fg:x="24492" fg:w="9"/><text x="49.8651%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (206 samples, 0.42%)</title><rect x="49.2262%" y="389" width="0.4173%" height="15" fill="rgb(237,21,14)" fg:x="24300" fg:w="206"/><text x="49.4762%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (5 samples, 0.01%)</title><rect x="49.6333%" y="373" width="0.0101%" height="15" fill="rgb(249,128,51)" fg:x="24501" fg:w="5"/><text x="49.8833%" y="383.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (17 samples, 0.03%)</title><rect x="49.6435%" y="389" width="0.0344%" height="15" fill="rgb(223,129,24)" fg:x="24506" fg:w="17"/><text x="49.8935%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_size (6 samples, 0.01%)</title><rect x="49.7042%" y="373" width="0.0122%" height="15" fill="rgb(231,168,25)" fg:x="24536" fg:w="6"/><text x="49.9542%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (34 samples, 0.07%)</title><rect x="49.6799%" y="389" width="0.0689%" height="15" fill="rgb(224,39,20)" fg:x="24524" fg:w="34"/><text x="49.9299%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (16 samples, 0.03%)</title><rect x="49.7164%" y="373" width="0.0324%" height="15" fill="rgb(225,152,53)" fg:x="24542" fg:w="16"/><text x="49.9664%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (11 samples, 0.02%)</title><rect x="49.7265%" y="357" width="0.0223%" height="15" fill="rgb(252,17,24)" fg:x="24547" fg:w="11"/><text x="49.9765%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (28 samples, 0.06%)</title><rect x="49.8724%" y="373" width="0.0567%" height="15" fill="rgb(250,114,30)" fg:x="24619" fg:w="28"/><text x="50.1224%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_find_by_ptr (9 samples, 0.02%)</title><rect x="49.9291%" y="373" width="0.0182%" height="15" fill="rgb(229,5,4)" fg:x="24647" fg:w="9"/><text x="50.1791%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_small (140 samples, 0.28%)</title><rect x="49.7488%" y="389" width="0.2836%" height="15" fill="rgb(225,176,49)" fg:x="24558" fg:w="140"/><text x="49.9988%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (38 samples, 0.08%)</title><rect x="49.9554%" y="373" width="0.0770%" height="15" fill="rgb(224,221,49)" fg:x="24660" fg:w="38"/><text x="50.2054%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (426 samples, 0.86%)</title><rect x="49.1958%" y="405" width="0.8630%" height="15" fill="rgb(253,169,27)" fg:x="24285" fg:w="426"/><text x="49.4458%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (36 samples, 0.07%)</title><rect x="50.4133%" y="341" width="0.0729%" height="15" fill="rgb(211,206,16)" fg:x="24886" fg:w="36"/><text x="50.6633%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (17 samples, 0.03%)</title><rect x="50.4517%" y="325" width="0.0344%" height="15" fill="rgb(244,87,35)" fg:x="24905" fg:w="17"/><text x="50.7017%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (13 samples, 0.03%)</title><rect x="50.4882%" y="341" width="0.0263%" height="15" fill="rgb(246,28,10)" fg:x="24923" fg:w="13"/><text x="50.7382%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (209 samples, 0.42%)</title><rect x="50.0952%" y="357" width="0.4234%" height="15" fill="rgb(229,12,44)" fg:x="24729" fg:w="209"/><text x="50.3452%" y="367.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (15 samples, 0.03%)</title><rect x="50.5186%" y="357" width="0.0304%" height="15" fill="rgb(210,145,37)" fg:x="24938" fg:w="15"/><text x="50.7686%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_size (5 samples, 0.01%)</title><rect x="50.5915%" y="341" width="0.0101%" height="15" fill="rgb(227,112,52)" fg:x="24974" fg:w="5"/><text x="50.8415%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (30 samples, 0.06%)</title><rect x="50.5551%" y="357" width="0.0608%" height="15" fill="rgb(238,155,34)" fg:x="24956" fg:w="30"/><text x="50.8051%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (7 samples, 0.01%)</title><rect x="50.6017%" y="341" width="0.0142%" height="15" fill="rgb(239,226,36)" fg:x="24979" fg:w="7"/><text x="50.8517%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.01%)</title><rect x="50.6057%" y="325" width="0.0101%" height="15" fill="rgb(230,16,23)" fg:x="24981" fg:w="5"/><text x="50.8557%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (11 samples, 0.02%)</title><rect x="50.6462%" y="341" width="0.0223%" height="15" fill="rgb(236,171,36)" fg:x="25001" fg:w="11"/><text x="50.8962%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_small (78 samples, 0.16%)</title><rect x="50.6158%" y="357" width="0.1580%" height="15" fill="rgb(221,22,14)" fg:x="24986" fg:w="78"/><text x="50.8658%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (48 samples, 0.10%)</title><rect x="50.6766%" y="341" width="0.0972%" height="15" fill="rgb(242,43,11)" fg:x="25016" fg:w="48"/><text x="50.9266%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (6 samples, 0.01%)</title><rect x="50.7799%" y="357" width="0.0122%" height="15" fill="rgb(232,69,23)" fg:x="25067" fg:w="6"/><text x="51.0299%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (368 samples, 0.75%)</title><rect x="50.0648%" y="373" width="0.7455%" height="15" fill="rgb(216,180,54)" fg:x="24714" fg:w="368"/><text x="50.3148%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (16 samples, 0.03%)</title><rect x="51.0595%" y="309" width="0.0324%" height="15" fill="rgb(216,5,24)" fg:x="25205" fg:w="16"/><text x="51.3095%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (6 samples, 0.01%)</title><rect x="51.0797%" y="293" width="0.0122%" height="15" fill="rgb(225,89,9)" fg:x="25215" fg:w="6"/><text x="51.3297%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (9 samples, 0.02%)</title><rect x="51.0919%" y="309" width="0.0182%" height="15" fill="rgb(243,75,33)" fg:x="25221" fg:w="9"/><text x="51.3419%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (140 samples, 0.28%)</title><rect x="50.8306%" y="325" width="0.2836%" height="15" fill="rgb(247,141,45)" fg:x="25092" fg:w="140"/><text x="51.0806%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (9 samples, 0.02%)</title><rect x="51.1142%" y="325" width="0.0182%" height="15" fill="rgb(232,177,36)" fg:x="25232" fg:w="9"/><text x="51.3642%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (31 samples, 0.06%)</title><rect x="51.1344%" y="325" width="0.0628%" height="15" fill="rgb(219,125,36)" fg:x="25242" fg:w="31"/><text x="51.3844%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.01%)</title><rect x="51.1871%" y="309" width="0.0101%" height="15" fill="rgb(227,94,9)" fg:x="25268" fg:w="5"/><text x="51.4371%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (8 samples, 0.02%)</title><rect x="51.2317%" y="309" width="0.0162%" height="15" fill="rgb(240,34,52)" fg:x="25290" fg:w="8"/><text x="51.4817%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (8 samples, 0.02%)</title><rect x="51.2499%" y="309" width="0.0162%" height="15" fill="rgb(216,45,12)" fg:x="25299" fg:w="8"/><text x="51.4999%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_small (59 samples, 0.12%)</title><rect x="51.1972%" y="325" width="0.1195%" height="15" fill="rgb(246,21,19)" fg:x="25273" fg:w="59"/><text x="51.4472%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (25 samples, 0.05%)</title><rect x="51.2661%" y="309" width="0.0506%" height="15" fill="rgb(213,98,42)" fg:x="25307" fg:w="25"/><text x="51.5161%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="51.3167%" y="325" width="0.0162%" height="15" fill="rgb(250,136,47)" fg:x="25332" fg:w="8"/><text x="51.5667%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.02%)</title><rect x="51.3167%" y="309" width="0.0162%" height="15" fill="rgb(251,124,27)" fg:x="25332" fg:w="8"/><text x="51.5667%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (264 samples, 0.53%)</title><rect x="50.8204%" y="341" width="0.5348%" height="15" fill="rgb(229,180,14)" fg:x="25087" fg:w="264"/><text x="51.0704%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="51.4667%" y="277" width="0.0101%" height="15" fill="rgb(245,216,25)" fg:x="25406" fg:w="5"/><text x="51.7167%" y="287.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (61 samples, 0.12%)</title><rect x="51.3593%" y="293" width="0.1236%" height="15" fill="rgb(251,43,5)" fg:x="25353" fg:w="61"/><text x="51.6093%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.03%)</title><rect x="51.4910%" y="293" width="0.0263%" height="15" fill="rgb(250,128,24)" fg:x="25418" fg:w="13"/><text x="51.7410%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.01%)</title><rect x="51.5072%" y="277" width="0.0101%" height="15" fill="rgb(217,117,27)" fg:x="25426" fg:w="5"/><text x="51.7572%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (5 samples, 0.01%)</title><rect x="51.5355%" y="277" width="0.0101%" height="15" fill="rgb(245,147,4)" fg:x="25440" fg:w="5"/><text x="51.7855%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_small (28 samples, 0.06%)</title><rect x="51.5173%" y="293" width="0.0567%" height="15" fill="rgb(242,201,35)" fg:x="25431" fg:w="28"/><text x="51.7673%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (11 samples, 0.02%)</title><rect x="51.5517%" y="277" width="0.0223%" height="15" fill="rgb(218,181,1)" fg:x="25448" fg:w="11"/><text x="51.8017%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="51.5740%" y="293" width="0.0122%" height="15" fill="rgb(222,6,29)" fg:x="25459" fg:w="6"/><text x="51.8240%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="51.5740%" y="277" width="0.0122%" height="15" fill="rgb(208,186,3)" fg:x="25459" fg:w="6"/><text x="51.8240%" y="287.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (117 samples, 0.24%)</title><rect x="51.3573%" y="309" width="0.2370%" height="15" fill="rgb(216,36,26)" fg:x="25352" fg:w="117"/><text x="51.6073%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.01%)</title><rect x="51.6915%" y="245" width="0.0142%" height="15" fill="rgb(248,201,23)" fg:x="25517" fg:w="7"/><text x="51.9415%" y="255.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (57 samples, 0.12%)</title><rect x="51.6004%" y="261" width="0.1155%" height="15" fill="rgb(251,170,31)" fg:x="25472" fg:w="57"/><text x="51.8504%" y="271.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.01%)</title><rect x="51.7158%" y="261" width="0.0142%" height="15" fill="rgb(207,110,25)" fg:x="25529" fg:w="7"/><text x="51.9658%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (15 samples, 0.03%)</title><rect x="51.7320%" y="261" width="0.0304%" height="15" fill="rgb(250,54,15)" fg:x="25537" fg:w="15"/><text x="51.9820%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (7 samples, 0.01%)</title><rect x="51.7827%" y="245" width="0.0142%" height="15" fill="rgb(227,68,33)" fg:x="25562" fg:w="7"/><text x="52.0327%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_small (27 samples, 0.05%)</title><rect x="51.7624%" y="261" width="0.0547%" height="15" fill="rgb(238,34,41)" fg:x="25552" fg:w="27"/><text x="52.0124%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (6 samples, 0.01%)</title><rect x="51.8050%" y="245" width="0.0122%" height="15" fill="rgb(220,11,15)" fg:x="25573" fg:w="6"/><text x="52.0550%" y="255.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (120 samples, 0.24%)</title><rect x="51.5963%" y="277" width="0.2431%" height="15" fill="rgb(246,111,35)" fg:x="25470" fg:w="120"/><text x="51.8463%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.01%)</title><rect x="51.8657%" y="213" width="0.0122%" height="15" fill="rgb(209,88,53)" fg:x="25603" fg:w="6"/><text x="52.1157%" y="223.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (19 samples, 0.04%)</title><rect x="51.8414%" y="229" width="0.0385%" height="15" fill="rgb(231,185,47)" fg:x="25591" fg:w="19"/><text x="52.0914%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_small (5 samples, 0.01%)</title><rect x="51.8900%" y="229" width="0.0101%" height="15" fill="rgb(233,154,1)" fg:x="25615" fg:w="5"/><text x="52.1400%" y="239.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (33 samples, 0.07%)</title><rect x="51.8394%" y="245" width="0.0669%" height="15" fill="rgb(225,15,46)" fg:x="25590" fg:w="33"/><text x="52.0894%" y="255.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (11 samples, 0.02%)</title><rect x="51.9062%" y="245" width="0.0223%" height="15" fill="rgb(211,135,41)" fg:x="25623" fg:w="11"/><text x="52.1562%" y="255.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (48 samples, 0.10%)</title><rect x="51.8394%" y="261" width="0.0972%" height="15" fill="rgb(208,54,0)" fg:x="25590" fg:w="48"/><text x="52.0894%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="51.9549%" y="245" width="0.0101%" height="15" fill="rgb(244,136,14)" fg:x="25647" fg:w="5"/><text x="52.2049%" y="255.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (15 samples, 0.03%)</title><rect x="51.9427%" y="261" width="0.0304%" height="15" fill="rgb(241,56,14)" fg:x="25641" fg:w="15"/><text x="52.1927%" y="271.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (75 samples, 0.15%)</title><rect x="51.8394%" y="277" width="0.1519%" height="15" fill="rgb(205,80,24)" fg:x="25590" fg:w="75"/><text x="52.0894%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.01%)</title><rect x="51.9974%" y="277" width="0.0122%" height="15" fill="rgb(220,57,4)" fg:x="25668" fg:w="6"/><text x="52.2474%" y="287.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (208 samples, 0.42%)</title><rect x="51.5943%" y="293" width="0.4214%" height="15" fill="rgb(226,193,50)" fg:x="25469" fg:w="208"/><text x="51.8443%" y="303.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (7 samples, 0.01%)</title><rect x="52.0177%" y="293" width="0.0142%" height="15" fill="rgb(231,168,22)" fg:x="25678" fg:w="7"/><text x="52.2677%" y="303.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (8 samples, 0.02%)</title><rect x="52.0318%" y="293" width="0.0162%" height="15" fill="rgb(254,215,14)" fg:x="25685" fg:w="8"/><text x="52.2818%" y="303.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (229 samples, 0.46%)</title><rect x="51.5943%" y="309" width="0.4639%" height="15" fill="rgb(211,115,16)" fg:x="25469" fg:w="229"/><text x="51.8443%" y="319.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (351 samples, 0.71%)</title><rect x="51.3552%" y="325" width="0.7110%" height="15" fill="rgb(236,210,16)" fg:x="25351" fg:w="351"/><text x="51.6052%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (5 samples, 0.01%)</title><rect x="52.0703%" y="325" width="0.0101%" height="15" fill="rgb(221,94,12)" fg:x="25704" fg:w="5"/><text x="52.3203%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_expression::values::Scalar&gt; (8 samples, 0.02%)</title><rect x="52.0926%" y="309" width="0.0162%" height="15" fill="rgb(235,218,49)" fg:x="25715" fg:w="8"/><text x="52.3426%" y="319.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.01%)</title><rect x="52.1088%" y="309" width="0.0122%" height="15" fill="rgb(217,114,14)" fg:x="25723" fg:w="6"/><text x="52.3588%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.02%)</title><rect x="52.1210%" y="309" width="0.0162%" height="15" fill="rgb(216,145,22)" fg:x="25729" fg:w="8"/><text x="52.3710%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (29 samples, 0.06%)</title><rect x="52.0825%" y="325" width="0.0587%" height="15" fill="rgb(217,112,39)" fg:x="25710" fg:w="29"/><text x="52.3325%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (400 samples, 0.81%)</title><rect x="51.3552%" y="341" width="0.8103%" height="15" fill="rgb(225,85,32)" fg:x="25351" fg:w="400"/><text x="51.6052%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.03%)</title><rect x="52.1696%" y="341" width="0.0263%" height="15" fill="rgb(245,209,47)" fg:x="25753" fg:w="13"/><text x="52.4196%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_small (5 samples, 0.01%)</title><rect x="52.1959%" y="341" width="0.0101%" height="15" fill="rgb(218,220,15)" fg:x="25766" fg:w="5"/><text x="52.4459%" y="351.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (692 samples, 1.40%)</title><rect x="50.8103%" y="357" width="1.4018%" height="15" fill="rgb(222,202,31)" fg:x="25082" fg:w="692"/><text x="51.0603%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::binder::bind_context::ColumnBinding&gt; (8 samples, 0.02%)</title><rect x="52.2182%" y="341" width="0.0162%" height="15" fill="rgb(243,203,4)" fg:x="25777" fg:w="8"/><text x="52.4682%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (15 samples, 0.03%)</title><rect x="52.2142%" y="357" width="0.0304%" height="15" fill="rgb(237,92,17)" fg:x="25775" fg:w="15"/><text x="52.4642%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_expression::values::Scalar&gt; (10 samples, 0.02%)</title><rect x="52.2587%" y="341" width="0.0203%" height="15" fill="rgb(231,119,7)" fg:x="25797" fg:w="10"/><text x="52.5087%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="52.2790%" y="341" width="0.0101%" height="15" fill="rgb(237,82,41)" fg:x="25807" fg:w="5"/><text x="52.5290%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.02%)</title><rect x="52.2891%" y="341" width="0.0182%" height="15" fill="rgb(226,81,48)" fg:x="25812" fg:w="9"/><text x="52.5391%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (35 samples, 0.07%)</title><rect x="52.2486%" y="357" width="0.0709%" height="15" fill="rgb(234,70,51)" fg:x="25792" fg:w="35"/><text x="52.4986%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (758 samples, 1.54%)</title><rect x="50.8103%" y="373" width="1.5355%" height="15" fill="rgb(251,86,4)" fg:x="25082" fg:w="758"/><text x="51.0603%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.01%)</title><rect x="52.3560%" y="373" width="0.0122%" height="15" fill="rgb(244,144,28)" fg:x="25845" fg:w="6"/><text x="52.6060%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.01%)</title><rect x="52.3762%" y="373" width="0.0101%" height="15" fill="rgb(232,161,39)" fg:x="25855" fg:w="5"/><text x="52.6262%" y="383.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (1,150 samples, 2.33%)</title><rect x="50.0587%" y="389" width="2.3296%" height="15" fill="rgb(247,34,51)" fg:x="24711" fg:w="1150"/><text x="50.3087%" y="399.50">d..</text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::binder::bind_context::ColumnBinding&gt; (6 samples, 0.01%)</title><rect x="52.3924%" y="373" width="0.0122%" height="15" fill="rgb(225,132,2)" fg:x="25863" fg:w="6"/><text x="52.6424%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (16 samples, 0.03%)</title><rect x="52.3904%" y="389" width="0.0324%" height="15" fill="rgb(209,159,44)" fg:x="25862" fg:w="16"/><text x="52.6404%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (1,171 samples, 2.37%)</title><rect x="50.0587%" y="405" width="2.3722%" height="15" fill="rgb(251,214,1)" fg:x="24711" fg:w="1171"/><text x="50.3087%" y="415.50">da..</text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="52.4370%" y="405" width="0.0101%" height="15" fill="rgb(247,84,47)" fg:x="25885" fg:w="5"/><text x="52.6870%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::join_node::JoinNode::cardinality (5,780 samples, 11.71%)</title><rect x="40.7605%" y="421" width="11.7089%" height="15" fill="rgb(240,111,43)" fg:x="20121" fg:w="5780"/><text x="41.0105%" y="431.50">databend-query`co..</text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(common_sql::planner::plans::scalar_expr::ScalarExpr,common_sql::planner::plans::scalar_expr::ScalarExpr)&gt;&gt; (6 samples, 0.01%)</title><rect x="52.4836%" y="405" width="0.0122%" height="15" fill="rgb(215,214,35)" fg:x="25908" fg:w="6"/><text x="52.7336%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(common_sql::planner::plans::scalar_expr::ScalarExpr,common_sql::planner::plans::scalar_expr::ScalarExpr)&gt;&gt; (9 samples, 0.02%)</title><rect x="52.5018%" y="389" width="0.0182%" height="15" fill="rgb(248,207,23)" fg:x="25917" fg:w="9"/><text x="52.7518%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::binder::bind_context::ColumnBinding&gt; (5 samples, 0.01%)</title><rect x="52.5201%" y="357" width="0.0101%" height="15" fill="rgb(214,186,4)" fg:x="25926" fg:w="5"/><text x="52.7701%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(common_sql::planner::plans::scalar_expr::ScalarExpr,common_sql::planner::plans::scalar_expr::ScalarExpr)&gt;&gt; (7 samples, 0.01%)</title><rect x="52.5201%" y="373" width="0.0142%" height="15" fill="rgb(220,133,22)" fg:x="25926" fg:w="7"/><text x="52.7701%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::binder::bind_context::ColumnBinding&gt; (5 samples, 0.01%)</title><rect x="52.5342%" y="341" width="0.0101%" height="15" fill="rgb(239,134,19)" fg:x="25933" fg:w="5"/><text x="52.7842%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(common_sql::planner::plans::scalar_expr::ScalarExpr,common_sql::planner::plans::scalar_expr::ScalarExpr)&gt;&gt; (6 samples, 0.01%)</title><rect x="52.5342%" y="357" width="0.0122%" height="15" fill="rgb(250,140,9)" fg:x="25933" fg:w="6"/><text x="52.7842%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (12 samples, 0.02%)</title><rect x="52.5464%" y="357" width="0.0243%" height="15" fill="rgb(225,59,14)" fg:x="25939" fg:w="12"/><text x="52.7964%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (25 samples, 0.05%)</title><rect x="52.5342%" y="373" width="0.0506%" height="15" fill="rgb(214,152,51)" fg:x="25933" fg:w="25"/><text x="52.7842%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (35 samples, 0.07%)</title><rect x="52.5201%" y="389" width="0.0709%" height="15" fill="rgb(251,227,43)" fg:x="25926" fg:w="35"/><text x="52.7701%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (50 samples, 0.10%)</title><rect x="52.4957%" y="405" width="0.1013%" height="15" fill="rgb(241,96,17)" fg:x="25914" fg:w="50"/><text x="52.7457%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (61 samples, 0.12%)</title><rect x="52.4816%" y="421" width="0.1236%" height="15" fill="rgb(234,198,43)" fg:x="25907" fg:w="61"/><text x="52.7316%" y="431.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::emit_csg_cmp (5,922 samples, 12.00%)</title><rect x="40.6247%" y="437" width="11.9966%" height="15" fill="rgb(220,108,29)" fg:x="20054" fg:w="5922"/><text x="40.8747%" y="447.50">databend-query`com..</text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (14 samples, 0.03%)</title><rect x="52.6396%" y="357" width="0.0284%" height="15" fill="rgb(226,163,33)" fg:x="25985" fg:w="14"/><text x="52.8896%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.02%)</title><rect x="52.6517%" y="341" width="0.0162%" height="15" fill="rgb(205,194,45)" fg:x="25991" fg:w="8"/><text x="52.9017%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.01%)</title><rect x="52.6558%" y="325" width="0.0122%" height="15" fill="rgb(206,143,44)" fg:x="25993" fg:w="6"/><text x="52.9058%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.01%)</title><rect x="52.6578%" y="309" width="0.0101%" height="15" fill="rgb(236,136,36)" fg:x="25994" fg:w="5"/><text x="52.9078%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (17 samples, 0.03%)</title><rect x="52.6375%" y="373" width="0.0344%" height="15" fill="rgb(249,172,42)" fg:x="25984" fg:w="17"/><text x="52.8875%" y="383.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.04%)</title><rect x="52.6355%" y="389" width="0.0405%" height="15" fill="rgb(216,139,23)" fg:x="25983" fg:w="20"/><text x="52.8855%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="52.6882%" y="325" width="0.0122%" height="15" fill="rgb(207,166,20)" fg:x="26009" fg:w="6"/><text x="52.9382%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="52.6841%" y="341" width="0.0223%" height="15" fill="rgb(210,209,22)" fg:x="26007" fg:w="11"/><text x="52.9341%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (14 samples, 0.03%)</title><rect x="52.6821%" y="357" width="0.0284%" height="15" fill="rgb(232,118,20)" fg:x="26006" fg:w="14"/><text x="52.9321%" y="367.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.03%)</title><rect x="52.6821%" y="373" width="0.0324%" height="15" fill="rgb(238,113,42)" fg:x="26006" fg:w="16"/><text x="52.9321%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="52.7166%" y="325" width="0.0122%" height="15" fill="rgb(231,42,5)" fg:x="26023" fg:w="6"/><text x="52.9666%" y="335.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="52.7166%" y="357" width="0.0162%" height="15" fill="rgb(243,166,24)" fg:x="26023" fg:w="8"/><text x="52.9666%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="52.7166%" y="341" width="0.0162%" height="15" fill="rgb(237,226,12)" fg:x="26023" fg:w="8"/><text x="52.9666%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="52.7388%" y="309" width="0.0142%" height="15" fill="rgb(229,133,24)" fg:x="26034" fg:w="7"/><text x="52.9888%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="52.7388%" y="293" width="0.0142%" height="15" fill="rgb(238,33,43)" fg:x="26034" fg:w="7"/><text x="52.9888%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.01%)</title><rect x="52.7429%" y="277" width="0.0101%" height="15" fill="rgb(227,59,38)" fg:x="26036" fg:w="5"/><text x="52.9929%" y="287.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="52.7368%" y="325" width="0.0223%" height="15" fill="rgb(230,97,0)" fg:x="26033" fg:w="11"/><text x="52.9868%" y="335.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.03%)</title><rect x="52.7348%" y="341" width="0.0304%" height="15" fill="rgb(250,173,50)" fg:x="26032" fg:w="15"/><text x="52.9848%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="52.7652%" y="293" width="0.0122%" height="15" fill="rgb(240,15,50)" fg:x="26047" fg:w="6"/><text x="53.0152%" y="303.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="52.7652%" y="309" width="0.0162%" height="15" fill="rgb(221,93,22)" fg:x="26047" fg:w="8"/><text x="53.0152%" y="319.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="52.7652%" y="325" width="0.0203%" height="15" fill="rgb(245,180,53)" fg:x="26047" fg:w="10"/><text x="53.0152%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (15 samples, 0.03%)</title><rect x="52.7652%" y="341" width="0.0304%" height="15" fill="rgb(231,88,51)" fg:x="26047" fg:w="15"/><text x="53.0152%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (35 samples, 0.07%)</title><rect x="52.7328%" y="357" width="0.0709%" height="15" fill="rgb(240,58,21)" fg:x="26031" fg:w="35"/><text x="52.9828%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (49 samples, 0.10%)</title><rect x="52.7145%" y="373" width="0.0993%" height="15" fill="rgb(237,21,10)" fg:x="26022" fg:w="49"/><text x="52.9645%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (75 samples, 0.15%)</title><rect x="52.6760%" y="389" width="0.1519%" height="15" fill="rgb(218,43,11)" fg:x="26003" fg:w="75"/><text x="52.9260%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.01%)</title><rect x="52.8178%" y="373" width="0.0101%" height="15" fill="rgb(218,221,29)" fg:x="26073" fg:w="5"/><text x="53.0678%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (103 samples, 0.21%)</title><rect x="52.6355%" y="405" width="0.2087%" height="15" fill="rgb(214,118,42)" fg:x="25983" fg:w="103"/><text x="52.8855%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="52.8665%" y="341" width="0.0142%" height="15" fill="rgb(251,200,26)" fg:x="26097" fg:w="7"/><text x="53.1165%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="52.8624%" y="357" width="0.0203%" height="15" fill="rgb(237,101,39)" fg:x="26095" fg:w="10"/><text x="53.1124%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (14 samples, 0.03%)</title><rect x="52.8624%" y="373" width="0.0284%" height="15" fill="rgb(251,117,11)" fg:x="26095" fg:w="14"/><text x="53.1124%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (6 samples, 0.01%)</title><rect x="53.0143%" y="277" width="0.0122%" height="15" fill="rgb(216,223,23)" fg:x="26170" fg:w="6"/><text x="53.2643%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (15 samples, 0.03%)</title><rect x="53.0022%" y="309" width="0.0304%" height="15" fill="rgb(251,54,12)" fg:x="26164" fg:w="15"/><text x="53.2522%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (12 samples, 0.02%)</title><rect x="53.0083%" y="293" width="0.0243%" height="15" fill="rgb(254,176,54)" fg:x="26167" fg:w="12"/><text x="53.2583%" y="303.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (45 samples, 0.09%)</title><rect x="52.9434%" y="325" width="0.0912%" height="15" fill="rgb(210,32,8)" fg:x="26135" fg:w="45"/><text x="53.1934%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="53.0387%" y="325" width="0.0122%" height="15" fill="rgb(235,52,38)" fg:x="26182" fg:w="6"/><text x="53.2887%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="53.0387%" y="309" width="0.0122%" height="15" fill="rgb(231,4,44)" fg:x="26182" fg:w="6"/><text x="53.2887%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (76 samples, 0.15%)</title><rect x="52.9009%" y="341" width="0.1540%" height="15" fill="rgb(249,2,32)" fg:x="26114" fg:w="76"/><text x="53.1509%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (77 samples, 0.16%)</title><rect x="52.9009%" y="357" width="0.1560%" height="15" fill="rgb(224,65,26)" fg:x="26114" fg:w="77"/><text x="53.1509%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="53.0630%" y="325" width="0.0142%" height="15" fill="rgb(250,73,40)" fg:x="26194" fg:w="7"/><text x="53.3130%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.01%)</title><rect x="53.0650%" y="309" width="0.0122%" height="15" fill="rgb(253,177,16)" fg:x="26195" fg:w="6"/><text x="53.3150%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="53.0589%" y="341" width="0.0223%" height="15" fill="rgb(217,32,34)" fg:x="26192" fg:w="11"/><text x="53.3089%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (16 samples, 0.03%)</title><rect x="53.0569%" y="357" width="0.0324%" height="15" fill="rgb(212,7,10)" fg:x="26191" fg:w="16"/><text x="53.3069%" y="367.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="53.1055%" y="325" width="0.0122%" height="15" fill="rgb(245,89,8)" fg:x="26215" fg:w="6"/><text x="53.3555%" y="335.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (31 samples, 0.06%)</title><rect x="53.1886%" y="309" width="0.0628%" height="15" fill="rgb(237,16,53)" fg:x="26256" fg:w="31"/><text x="53.4386%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.02%)</title><rect x="53.2311%" y="293" width="0.0203%" height="15" fill="rgb(250,204,30)" fg:x="26277" fg:w="10"/><text x="53.4811%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.01%)</title><rect x="53.2372%" y="277" width="0.0142%" height="15" fill="rgb(208,77,27)" fg:x="26280" fg:w="7"/><text x="53.4872%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (5 samples, 0.01%)</title><rect x="53.2635%" y="277" width="0.0101%" height="15" fill="rgb(250,204,28)" fg:x="26293" fg:w="5"/><text x="53.5135%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (5 samples, 0.01%)</title><rect x="53.2635%" y="261" width="0.0101%" height="15" fill="rgb(244,63,21)" fg:x="26293" fg:w="5"/><text x="53.5135%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (14 samples, 0.03%)</title><rect x="53.2534%" y="309" width="0.0284%" height="15" fill="rgb(236,85,44)" fg:x="26288" fg:w="14"/><text x="53.5034%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="53.2635%" y="293" width="0.0182%" height="15" fill="rgb(215,98,4)" fg:x="26293" fg:w="9"/><text x="53.5135%" y="303.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (87 samples, 0.18%)</title><rect x="53.1177%" y="325" width="0.1762%" height="15" fill="rgb(235,38,11)" fg:x="26221" fg:w="87"/><text x="53.3677%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.01%)</title><rect x="53.2817%" y="309" width="0.0122%" height="15" fill="rgb(254,186,25)" fg:x="26302" fg:w="6"/><text x="53.5317%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (95 samples, 0.19%)</title><rect x="53.1055%" y="341" width="0.1924%" height="15" fill="rgb(225,55,31)" fg:x="26215" fg:w="95"/><text x="53.3555%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="53.2979%" y="341" width="0.0142%" height="15" fill="rgb(211,15,21)" fg:x="26310" fg:w="7"/><text x="53.5479%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="53.3243%" y="309" width="0.0182%" height="15" fill="rgb(215,187,41)" fg:x="26323" fg:w="9"/><text x="53.5743%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="53.3223%" y="325" width="0.0223%" height="15" fill="rgb(248,69,32)" fg:x="26322" fg:w="11"/><text x="53.5723%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="53.3830%" y="261" width="0.0122%" height="15" fill="rgb(252,102,52)" fg:x="26352" fg:w="6"/><text x="53.6330%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.01%)</title><rect x="53.3851%" y="245" width="0.0101%" height="15" fill="rgb(253,140,32)" fg:x="26353" fg:w="5"/><text x="53.6351%" y="255.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="53.3729%" y="277" width="0.0243%" height="15" fill="rgb(216,56,42)" fg:x="26347" fg:w="12"/><text x="53.6229%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="53.3992%" y="277" width="0.0101%" height="15" fill="rgb(216,184,14)" fg:x="26360" fg:w="5"/><text x="53.6492%" y="287.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (33 samples, 0.07%)</title><rect x="53.3486%" y="293" width="0.0669%" height="15" fill="rgb(237,187,27)" fg:x="26335" fg:w="33"/><text x="53.5986%" y="303.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (35 samples, 0.07%)</title><rect x="53.3466%" y="309" width="0.0709%" height="15" fill="rgb(219,65,3)" fg:x="26334" fg:w="35"/><text x="53.5966%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="53.4175%" y="309" width="0.0142%" height="15" fill="rgb(245,83,25)" fg:x="26369" fg:w="7"/><text x="53.6675%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="53.4175%" y="293" width="0.0142%" height="15" fill="rgb(214,205,45)" fg:x="26369" fg:w="7"/><text x="53.6675%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (7 samples, 0.01%)</title><rect x="53.4924%" y="213" width="0.0142%" height="15" fill="rgb(241,20,18)" fg:x="26406" fg:w="7"/><text x="53.7424%" y="223.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (26 samples, 0.05%)</title><rect x="53.4560%" y="261" width="0.0527%" height="15" fill="rgb(232,163,23)" fg:x="26388" fg:w="26"/><text x="53.7060%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (11 samples, 0.02%)</title><rect x="53.4863%" y="245" width="0.0223%" height="15" fill="rgb(214,5,46)" fg:x="26403" fg:w="11"/><text x="53.7363%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.02%)</title><rect x="53.4904%" y="229" width="0.0182%" height="15" fill="rgb(229,78,17)" fg:x="26405" fg:w="9"/><text x="53.7404%" y="239.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (43 samples, 0.09%)</title><rect x="53.4357%" y="277" width="0.0871%" height="15" fill="rgb(248,89,10)" fg:x="26378" fg:w="43"/><text x="53.6857%" y="287.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (45 samples, 0.09%)</title><rect x="53.4337%" y="293" width="0.0912%" height="15" fill="rgb(248,54,15)" fg:x="26377" fg:w="45"/><text x="53.6837%" y="303.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (48 samples, 0.10%)</title><rect x="53.4317%" y="309" width="0.0972%" height="15" fill="rgb(223,116,6)" fg:x="26376" fg:w="48"/><text x="53.6817%" y="319.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (97 samples, 0.20%)</title><rect x="53.3445%" y="325" width="0.1965%" height="15" fill="rgb(205,125,38)" fg:x="26333" fg:w="97"/><text x="53.5945%" y="335.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::s_expr::SExpr::create (6 samples, 0.01%)</title><rect x="53.5410%" y="325" width="0.0122%" height="15" fill="rgb(251,78,38)" fg:x="26430" fg:w="6"/><text x="53.7910%" y="335.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (126 samples, 0.26%)</title><rect x="53.3142%" y="341" width="0.2552%" height="15" fill="rgb(253,78,28)" fg:x="26318" fg:w="126"/><text x="53.5642%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="53.5775%" y="341" width="0.0101%" height="15" fill="rgb(209,120,3)" fg:x="26448" fg:w="5"/><text x="53.8275%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (249 samples, 0.50%)</title><rect x="53.0933%" y="357" width="0.5044%" height="15" fill="rgb(238,229,9)" fg:x="26209" fg:w="249"/><text x="53.3433%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (361 samples, 0.73%)</title><rect x="52.8968%" y="373" width="0.7313%" height="15" fill="rgb(253,159,18)" fg:x="26112" fg:w="361"/><text x="53.1468%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.01%)</title><rect x="53.6180%" y="357" width="0.0101%" height="15" fill="rgb(244,42,34)" fg:x="26468" fg:w="5"/><text x="53.8680%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::s_expr::SExpr::create (5 samples, 0.01%)</title><rect x="53.6282%" y="373" width="0.0101%" height="15" fill="rgb(224,8,7)" fg:x="26473" fg:w="5"/><text x="53.8782%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="53.6403%" y="373" width="0.0122%" height="15" fill="rgb(210,201,45)" fg:x="26479" fg:w="6"/><text x="53.8903%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (395 samples, 0.80%)</title><rect x="52.8584%" y="389" width="0.8002%" height="15" fill="rgb(252,185,21)" fg:x="26093" fg:w="395"/><text x="53.1084%" y="399.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (21 samples, 0.04%)</title><rect x="54.9854%" y="357" width="0.0425%" height="15" fill="rgb(223,131,1)" fg:x="27143" fg:w="21"/><text x="55.2354%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (26 samples, 0.05%)</title><rect x="55.0948%" y="325" width="0.0527%" height="15" fill="rgb(245,141,16)" fg:x="27197" fg:w="26"/><text x="55.3448%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.01%)</title><rect x="55.1373%" y="309" width="0.0101%" height="15" fill="rgb(229,55,45)" fg:x="27218" fg:w="5"/><text x="55.3873%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (39 samples, 0.08%)</title><rect x="55.0705%" y="341" width="0.0790%" height="15" fill="rgb(208,92,15)" fg:x="27185" fg:w="39"/><text x="55.3205%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (33 samples, 0.07%)</title><rect x="55.2528%" y="293" width="0.0669%" height="15" fill="rgb(234,185,47)" fg:x="27275" fg:w="33"/><text x="55.5028%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (7 samples, 0.01%)</title><rect x="55.3197%" y="293" width="0.0142%" height="15" fill="rgb(253,104,50)" fg:x="27308" fg:w="7"/><text x="55.5697%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (109 samples, 0.22%)</title><rect x="55.1698%" y="325" width="0.2208%" height="15" fill="rgb(205,70,7)" fg:x="27234" fg:w="109"/><text x="55.4198%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (84 samples, 0.17%)</title><rect x="55.2204%" y="309" width="0.1702%" height="15" fill="rgb(240,178,43)" fg:x="27259" fg:w="84"/><text x="55.4704%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (28 samples, 0.06%)</title><rect x="55.3338%" y="293" width="0.0567%" height="15" fill="rgb(214,112,2)" fg:x="27315" fg:w="28"/><text x="55.5838%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (186 samples, 0.38%)</title><rect x="55.0280%" y="357" width="0.3768%" height="15" fill="rgb(206,46,17)" fg:x="27164" fg:w="186"/><text x="55.2780%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (122 samples, 0.25%)</title><rect x="55.1576%" y="341" width="0.2471%" height="15" fill="rgb(225,220,16)" fg:x="27228" fg:w="122"/><text x="55.4076%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.01%)</title><rect x="55.3906%" y="325" width="0.0142%" height="15" fill="rgb(238,65,40)" fg:x="27343" fg:w="7"/><text x="55.6406%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="55.3926%" y="309" width="0.0122%" height="15" fill="rgb(230,151,21)" fg:x="27344" fg:w="6"/><text x="55.6426%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.01%)</title><rect x="55.4108%" y="357" width="0.0142%" height="15" fill="rgb(218,58,49)" fg:x="27353" fg:w="7"/><text x="55.6608%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (870 samples, 1.76%)</title><rect x="53.6646%" y="373" width="1.7624%" height="15" fill="rgb(219,179,14)" fg:x="26491" fg:w="870"/><text x="53.9146%" y="383.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (20 samples, 0.04%)</title><rect x="55.6519%" y="325" width="0.0405%" height="15" fill="rgb(223,72,1)" fg:x="27472" fg:w="20"/><text x="55.9019%" y="335.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (33 samples, 0.07%)</title><rect x="55.6924%" y="325" width="0.0669%" height="15" fill="rgb(238,126,10)" fg:x="27492" fg:w="33"/><text x="55.9424%" y="335.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (120 samples, 0.24%)</title><rect x="55.5182%" y="341" width="0.2431%" height="15" fill="rgb(224,206,38)" fg:x="27406" fg:w="120"/><text x="55.7682%" y="351.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="55.7734%" y="325" width="0.0101%" height="15" fill="rgb(212,201,54)" fg:x="27532" fg:w="5"/><text x="56.0234%" y="335.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="55.7836%" y="325" width="0.0101%" height="15" fill="rgb(218,154,48)" fg:x="27537" fg:w="5"/><text x="56.0336%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="55.7937%" y="325" width="0.0101%" height="15" fill="rgb(232,93,24)" fg:x="27542" fg:w="5"/><text x="56.0437%" y="335.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (24 samples, 0.05%)</title><rect x="55.7613%" y="341" width="0.0486%" height="15" fill="rgb(245,30,21)" fg:x="27526" fg:w="24"/><text x="56.0113%" y="351.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (175 samples, 0.35%)</title><rect x="55.4574%" y="357" width="0.3545%" height="15" fill="rgb(242,148,29)" fg:x="27376" fg:w="175"/><text x="55.7074%" y="367.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (20 samples, 0.04%)</title><rect x="55.9922%" y="325" width="0.0405%" height="15" fill="rgb(244,153,54)" fg:x="27640" fg:w="20"/><text x="56.2422%" y="335.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (40 samples, 0.08%)</title><rect x="56.0327%" y="325" width="0.0810%" height="15" fill="rgb(252,87,22)" fg:x="27660" fg:w="40"/><text x="56.2827%" y="335.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="56.1340%" y="309" width="0.0162%" height="15" fill="rgb(210,51,29)" fg:x="27710" fg:w="8"/><text x="56.3840%" y="319.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (25 samples, 0.05%)</title><rect x="56.1502%" y="309" width="0.0506%" height="15" fill="rgb(242,136,47)" fg:x="27718" fg:w="25"/><text x="56.4002%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.02%)</title><rect x="56.2009%" y="309" width="0.0162%" height="15" fill="rgb(238,68,4)" fg:x="27743" fg:w="8"/><text x="56.4509%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="56.2009%" y="293" width="0.0162%" height="15" fill="rgb(242,161,30)" fg:x="27743" fg:w="8"/><text x="56.4509%" y="303.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (55 samples, 0.11%)</title><rect x="56.1138%" y="325" width="0.1114%" height="15" fill="rgb(218,58,44)" fg:x="27700" fg:w="55"/><text x="56.3638%" y="335.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (177 samples, 0.36%)</title><rect x="55.8707%" y="341" width="0.3586%" height="15" fill="rgb(252,125,32)" fg:x="27580" fg:w="177"/><text x="56.1207%" y="351.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="56.2718%" y="325" width="0.0101%" height="15" fill="rgb(219,178,0)" fg:x="27778" fg:w="5"/><text x="56.5218%" y="335.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (7 samples, 0.01%)</title><rect x="56.2819%" y="325" width="0.0142%" height="15" fill="rgb(213,152,7)" fg:x="27783" fg:w="7"/><text x="56.5319%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="56.2961%" y="325" width="0.0101%" height="15" fill="rgb(249,109,34)" fg:x="27790" fg:w="5"/><text x="56.5461%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="56.2961%" y="309" width="0.0101%" height="15" fill="rgb(232,96,21)" fg:x="27790" fg:w="5"/><text x="56.5461%" y="319.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (42 samples, 0.09%)</title><rect x="56.2292%" y="341" width="0.0851%" height="15" fill="rgb(228,27,39)" fg:x="27757" fg:w="42"/><text x="56.4792%" y="351.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (250 samples, 0.51%)</title><rect x="55.8119%" y="357" width="0.5064%" height="15" fill="rgb(211,182,52)" fg:x="27551" fg:w="250"/><text x="56.0619%" y="367.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (7 samples, 0.01%)</title><rect x="56.4622%" y="341" width="0.0142%" height="15" fill="rgb(234,178,38)" fg:x="27872" fg:w="7"/><text x="56.7122%" y="351.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (25 samples, 0.05%)</title><rect x="56.5858%" y="325" width="0.0506%" height="15" fill="rgb(221,111,3)" fg:x="27933" fg:w="25"/><text x="56.8358%" y="335.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (36 samples, 0.07%)</title><rect x="56.6364%" y="325" width="0.0729%" height="15" fill="rgb(228,175,21)" fg:x="27958" fg:w="36"/><text x="56.8864%" y="335.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (10 samples, 0.02%)</title><rect x="56.7255%" y="309" width="0.0203%" height="15" fill="rgb(228,174,43)" fg:x="28002" fg:w="10"/><text x="56.9755%" y="319.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (19 samples, 0.04%)</title><rect x="56.7093%" y="325" width="0.0385%" height="15" fill="rgb(211,191,0)" fg:x="27994" fg:w="19"/><text x="56.9593%" y="335.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (135 samples, 0.27%)</title><rect x="56.4764%" y="341" width="0.2735%" height="15" fill="rgb(253,117,3)" fg:x="27879" fg:w="135"/><text x="56.7264%" y="351.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (217 samples, 0.44%)</title><rect x="56.3184%" y="357" width="0.4396%" height="15" fill="rgb(241,127,19)" fg:x="27801" fg:w="217"/><text x="56.5684%" y="367.50"></text></g><g><title>databend-query`common_base::runtime::runtime_tracker::ThreadTracker::alloc (6 samples, 0.01%)</title><rect x="58.1395%" y="309" width="0.0122%" height="15" fill="rgb(218,103,12)" fg:x="28700" fg:w="6"/><text x="58.3895%" y="319.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (22 samples, 0.04%)</title><rect x="58.1517%" y="309" width="0.0446%" height="15" fill="rgb(236,214,43)" fg:x="28706" fg:w="22"/><text x="58.4017%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (22 samples, 0.04%)</title><rect x="58.2591%" y="277" width="0.0446%" height="15" fill="rgb(244,144,19)" fg:x="28759" fg:w="22"/><text x="58.5091%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (37 samples, 0.07%)</title><rect x="58.2347%" y="293" width="0.0750%" height="15" fill="rgb(246,188,10)" fg:x="28747" fg:w="37"/><text x="58.4847%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (31 samples, 0.06%)</title><rect x="58.3968%" y="245" width="0.0628%" height="15" fill="rgb(212,193,33)" fg:x="28827" fg:w="31"/><text x="58.6468%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (10 samples, 0.02%)</title><rect x="58.4596%" y="245" width="0.0203%" height="15" fill="rgb(241,51,29)" fg:x="28858" fg:w="10"/><text x="58.7096%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (115 samples, 0.23%)</title><rect x="58.3239%" y="277" width="0.2330%" height="15" fill="rgb(211,58,19)" fg:x="28791" fg:w="115"/><text x="58.5739%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (98 samples, 0.20%)</title><rect x="58.3583%" y="261" width="0.1985%" height="15" fill="rgb(229,111,26)" fg:x="28808" fg:w="98"/><text x="58.6083%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (38 samples, 0.08%)</title><rect x="58.4799%" y="245" width="0.0770%" height="15" fill="rgb(213,115,40)" fg:x="28868" fg:w="38"/><text x="58.7299%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (133 samples, 0.27%)</title><rect x="58.3117%" y="293" width="0.2694%" height="15" fill="rgb(209,56,44)" fg:x="28785" fg:w="133"/><text x="58.5617%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (12 samples, 0.02%)</title><rect x="58.5568%" y="277" width="0.0243%" height="15" fill="rgb(230,108,32)" fg:x="28906" fg:w="12"/><text x="58.8068%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.01%)</title><rect x="58.5670%" y="261" width="0.0142%" height="15" fill="rgb(216,165,31)" fg:x="28911" fg:w="7"/><text x="58.8170%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (192 samples, 0.39%)</title><rect x="58.1963%" y="309" width="0.3889%" height="15" fill="rgb(218,122,21)" fg:x="28728" fg:w="192"/><text x="58.4463%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (902 samples, 1.83%)</title><rect x="56.7782%" y="325" width="1.8272%" height="15" fill="rgb(223,224,47)" fg:x="28028" fg:w="902"/><text x="57.0282%" y="335.50">d..</text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.02%)</title><rect x="58.7614%" y="277" width="0.0243%" height="15" fill="rgb(238,102,44)" fg:x="29007" fg:w="12"/><text x="59.0114%" y="287.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (25 samples, 0.05%)</title><rect x="58.7858%" y="277" width="0.0506%" height="15" fill="rgb(236,46,40)" fg:x="29019" fg:w="25"/><text x="59.0358%" y="287.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.02%)</title><rect x="58.8668%" y="261" width="0.0203%" height="15" fill="rgb(247,202,50)" fg:x="29059" fg:w="10"/><text x="59.1168%" y="271.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (18 samples, 0.04%)</title><rect x="58.8870%" y="261" width="0.0365%" height="15" fill="rgb(209,99,20)" fg:x="29069" fg:w="18"/><text x="59.1370%" y="271.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (48 samples, 0.10%)</title><rect x="58.8364%" y="277" width="0.0972%" height="15" fill="rgb(252,27,34)" fg:x="29044" fg:w="48"/><text x="59.0864%" y="287.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (123 samples, 0.25%)</title><rect x="58.6885%" y="293" width="0.2492%" height="15" fill="rgb(215,206,23)" fg:x="28971" fg:w="123"/><text x="58.9385%" y="303.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.02%)</title><rect x="58.9579%" y="277" width="0.0203%" height="15" fill="rgb(212,135,36)" fg:x="29104" fg:w="10"/><text x="59.2079%" y="287.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="58.9782%" y="277" width="0.0101%" height="15" fill="rgb(240,189,1)" fg:x="29114" fg:w="5"/><text x="59.2282%" y="287.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (27 samples, 0.05%)</title><rect x="58.9377%" y="293" width="0.0547%" height="15" fill="rgb(242,56,20)" fg:x="29094" fg:w="27"/><text x="59.1877%" y="303.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (173 samples, 0.35%)</title><rect x="58.6480%" y="309" width="0.3505%" height="15" fill="rgb(247,132,33)" fg:x="28951" fg:w="173"/><text x="58.8980%" y="319.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17 samples, 0.03%)</title><rect x="59.1220%" y="277" width="0.0344%" height="15" fill="rgb(208,149,11)" fg:x="29185" fg:w="17"/><text x="59.3720%" y="287.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (33 samples, 0.07%)</title><rect x="59.1565%" y="277" width="0.0669%" height="15" fill="rgb(211,33,11)" fg:x="29202" fg:w="33"/><text x="59.4065%" y="287.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.03%)</title><rect x="59.2719%" y="261" width="0.0263%" height="15" fill="rgb(221,29,38)" fg:x="29259" fg:w="13"/><text x="59.5219%" y="271.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (26 samples, 0.05%)</title><rect x="59.2983%" y="261" width="0.0527%" height="15" fill="rgb(206,182,49)" fg:x="29272" fg:w="26"/><text x="59.5483%" y="271.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (70 samples, 0.14%)</title><rect x="59.2233%" y="277" width="0.1418%" height="15" fill="rgb(216,140,1)" fg:x="29235" fg:w="70"/><text x="59.4733%" y="287.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (167 samples, 0.34%)</title><rect x="59.0309%" y="293" width="0.3383%" height="15" fill="rgb(232,57,40)" fg:x="29140" fg:w="167"/><text x="59.2809%" y="303.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="59.3935%" y="277" width="0.0122%" height="15" fill="rgb(224,186,18)" fg:x="29319" fg:w="6"/><text x="59.6435%" y="287.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (8 samples, 0.02%)</title><rect x="59.4077%" y="277" width="0.0162%" height="15" fill="rgb(215,121,11)" fg:x="29326" fg:w="8"/><text x="59.6577%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="59.4239%" y="277" width="0.0101%" height="15" fill="rgb(245,147,10)" fg:x="29334" fg:w="5"/><text x="59.6739%" y="287.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (35 samples, 0.07%)</title><rect x="59.3692%" y="293" width="0.0709%" height="15" fill="rgb(238,153,13)" fg:x="29307" fg:w="35"/><text x="59.6192%" y="303.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (221 samples, 0.45%)</title><rect x="58.9985%" y="309" width="0.4477%" height="15" fill="rgb(233,108,0)" fg:x="29124" fg:w="221"/><text x="59.2485%" y="319.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="59.6224%" y="277" width="0.0142%" height="15" fill="rgb(212,157,17)" fg:x="29432" fg:w="7"/><text x="59.8724%" y="287.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (25 samples, 0.05%)</title><rect x="59.6366%" y="277" width="0.0506%" height="15" fill="rgb(225,213,38)" fg:x="29439" fg:w="25"/><text x="59.8866%" y="287.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.02%)</title><rect x="59.7095%" y="261" width="0.0182%" height="15" fill="rgb(248,16,11)" fg:x="29475" fg:w="9"/><text x="59.9595%" y="271.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (14 samples, 0.03%)</title><rect x="59.7277%" y="261" width="0.0284%" height="15" fill="rgb(241,33,4)" fg:x="29484" fg:w="14"/><text x="59.9777%" y="271.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (105 samples, 0.21%)</title><rect x="59.5535%" y="293" width="0.2127%" height="15" fill="rgb(222,26,43)" fg:x="29398" fg:w="105"/><text x="59.8035%" y="303.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (39 samples, 0.08%)</title><rect x="59.6872%" y="277" width="0.0790%" height="15" fill="rgb(243,29,36)" fg:x="29464" fg:w="39"/><text x="59.9372%" y="287.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (159 samples, 0.32%)</title><rect x="59.4462%" y="309" width="0.3221%" height="15" fill="rgb(241,9,27)" fg:x="29345" fg:w="159"/><text x="59.6962%" y="319.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (21 samples, 0.04%)</title><rect x="60.6535%" y="261" width="0.0425%" height="15" fill="rgb(205,117,26)" fg:x="29941" fg:w="21"/><text x="60.9035%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.01%)</title><rect x="60.7629%" y="213" width="0.0101%" height="15" fill="rgb(209,80,39)" fg:x="29995" fg:w="5"/><text x="61.0129%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (17 samples, 0.03%)</title><rect x="60.7426%" y="229" width="0.0344%" height="15" fill="rgb(239,155,6)" fg:x="29985" fg:w="17"/><text x="60.9926%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (23 samples, 0.05%)</title><rect x="60.7345%" y="245" width="0.0466%" height="15" fill="rgb(212,104,12)" fg:x="29981" fg:w="23"/><text x="60.9845%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (22 samples, 0.04%)</title><rect x="60.8257%" y="197" width="0.0446%" height="15" fill="rgb(234,204,3)" fg:x="30026" fg:w="22"/><text x="61.0757%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (7 samples, 0.01%)</title><rect x="60.8703%" y="197" width="0.0142%" height="15" fill="rgb(251,218,7)" fg:x="30048" fg:w="7"/><text x="61.1203%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (77 samples, 0.16%)</title><rect x="60.7913%" y="229" width="0.1560%" height="15" fill="rgb(221,81,32)" fg:x="30009" fg:w="77"/><text x="61.0413%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (70 samples, 0.14%)</title><rect x="60.8054%" y="213" width="0.1418%" height="15" fill="rgb(214,152,26)" fg:x="30016" fg:w="70"/><text x="61.0554%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (31 samples, 0.06%)</title><rect x="60.8845%" y="197" width="0.0628%" height="15" fill="rgb(223,22,3)" fg:x="30055" fg:w="31"/><text x="61.1345%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (5 samples, 0.01%)</title><rect x="60.9493%" y="213" width="0.0101%" height="15" fill="rgb(207,174,7)" fg:x="30087" fg:w="5"/><text x="61.1993%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (133 samples, 0.27%)</title><rect x="60.6961%" y="261" width="0.2694%" height="15" fill="rgb(224,19,52)" fg:x="29962" fg:w="133"/><text x="60.9461%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (89 samples, 0.18%)</title><rect x="60.7852%" y="245" width="0.1803%" height="15" fill="rgb(228,24,14)" fg:x="30006" fg:w="89"/><text x="61.0352%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="60.9472%" y="229" width="0.0182%" height="15" fill="rgb(230,153,43)" fg:x="30086" fg:w="9"/><text x="61.1972%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (6 samples, 0.01%)</title><rect x="60.9655%" y="261" width="0.0122%" height="15" fill="rgb(231,106,12)" fg:x="30095" fg:w="6"/><text x="61.2155%" y="271.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (595 samples, 1.21%)</title><rect x="59.7784%" y="277" width="1.2053%" height="15" fill="rgb(215,92,2)" fg:x="29509" fg:w="595"/><text x="60.0284%" y="287.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="61.0506%" y="229" width="0.0122%" height="15" fill="rgb(249,143,25)" fg:x="30137" fg:w="6"/><text x="61.3006%" y="239.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (27 samples, 0.05%)</title><rect x="61.0222%" y="245" width="0.0547%" height="15" fill="rgb(252,7,35)" fg:x="30123" fg:w="27"/><text x="61.2722%" y="255.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (7 samples, 0.01%)</title><rect x="61.0627%" y="229" width="0.0142%" height="15" fill="rgb(216,69,40)" fg:x="30143" fg:w="7"/><text x="61.3127%" y="239.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (41 samples, 0.08%)</title><rect x="60.9979%" y="261" width="0.0831%" height="15" fill="rgb(240,36,33)" fg:x="30111" fg:w="41"/><text x="61.2479%" y="271.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (19 samples, 0.04%)</title><rect x="61.1519%" y="229" width="0.0385%" height="15" fill="rgb(231,128,14)" fg:x="30187" fg:w="19"/><text x="61.4019%" y="239.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (7 samples, 0.01%)</title><rect x="61.2045%" y="213" width="0.0142%" height="15" fill="rgb(245,143,14)" fg:x="30213" fg:w="7"/><text x="61.4545%" y="223.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (66 samples, 0.13%)</title><rect x="61.0911%" y="245" width="0.1337%" height="15" fill="rgb(222,130,28)" fg:x="30157" fg:w="66"/><text x="61.3411%" y="255.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (17 samples, 0.03%)</title><rect x="61.1903%" y="229" width="0.0344%" height="15" fill="rgb(212,10,48)" fg:x="30206" fg:w="17"/><text x="61.4403%" y="239.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (74 samples, 0.15%)</title><rect x="61.0809%" y="261" width="0.1499%" height="15" fill="rgb(254,118,45)" fg:x="30152" fg:w="74"/><text x="61.3309%" y="271.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="61.2856%" y="229" width="0.0162%" height="15" fill="rgb(228,6,45)" fg:x="30253" fg:w="8"/><text x="61.5356%" y="239.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (39 samples, 0.08%)</title><rect x="61.2612%" y="245" width="0.0790%" height="15" fill="rgb(241,18,35)" fg:x="30241" fg:w="39"/><text x="61.5112%" y="255.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (19 samples, 0.04%)</title><rect x="61.3018%" y="229" width="0.0385%" height="15" fill="rgb(227,214,53)" fg:x="30261" fg:w="19"/><text x="61.5518%" y="239.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (56 samples, 0.11%)</title><rect x="61.2309%" y="261" width="0.1134%" height="15" fill="rgb(224,107,51)" fg:x="30226" fg:w="56"/><text x="61.4809%" y="271.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.02%)</title><rect x="61.7373%" y="213" width="0.0162%" height="15" fill="rgb(248,60,28)" fg:x="30476" fg:w="8"/><text x="61.9873%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (12 samples, 0.02%)</title><rect x="61.7677%" y="197" width="0.0243%" height="15" fill="rgb(249,101,23)" fg:x="30491" fg:w="12"/><text x="62.0177%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.02%)</title><rect x="61.7758%" y="181" width="0.0162%" height="15" fill="rgb(228,51,19)" fg:x="30495" fg:w="8"/><text x="62.0258%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (9 samples, 0.02%)</title><rect x="61.8021%" y="149" width="0.0182%" height="15" fill="rgb(213,20,6)" fg:x="30508" fg:w="9"/><text x="62.0521%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (19 samples, 0.04%)</title><rect x="61.7960%" y="181" width="0.0385%" height="15" fill="rgb(212,124,10)" fg:x="30505" fg:w="19"/><text x="62.0460%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (17 samples, 0.03%)</title><rect x="61.8001%" y="165" width="0.0344%" height="15" fill="rgb(248,3,40)" fg:x="30507" fg:w="17"/><text x="62.0501%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (5 samples, 0.01%)</title><rect x="61.8244%" y="149" width="0.0101%" height="15" fill="rgb(223,178,23)" fg:x="30519" fg:w="5"/><text x="62.0744%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (47 samples, 0.10%)</title><rect x="61.7535%" y="213" width="0.0952%" height="15" fill="rgb(240,132,45)" fg:x="30484" fg:w="47"/><text x="62.0035%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (27 samples, 0.05%)</title><rect x="61.7940%" y="197" width="0.0547%" height="15" fill="rgb(245,164,36)" fg:x="30504" fg:w="27"/><text x="62.0440%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.01%)</title><rect x="61.8345%" y="181" width="0.0142%" height="15" fill="rgb(231,188,53)" fg:x="30524" fg:w="7"/><text x="62.0845%" y="191.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (250 samples, 0.51%)</title><rect x="61.3504%" y="229" width="0.5064%" height="15" fill="rgb(237,198,39)" fg:x="30285" fg:w="250"/><text x="61.6004%" y="239.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="61.9297%" y="181" width="0.0101%" height="15" fill="rgb(223,120,35)" fg:x="30571" fg:w="5"/><text x="62.1797%" y="191.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (14 samples, 0.03%)</title><rect x="61.9399%" y="181" width="0.0284%" height="15" fill="rgb(253,107,49)" fg:x="30576" fg:w="14"/><text x="62.1899%" y="191.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (39 samples, 0.08%)</title><rect x="61.9014%" y="197" width="0.0790%" height="15" fill="rgb(216,44,31)" fg:x="30557" fg:w="39"/><text x="62.1514%" y="207.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="61.9682%" y="181" width="0.0122%" height="15" fill="rgb(253,87,21)" fg:x="30590" fg:w="6"/><text x="62.2182%" y="191.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (18 samples, 0.04%)</title><rect x="61.9804%" y="197" width="0.0365%" height="15" fill="rgb(226,18,2)" fg:x="30596" fg:w="18"/><text x="62.2304%" y="207.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (68 samples, 0.14%)</title><rect x="61.8811%" y="213" width="0.1378%" height="15" fill="rgb(216,8,46)" fg:x="30547" fg:w="68"/><text x="62.1311%" y="223.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (29 samples, 0.06%)</title><rect x="62.0310%" y="197" width="0.0587%" height="15" fill="rgb(226,140,39)" fg:x="30621" fg:w="29"/><text x="62.2810%" y="207.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (7 samples, 0.01%)</title><rect x="62.0756%" y="181" width="0.0142%" height="15" fill="rgb(221,194,54)" fg:x="30643" fg:w="7"/><text x="62.3256%" y="191.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="62.1141%" y="181" width="0.0101%" height="15" fill="rgb(213,92,11)" fg:x="30662" fg:w="5"/><text x="62.3641%" y="191.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (12 samples, 0.02%)</title><rect x="62.1242%" y="181" width="0.0243%" height="15" fill="rgb(229,162,46)" fg:x="30667" fg:w="12"/><text x="62.3742%" y="191.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (36 samples, 0.07%)</title><rect x="62.0898%" y="197" width="0.0729%" height="15" fill="rgb(214,111,36)" fg:x="30650" fg:w="36"/><text x="62.3398%" y="207.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (76 samples, 0.15%)</title><rect x="62.0189%" y="213" width="0.1540%" height="15" fill="rgb(207,6,21)" fg:x="30615" fg:w="76"/><text x="62.2689%" y="223.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="62.2255%" y="181" width="0.0122%" height="15" fill="rgb(213,127,38)" fg:x="30717" fg:w="6"/><text x="62.4755%" y="191.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (9 samples, 0.02%)</title><rect x="62.2377%" y="181" width="0.0182%" height="15" fill="rgb(238,118,32)" fg:x="30723" fg:w="9"/><text x="62.4877%" y="191.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="62.2741%" y="165" width="0.0122%" height="15" fill="rgb(240,139,39)" fg:x="30741" fg:w="6"/><text x="62.5241%" y="175.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (13 samples, 0.03%)</title><rect x="62.2863%" y="165" width="0.0263%" height="15" fill="rgb(235,10,37)" fg:x="30747" fg:w="13"/><text x="62.5363%" y="175.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (31 samples, 0.06%)</title><rect x="62.2559%" y="181" width="0.0628%" height="15" fill="rgb(249,171,38)" fg:x="30732" fg:w="31"/><text x="62.5059%" y="191.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (58 samples, 0.12%)</title><rect x="62.2073%" y="197" width="0.1175%" height="15" fill="rgb(242,144,32)" fg:x="30708" fg:w="58"/><text x="62.4573%" y="207.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (78 samples, 0.16%)</title><rect x="62.1728%" y="213" width="0.1580%" height="15" fill="rgb(217,117,21)" fg:x="30691" fg:w="78"/><text x="62.4228%" y="223.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (11 samples, 0.02%)</title><rect x="62.7482%" y="165" width="0.0223%" height="15" fill="rgb(249,87,1)" fg:x="30975" fg:w="11"/><text x="62.9982%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (9 samples, 0.02%)</title><rect x="62.7866%" y="133" width="0.0182%" height="15" fill="rgb(248,196,48)" fg:x="30994" fg:w="9"/><text x="63.0366%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (17 samples, 0.03%)</title><rect x="62.7725%" y="149" width="0.0344%" height="15" fill="rgb(251,206,33)" fg:x="30987" fg:w="17"/><text x="63.0225%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (7 samples, 0.01%)</title><rect x="62.8373%" y="101" width="0.0142%" height="15" fill="rgb(232,141,28)" fg:x="31019" fg:w="7"/><text x="63.0873%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (34 samples, 0.07%)</title><rect x="62.8130%" y="133" width="0.0689%" height="15" fill="rgb(209,167,14)" fg:x="31007" fg:w="34"/><text x="63.0630%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (28 samples, 0.06%)</title><rect x="62.8251%" y="117" width="0.0567%" height="15" fill="rgb(225,11,50)" fg:x="31013" fg:w="28"/><text x="63.0751%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (12 samples, 0.02%)</title><rect x="62.8575%" y="101" width="0.0243%" height="15" fill="rgb(209,50,20)" fg:x="31029" fg:w="12"/><text x="63.1075%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (61 samples, 0.12%)</title><rect x="62.7704%" y="165" width="0.1236%" height="15" fill="rgb(212,17,46)" fg:x="30986" fg:w="61"/><text x="63.0204%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (42 samples, 0.09%)</title><rect x="62.8089%" y="149" width="0.0851%" height="15" fill="rgb(216,101,39)" fg:x="31005" fg:w="42"/><text x="63.0589%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="62.8819%" y="133" width="0.0122%" height="15" fill="rgb(212,228,48)" fg:x="31041" fg:w="6"/><text x="63.1319%" y="143.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (272 samples, 0.55%)</title><rect x="62.3531%" y="181" width="0.5510%" height="15" fill="rgb(250,6,50)" fg:x="30780" fg:w="272"/><text x="62.6031%" y="191.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="62.9447%" y="133" width="0.0101%" height="15" fill="rgb(250,160,48)" fg:x="31072" fg:w="5"/><text x="63.1947%" y="143.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (20 samples, 0.04%)</title><rect x="62.9224%" y="149" width="0.0405%" height="15" fill="rgb(244,216,33)" fg:x="31061" fg:w="20"/><text x="63.1724%" y="159.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="62.9629%" y="149" width="0.0122%" height="15" fill="rgb(207,157,5)" fg:x="31081" fg:w="6"/><text x="63.2129%" y="159.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (33 samples, 0.07%)</title><rect x="62.9102%" y="165" width="0.0669%" height="15" fill="rgb(228,199,8)" fg:x="31055" fg:w="33"/><text x="63.1602%" y="175.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (9 samples, 0.02%)</title><rect x="62.9953%" y="133" width="0.0182%" height="15" fill="rgb(227,80,20)" fg:x="31097" fg:w="9"/><text x="63.2453%" y="143.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (20 samples, 0.04%)</title><rect x="62.9811%" y="149" width="0.0405%" height="15" fill="rgb(222,9,33)" fg:x="31090" fg:w="20"/><text x="63.2311%" y="159.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="63.0318%" y="133" width="0.0101%" height="15" fill="rgb(239,44,28)" fg:x="31115" fg:w="5"/><text x="63.2818%" y="143.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (34 samples, 0.07%)</title><rect x="62.9771%" y="165" width="0.0689%" height="15" fill="rgb(249,187,43)" fg:x="31088" fg:w="34"/><text x="63.2271%" y="175.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (12 samples, 0.02%)</title><rect x="63.0216%" y="149" width="0.0243%" height="15" fill="rgb(216,141,28)" fg:x="31110" fg:w="12"/><text x="63.2716%" y="159.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.02%)</title><rect x="63.0784%" y="149" width="0.0203%" height="15" fill="rgb(230,154,53)" fg:x="31138" fg:w="10"/><text x="63.3284%" y="159.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="63.0885%" y="133" width="0.0101%" height="15" fill="rgb(227,82,4)" fg:x="31143" fg:w="5"/><text x="63.3385%" y="143.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (27 samples, 0.05%)</title><rect x="63.0459%" y="165" width="0.0547%" height="15" fill="rgb(220,107,16)" fg:x="31122" fg:w="27"/><text x="63.2959%" y="175.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (9 samples, 0.02%)</title><rect x="63.3478%" y="117" width="0.0182%" height="15" fill="rgb(207,187,2)" fg:x="31271" fg:w="9"/><text x="63.5978%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.02%)</title><rect x="63.3721%" y="101" width="0.0182%" height="15" fill="rgb(210,162,52)" fg:x="31283" fg:w="9"/><text x="63.6221%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (7 samples, 0.01%)</title><rect x="63.3761%" y="85" width="0.0142%" height="15" fill="rgb(217,216,49)" fg:x="31285" fg:w="7"/><text x="63.6261%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (5 samples, 0.01%)</title><rect x="63.4227%" y="53" width="0.0101%" height="15" fill="rgb(218,146,49)" fg:x="31308" fg:w="5"/><text x="63.6727%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (24 samples, 0.05%)</title><rect x="63.3924%" y="85" width="0.0486%" height="15" fill="rgb(216,55,40)" fg:x="31293" fg:w="24"/><text x="63.6424%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (17 samples, 0.03%)</title><rect x="63.4065%" y="69" width="0.0344%" height="15" fill="rgb(208,196,21)" fg:x="31300" fg:w="17"/><text x="63.6565%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (39 samples, 0.08%)</title><rect x="63.3660%" y="117" width="0.0790%" height="15" fill="rgb(242,117,42)" fg:x="31280" fg:w="39"/><text x="63.6160%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (26 samples, 0.05%)</title><rect x="63.3924%" y="101" width="0.0527%" height="15" fill="rgb(210,11,23)" fg:x="31293" fg:w="26"/><text x="63.6424%" y="111.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (172 samples, 0.35%)</title><rect x="63.1027%" y="133" width="0.3484%" height="15" fill="rgb(217,110,2)" fg:x="31150" fg:w="172"/><text x="63.3527%" y="143.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (181 samples, 0.37%)</title><rect x="63.1006%" y="165" width="0.3667%" height="15" fill="rgb(229,77,54)" fg:x="31149" fg:w="181"/><text x="63.3506%" y="175.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (181 samples, 0.37%)</title><rect x="63.1006%" y="149" width="0.3667%" height="15" fill="rgb(218,53,16)" fg:x="31149" fg:w="181"/><text x="63.3506%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.01%)</title><rect x="63.4551%" y="133" width="0.0122%" height="15" fill="rgb(215,38,13)" fg:x="31324" fg:w="6"/><text x="63.7051%" y="143.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (9 samples, 0.02%)</title><rect x="63.4714%" y="165" width="0.0182%" height="15" fill="rgb(235,42,18)" fg:x="31332" fg:w="9"/><text x="63.7214%" y="175.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::update_statistic (7 samples, 0.01%)</title><rect x="63.4896%" y="165" width="0.0142%" height="15" fill="rgb(219,66,54)" fg:x="31341" fg:w="7"/><text x="63.7396%" y="175.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.02%)</title><rect x="63.5119%" y="149" width="0.0223%" height="15" fill="rgb(222,205,4)" fg:x="31352" fg:w="11"/><text x="63.7619%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="63.5200%" y="133" width="0.0142%" height="15" fill="rgb(227,213,46)" fg:x="31356" fg:w="7"/><text x="63.7700%" y="143.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (16 samples, 0.03%)</title><rect x="63.5038%" y="165" width="0.0324%" height="15" fill="rgb(250,145,42)" fg:x="31348" fg:w="16"/><text x="63.7538%" y="175.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.01%)</title><rect x="63.5362%" y="165" width="0.0142%" height="15" fill="rgb(219,15,2)" fg:x="31364" fg:w="7"/><text x="63.7862%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.01%)</title><rect x="63.5564%" y="165" width="0.0122%" height="15" fill="rgb(231,181,52)" fg:x="31374" fg:w="6"/><text x="63.8064%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_small (6 samples, 0.01%)</title><rect x="63.5686%" y="165" width="0.0122%" height="15" fill="rgb(235,1,42)" fg:x="31380" fg:w="6"/><text x="63.8186%" y="175.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (341 samples, 0.69%)</title><rect x="62.9041%" y="181" width="0.6908%" height="15" fill="rgb(249,88,27)" fg:x="31052" fg:w="341"/><text x="63.1541%" y="191.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (643 samples, 1.30%)</title><rect x="62.3349%" y="213" width="1.3026%" height="15" fill="rgb(235,145,16)" fg:x="30771" fg:w="643"/><text x="62.5849%" y="223.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (642 samples, 1.30%)</title><rect x="62.3369%" y="197" width="1.3005%" height="15" fill="rgb(237,114,19)" fg:x="30772" fg:w="642"/><text x="62.5869%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.02%)</title><rect x="63.6152%" y="181" width="0.0223%" height="15" fill="rgb(238,51,50)" fg:x="31403" fg:w="11"/><text x="63.8652%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="63.6516%" y="165" width="0.0122%" height="15" fill="rgb(205,194,25)" fg:x="31421" fg:w="6"/><text x="63.9016%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.01%)</title><rect x="63.6537%" y="149" width="0.0101%" height="15" fill="rgb(215,203,17)" fg:x="31422" fg:w="5"/><text x="63.9037%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.01%)</title><rect x="63.6537%" y="133" width="0.0101%" height="15" fill="rgb(233,112,49)" fg:x="31422" fg:w="5"/><text x="63.9037%" y="143.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.02%)</title><rect x="63.6496%" y="181" width="0.0162%" height="15" fill="rgb(241,130,26)" fg:x="31420" fg:w="8"/><text x="63.8996%" y="191.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 0.02%)</title><rect x="63.6435%" y="197" width="0.0243%" height="15" fill="rgb(252,223,19)" fg:x="31417" fg:w="12"/><text x="63.8935%" y="207.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (6 samples, 0.01%)</title><rect x="63.6679%" y="197" width="0.0122%" height="15" fill="rgb(211,95,25)" fg:x="31429" fg:w="6"/><text x="63.9179%" y="207.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (23 samples, 0.05%)</title><rect x="63.6415%" y="213" width="0.0466%" height="15" fill="rgb(251,182,27)" fg:x="31416" fg:w="23"/><text x="63.8915%" y="223.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (6 samples, 0.01%)</title><rect x="63.6982%" y="197" width="0.0122%" height="15" fill="rgb(238,24,4)" fg:x="31444" fg:w="6"/><text x="63.9482%" y="207.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::update_statistic (13 samples, 0.03%)</title><rect x="63.6881%" y="213" width="0.0263%" height="15" fill="rgb(224,220,25)" fg:x="31439" fg:w="13"/><text x="63.9381%" y="223.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="63.7307%" y="181" width="0.0101%" height="15" fill="rgb(239,133,26)" fg:x="31460" fg:w="5"/><text x="63.9807%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="63.7408%" y="181" width="0.0142%" height="15" fill="rgb(211,94,48)" fg:x="31465" fg:w="7"/><text x="63.9908%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.01%)</title><rect x="63.7408%" y="165" width="0.0142%" height="15" fill="rgb(239,87,6)" fg:x="31465" fg:w="7"/><text x="63.9908%" y="175.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (17 samples, 0.03%)</title><rect x="63.7226%" y="197" width="0.0344%" height="15" fill="rgb(227,62,0)" fg:x="31456" fg:w="17"/><text x="63.9726%" y="207.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (23 samples, 0.05%)</title><rect x="63.7144%" y="213" width="0.0466%" height="15" fill="rgb(211,226,4)" fg:x="31452" fg:w="23"/><text x="63.9644%" y="223.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.02%)</title><rect x="63.7631%" y="213" width="0.0182%" height="15" fill="rgb(253,38,52)" fg:x="31476" fg:w="9"/><text x="64.0131%" y="223.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.01%)</title><rect x="63.7833%" y="213" width="0.0142%" height="15" fill="rgb(229,126,40)" fg:x="31486" fg:w="7"/><text x="64.0333%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (6 samples, 0.01%)</title><rect x="63.8097%" y="197" width="0.0122%" height="15" fill="rgb(229,165,44)" fg:x="31499" fg:w="6"/><text x="64.0597%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.03%)</title><rect x="63.7995%" y="213" width="0.0344%" height="15" fill="rgb(247,95,47)" fg:x="31494" fg:w="17"/><text x="64.0495%" y="223.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (992 samples, 2.01%)</title><rect x="61.8568%" y="229" width="2.0096%" height="15" fill="rgb(216,140,30)" fg:x="30535" fg:w="992"/><text x="62.1068%" y="239.50">d..</text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (1,276 samples, 2.58%)</title><rect x="61.3463%" y="261" width="2.5849%" height="15" fill="rgb(246,214,8)" fg:x="30283" fg:w="1276"/><text x="61.5963%" y="271.50">da..</text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (1,276 samples, 2.58%)</title><rect x="61.3463%" y="245" width="2.5849%" height="15" fill="rgb(227,224,15)" fg:x="30283" fg:w="1276"/><text x="61.5963%" y="255.50">da..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (18 samples, 0.04%)</title><rect x="63.8947%" y="229" width="0.0365%" height="15" fill="rgb(233,175,4)" fg:x="31541" fg:w="18"/><text x="64.1447%" y="239.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.02%)</title><rect x="63.9312%" y="245" width="0.0162%" height="15" fill="rgb(221,66,45)" fg:x="31559" fg:w="8"/><text x="64.1812%" y="255.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.01%)</title><rect x="63.9332%" y="229" width="0.0142%" height="15" fill="rgb(221,178,18)" fg:x="31560" fg:w="7"/><text x="64.1832%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="63.9353%" y="213" width="0.0122%" height="15" fill="rgb(213,81,29)" fg:x="31561" fg:w="6"/><text x="64.1853%" y="223.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (14 samples, 0.03%)</title><rect x="63.9312%" y="261" width="0.0284%" height="15" fill="rgb(220,89,49)" fg:x="31559" fg:w="14"/><text x="64.1812%" y="271.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::update_statistic (7 samples, 0.01%)</title><rect x="63.9596%" y="261" width="0.0142%" height="15" fill="rgb(227,60,33)" fg:x="31573" fg:w="7"/><text x="64.2096%" y="271.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (6 samples, 0.01%)</title><rect x="63.9737%" y="261" width="0.0122%" height="15" fill="rgb(205,113,12)" fg:x="31580" fg:w="6"/><text x="64.2237%" y="271.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (16 samples, 0.03%)</title><rect x="63.9879%" y="261" width="0.0324%" height="15" fill="rgb(211,32,1)" fg:x="31587" fg:w="16"/><text x="64.2379%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="64.0284%" y="261" width="0.0101%" height="15" fill="rgb(246,2,12)" fg:x="31607" fg:w="5"/><text x="64.2784%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="64.0467%" y="261" width="0.0101%" height="15" fill="rgb(243,37,27)" fg:x="31616" fg:w="5"/><text x="64.2967%" y="271.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (1,526 samples, 3.09%)</title><rect x="60.9837%" y="277" width="3.0913%" height="15" fill="rgb(248,211,31)" fg:x="30104" fg:w="1526"/><text x="61.2337%" y="287.50">dat..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.01%)</title><rect x="64.0629%" y="261" width="0.0122%" height="15" fill="rgb(242,146,47)" fg:x="31624" fg:w="6"/><text x="64.3129%" y="271.50"></text></g><g><title>databend-query`common_base::runtime::runtime_tracker::ThreadTracker::alloc (5 samples, 0.01%)</title><rect x="64.0872%" y="277" width="0.0101%" height="15" fill="rgb(206,70,20)" fg:x="31636" fg:w="5"/><text x="64.3372%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="64.0973%" y="277" width="0.0142%" height="15" fill="rgb(215,10,51)" fg:x="31641" fg:w="7"/><text x="64.3473%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (18 samples, 0.04%)</title><rect x="64.1135%" y="277" width="0.0365%" height="15" fill="rgb(243,178,53)" fg:x="31649" fg:w="18"/><text x="64.3635%" y="287.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (2,165 samples, 4.39%)</title><rect x="59.7723%" y="309" width="4.3858%" height="15" fill="rgb(233,221,20)" fg:x="29506" fg:w="2165"/><text x="60.0223%" y="319.50">datab..</text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (2,164 samples, 4.38%)</title><rect x="59.7743%" y="293" width="4.3838%" height="15" fill="rgb(218,95,35)" fg:x="29507" fg:w="2164"/><text x="60.0243%" y="303.50">datab..</text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.01%)</title><rect x="64.1642%" y="277" width="0.0142%" height="15" fill="rgb(229,13,5)" fg:x="31674" fg:w="7"/><text x="64.4142%" y="287.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="64.1783%" y="277" width="0.0101%" height="15" fill="rgb(252,164,30)" fg:x="31681" fg:w="5"/><text x="64.4283%" y="287.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (13 samples, 0.03%)</title><rect x="64.1642%" y="293" width="0.0263%" height="15" fill="rgb(232,68,36)" fg:x="31674" fg:w="13"/><text x="64.4142%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="64.1946%" y="261" width="0.0101%" height="15" fill="rgb(219,59,54)" fg:x="31689" fg:w="5"/><text x="64.4446%" y="271.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (26 samples, 0.05%)</title><rect x="64.1621%" y="309" width="0.0527%" height="15" fill="rgb(250,92,33)" fg:x="31673" fg:w="26"/><text x="64.4121%" y="319.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (12 samples, 0.02%)</title><rect x="64.1905%" y="293" width="0.0243%" height="15" fill="rgb(229,162,54)" fg:x="31687" fg:w="12"/><text x="64.4405%" y="303.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.02%)</title><rect x="64.1946%" y="277" width="0.0203%" height="15" fill="rgb(244,114,52)" fg:x="31689" fg:w="10"/><text x="64.4446%" y="287.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.02%)</title><rect x="64.2391%" y="293" width="0.0203%" height="15" fill="rgb(212,211,43)" fg:x="31711" fg:w="10"/><text x="64.4891%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="64.2493%" y="277" width="0.0101%" height="15" fill="rgb(226,147,8)" fg:x="31716" fg:w="5"/><text x="64.4993%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.01%)</title><rect x="64.2493%" y="261" width="0.0101%" height="15" fill="rgb(226,23,13)" fg:x="31716" fg:w="5"/><text x="64.4993%" y="271.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (19 samples, 0.04%)</title><rect x="64.2229%" y="309" width="0.0385%" height="15" fill="rgb(240,63,4)" fg:x="31703" fg:w="19"/><text x="64.4729%" y="319.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (17 samples, 0.03%)</title><rect x="64.2614%" y="309" width="0.0344%" height="15" fill="rgb(221,1,32)" fg:x="31722" fg:w="17"/><text x="64.5114%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.03%)</title><rect x="64.3161%" y="309" width="0.0344%" height="15" fill="rgb(242,117,10)" fg:x="31749" fg:w="17"/><text x="64.5661%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.01%)</title><rect x="64.3404%" y="293" width="0.0101%" height="15" fill="rgb(249,172,44)" fg:x="31761" fg:w="5"/><text x="64.5904%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.01%)</title><rect x="64.3404%" y="277" width="0.0101%" height="15" fill="rgb(244,46,45)" fg:x="31761" fg:w="5"/><text x="64.5904%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_small (6 samples, 0.01%)</title><rect x="64.3505%" y="309" width="0.0122%" height="15" fill="rgb(206,43,17)" fg:x="31766" fg:w="6"/><text x="64.6005%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="64.3627%" y="309" width="0.0182%" height="15" fill="rgb(239,218,39)" fg:x="31772" fg:w="9"/><text x="64.6127%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.02%)</title><rect x="64.3627%" y="293" width="0.0182%" height="15" fill="rgb(208,169,54)" fg:x="31772" fg:w="9"/><text x="64.6127%" y="303.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (2,861 samples, 5.80%)</title><rect x="58.6055%" y="325" width="5.7957%" height="15" fill="rgb(247,25,42)" fg:x="28930" fg:w="2861"/><text x="58.8555%" y="335.50">databen..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.02%)</title><rect x="64.3850%" y="309" width="0.0162%" height="15" fill="rgb(226,23,31)" fg:x="31783" fg:w="8"/><text x="64.6350%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (37 samples, 0.07%)</title><rect x="64.4518%" y="325" width="0.0750%" height="15" fill="rgb(247,16,28)" fg:x="31816" fg:w="37"/><text x="64.7018%" y="335.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (3,834 samples, 7.77%)</title><rect x="56.7640%" y="341" width="7.7668%" height="15" fill="rgb(231,147,38)" fg:x="28021" fg:w="3834"/><text x="57.0140%" y="351.50">databend-qu..</text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (3,836 samples, 7.77%)</title><rect x="56.7620%" y="357" width="7.7708%" height="15" fill="rgb(253,81,48)" fg:x="28020" fg:w="3836"/><text x="57.0120%" y="367.50">databend-qu..</text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="64.5450%" y="325" width="0.0101%" height="15" fill="rgb(249,222,43)" fg:x="31862" fg:w="5"/><text x="64.7950%" y="335.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 0.02%)</title><rect x="64.5410%" y="341" width="0.0243%" height="15" fill="rgb(221,3,27)" fg:x="31860" fg:w="12"/><text x="64.7910%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (7 samples, 0.01%)</title><rect x="64.5653%" y="341" width="0.0142%" height="15" fill="rgb(228,180,5)" fg:x="31872" fg:w="7"/><text x="64.8153%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (25 samples, 0.05%)</title><rect x="64.5410%" y="357" width="0.0506%" height="15" fill="rgb(227,131,42)" fg:x="31860" fg:w="25"/><text x="64.7910%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::update_statistic (15 samples, 0.03%)</title><rect x="64.5916%" y="357" width="0.0304%" height="15" fill="rgb(212,3,39)" fg:x="31885" fg:w="15"/><text x="64.8416%" y="367.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="64.6281%" y="341" width="0.0101%" height="15" fill="rgb(226,45,5)" fg:x="31903" fg:w="5"/><text x="64.8781%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="64.6483%" y="325" width="0.0142%" height="15" fill="rgb(215,167,45)" fg:x="31913" fg:w="7"/><text x="64.8983%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.01%)</title><rect x="64.6504%" y="309" width="0.0122%" height="15" fill="rgb(250,218,53)" fg:x="31914" fg:w="6"/><text x="64.9004%" y="319.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (13 samples, 0.03%)</title><rect x="64.6382%" y="341" width="0.0263%" height="15" fill="rgb(207,140,0)" fg:x="31908" fg:w="13"/><text x="64.8882%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (25 samples, 0.05%)</title><rect x="64.6220%" y="357" width="0.0506%" height="15" fill="rgb(238,133,51)" fg:x="31900" fg:w="25"/><text x="64.8720%" y="367.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (27 samples, 0.05%)</title><rect x="64.6787%" y="357" width="0.0547%" height="15" fill="rgb(218,203,53)" fg:x="31928" fg:w="27"/><text x="64.9287%" y="367.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (14 samples, 0.03%)</title><rect x="64.7375%" y="357" width="0.0284%" height="15" fill="rgb(226,184,25)" fg:x="31957" fg:w="14"/><text x="64.9875%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="64.7658%" y="357" width="0.0101%" height="15" fill="rgb(231,121,21)" fg:x="31971" fg:w="5"/><text x="65.0158%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.02%)</title><rect x="64.7800%" y="357" width="0.0223%" height="15" fill="rgb(251,14,34)" fg:x="31978" fg:w="11"/><text x="65.0300%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_small (7 samples, 0.01%)</title><rect x="64.8023%" y="357" width="0.0142%" height="15" fill="rgb(249,193,11)" fg:x="31989" fg:w="7"/><text x="65.0523%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="64.8165%" y="357" width="0.0182%" height="15" fill="rgb(220,172,37)" fg:x="31996" fg:w="9"/><text x="65.0665%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="64.8225%" y="341" width="0.0122%" height="15" fill="rgb(231,229,43)" fg:x="31999" fg:w="6"/><text x="65.0725%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (4,664 samples, 9.45%)</title><rect x="55.4270%" y="373" width="9.4482%" height="15" fill="rgb(250,161,5)" fg:x="27361" fg:w="4664"/><text x="55.6770%" y="383.50">databend-query..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.03%)</title><rect x="64.8489%" y="357" width="0.0263%" height="15" fill="rgb(218,225,18)" fg:x="32012" fg:w="13"/><text x="65.0989%" y="367.50"></text></g><g><title>databend-query`DYLD-STUB$$memcpy (5 samples, 0.01%)</title><rect x="64.8752%" y="373" width="0.0101%" height="15" fill="rgb(245,45,42)" fg:x="32025" fg:w="5"/><text x="65.1252%" y="383.50"></text></g><g><title>databend-query`common_base::runtime::runtime_tracker::ThreadTracker::alloc (10 samples, 0.02%)</title><rect x="64.8853%" y="373" width="0.0203%" height="15" fill="rgb(211,115,1)" fg:x="32030" fg:w="10"/><text x="65.1353%" y="383.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="64.9076%" y="373" width="0.0101%" height="15" fill="rgb(248,133,52)" fg:x="32041" fg:w="5"/><text x="65.1576%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="64.9178%" y="373" width="0.0142%" height="15" fill="rgb(238,100,21)" fg:x="32046" fg:w="7"/><text x="65.1678%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (33 samples, 0.07%)</title><rect x="64.9441%" y="373" width="0.0669%" height="15" fill="rgb(247,144,11)" fg:x="32059" fg:w="33"/><text x="65.1941%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (5,605 samples, 11.35%)</title><rect x="53.6585%" y="389" width="11.3544%" height="15" fill="rgb(206,164,16)" fg:x="26488" fg:w="5605"/><text x="53.9085%" y="399.50">databend-query`co..</text></g><g><title>libsystem_malloc.dylib`free (35 samples, 0.07%)</title><rect x="65.4829%" y="357" width="0.0709%" height="15" fill="rgb(222,34,3)" fg:x="32325" fg:w="35"/><text x="65.7329%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (13 samples, 0.03%)</title><rect x="65.5275%" y="341" width="0.0263%" height="15" fill="rgb(248,82,4)" fg:x="32347" fg:w="13"/><text x="65.7775%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (12 samples, 0.02%)</title><rect x="65.5538%" y="357" width="0.0243%" height="15" fill="rgb(228,81,46)" fg:x="32360" fg:w="12"/><text x="65.8038%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (261 samples, 0.53%)</title><rect x="65.0515%" y="373" width="0.5287%" height="15" fill="rgb(227,67,47)" fg:x="32112" fg:w="261"/><text x="65.3015%" y="383.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (36 samples, 0.07%)</title><rect x="65.5802%" y="373" width="0.0729%" height="15" fill="rgb(215,93,53)" fg:x="32373" fg:w="36"/><text x="65.8302%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_size (9 samples, 0.02%)</title><rect x="65.7017%" y="357" width="0.0182%" height="15" fill="rgb(248,194,39)" fg:x="32433" fg:w="9"/><text x="65.9517%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (52 samples, 0.11%)</title><rect x="65.6592%" y="373" width="0.1053%" height="15" fill="rgb(215,5,19)" fg:x="32412" fg:w="52"/><text x="65.9092%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (22 samples, 0.04%)</title><rect x="65.7200%" y="357" width="0.0446%" height="15" fill="rgb(226,215,51)" fg:x="32442" fg:w="22"/><text x="65.9700%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (14 samples, 0.03%)</title><rect x="65.7362%" y="341" width="0.0284%" height="15" fill="rgb(225,56,26)" fg:x="32450" fg:w="14"/><text x="65.9862%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (36 samples, 0.07%)</title><rect x="65.8820%" y="357" width="0.0729%" height="15" fill="rgb(222,75,29)" fg:x="32522" fg:w="36"/><text x="66.1320%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (5 samples, 0.01%)</title><rect x="65.9610%" y="357" width="0.0101%" height="15" fill="rgb(236,139,6)" fg:x="32561" fg:w="5"/><text x="66.2110%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_small (166 samples, 0.34%)</title><rect x="65.7645%" y="373" width="0.3363%" height="15" fill="rgb(223,137,36)" fg:x="32464" fg:w="166"/><text x="66.0145%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (64 samples, 0.13%)</title><rect x="65.9712%" y="357" width="0.1296%" height="15" fill="rgb(226,99,2)" fg:x="32566" fg:w="64"/><text x="66.2212%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.02%)</title><rect x="66.1008%" y="373" width="0.0243%" height="15" fill="rgb(206,133,23)" fg:x="32630" fg:w="12"/><text x="66.3508%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.02%)</title><rect x="66.1049%" y="357" width="0.0203%" height="15" fill="rgb(243,173,15)" fg:x="32632" fg:w="10"/><text x="66.3549%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (6 samples, 0.01%)</title><rect x="66.1251%" y="373" width="0.0122%" height="15" fill="rgb(228,69,28)" fg:x="32642" fg:w="6"/><text x="66.3751%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (6 samples, 0.01%)</title><rect x="66.1373%" y="373" width="0.0122%" height="15" fill="rgb(212,51,22)" fg:x="32648" fg:w="6"/><text x="66.3873%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (568 samples, 1.15%)</title><rect x="65.0211%" y="389" width="1.1506%" height="15" fill="rgb(227,113,0)" fg:x="32097" fg:w="568"/><text x="65.2711%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (31 samples, 0.06%)</title><rect x="66.7389%" y="325" width="0.0628%" height="15" fill="rgb(252,84,27)" fg:x="32945" fg:w="31"/><text x="66.9889%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (14 samples, 0.03%)</title><rect x="66.7734%" y="309" width="0.0284%" height="15" fill="rgb(223,145,39)" fg:x="32962" fg:w="14"/><text x="67.0234%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.01%)</title><rect x="66.8017%" y="325" width="0.0101%" height="15" fill="rgb(239,219,30)" fg:x="32976" fg:w="5"/><text x="67.0517%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (10 samples, 0.02%)</title><rect x="66.8118%" y="325" width="0.0203%" height="15" fill="rgb(224,196,39)" fg:x="32981" fg:w="10"/><text x="67.0618%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (309 samples, 0.63%)</title><rect x="66.2122%" y="341" width="0.6260%" height="15" fill="rgb(205,35,43)" fg:x="32685" fg:w="309"/><text x="66.4622%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (11 samples, 0.02%)</title><rect x="66.8382%" y="341" width="0.0223%" height="15" fill="rgb(228,201,21)" fg:x="32994" fg:w="11"/><text x="67.0882%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (5 samples, 0.01%)</title><rect x="66.8605%" y="341" width="0.0101%" height="15" fill="rgb(237,118,16)" fg:x="33005" fg:w="5"/><text x="67.1105%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_size (6 samples, 0.01%)</title><rect x="66.9152%" y="325" width="0.0122%" height="15" fill="rgb(241,17,19)" fg:x="33032" fg:w="6"/><text x="67.1652%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (40 samples, 0.08%)</title><rect x="66.8706%" y="341" width="0.0810%" height="15" fill="rgb(214,10,25)" fg:x="33010" fg:w="40"/><text x="67.1206%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (12 samples, 0.02%)</title><rect x="66.9273%" y="325" width="0.0243%" height="15" fill="rgb(238,37,29)" fg:x="33038" fg:w="12"/><text x="67.1773%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (6 samples, 0.01%)</title><rect x="66.9395%" y="309" width="0.0122%" height="15" fill="rgb(253,83,25)" fg:x="33044" fg:w="6"/><text x="67.1895%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (23 samples, 0.05%)</title><rect x="67.0043%" y="325" width="0.0466%" height="15" fill="rgb(234,192,12)" fg:x="33076" fg:w="23"/><text x="67.2543%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (5 samples, 0.01%)</title><rect x="67.0549%" y="325" width="0.0101%" height="15" fill="rgb(241,216,45)" fg:x="33101" fg:w="5"/><text x="67.3049%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_small (109 samples, 0.22%)</title><rect x="66.9516%" y="341" width="0.2208%" height="15" fill="rgb(242,22,33)" fg:x="33050" fg:w="109"/><text x="67.2016%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (53 samples, 0.11%)</title><rect x="67.0651%" y="325" width="0.1074%" height="15" fill="rgb(231,105,49)" fg:x="33106" fg:w="53"/><text x="67.3151%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="67.1724%" y="341" width="0.0101%" height="15" fill="rgb(218,204,15)" fg:x="33159" fg:w="5"/><text x="67.4224%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (6 samples, 0.01%)</title><rect x="67.1826%" y="341" width="0.0122%" height="15" fill="rgb(235,138,41)" fg:x="33164" fg:w="6"/><text x="67.4326%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.01%)</title><rect x="67.1947%" y="341" width="0.0101%" height="15" fill="rgb(246,0,9)" fg:x="33170" fg:w="5"/><text x="67.4447%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (522 samples, 1.06%)</title><rect x="66.1798%" y="357" width="1.0575%" height="15" fill="rgb(210,74,4)" fg:x="32669" fg:w="522"/><text x="66.4298%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (10 samples, 0.02%)</title><rect x="67.2170%" y="341" width="0.0203%" height="15" fill="rgb(250,60,41)" fg:x="33181" fg:w="10"/><text x="67.4670%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.04%)</title><rect x="67.6201%" y="293" width="0.0446%" height="15" fill="rgb(220,115,12)" fg:x="33380" fg:w="22"/><text x="67.8701%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (7 samples, 0.01%)</title><rect x="67.6505%" y="277" width="0.0142%" height="15" fill="rgb(237,100,13)" fg:x="33395" fg:w="7"/><text x="67.9005%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (7 samples, 0.01%)</title><rect x="67.6687%" y="293" width="0.0142%" height="15" fill="rgb(213,55,26)" fg:x="33404" fg:w="7"/><text x="67.9187%" y="303.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (203 samples, 0.41%)</title><rect x="67.2757%" y="309" width="0.4112%" height="15" fill="rgb(216,17,4)" fg:x="33210" fg:w="203"/><text x="67.5257%" y="319.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (17 samples, 0.03%)</title><rect x="67.6870%" y="309" width="0.0344%" height="15" fill="rgb(220,153,47)" fg:x="33413" fg:w="17"/><text x="67.9370%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_size (6 samples, 0.01%)</title><rect x="67.7498%" y="293" width="0.0122%" height="15" fill="rgb(215,131,9)" fg:x="33444" fg:w="6"/><text x="67.9998%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (31 samples, 0.06%)</title><rect x="67.7234%" y="309" width="0.0628%" height="15" fill="rgb(233,46,42)" fg:x="33431" fg:w="31"/><text x="67.9734%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (12 samples, 0.02%)</title><rect x="67.7619%" y="293" width="0.0243%" height="15" fill="rgb(226,86,7)" fg:x="33450" fg:w="12"/><text x="68.0119%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.02%)</title><rect x="67.7700%" y="277" width="0.0162%" height="15" fill="rgb(239,226,21)" fg:x="33454" fg:w="8"/><text x="68.0200%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (12 samples, 0.02%)</title><rect x="67.8328%" y="293" width="0.0243%" height="15" fill="rgb(244,137,22)" fg:x="33485" fg:w="12"/><text x="68.0828%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_small (82 samples, 0.17%)</title><rect x="67.7862%" y="309" width="0.1661%" height="15" fill="rgb(211,139,35)" fg:x="33462" fg:w="82"/><text x="68.0362%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (41 samples, 0.08%)</title><rect x="67.8693%" y="293" width="0.0831%" height="15" fill="rgb(214,62,50)" fg:x="33503" fg:w="41"/><text x="68.1193%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="67.9524%" y="309" width="0.0182%" height="15" fill="rgb(212,113,44)" fg:x="33544" fg:w="9"/><text x="68.2024%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="67.9584%" y="293" width="0.0122%" height="15" fill="rgb(226,150,43)" fg:x="33547" fg:w="6"/><text x="68.2084%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (6 samples, 0.01%)</title><rect x="67.9706%" y="309" width="0.0122%" height="15" fill="rgb(250,71,37)" fg:x="33553" fg:w="6"/><text x="68.2206%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (5 samples, 0.01%)</title><rect x="67.9888%" y="309" width="0.0101%" height="15" fill="rgb(219,76,19)" fg:x="33562" fg:w="5"/><text x="68.2388%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (7 samples, 0.01%)</title><rect x="68.0050%" y="309" width="0.0142%" height="15" fill="rgb(250,39,11)" fg:x="33570" fg:w="7"/><text x="68.2550%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (381 samples, 0.77%)</title><rect x="67.2494%" y="325" width="0.7718%" height="15" fill="rgb(230,64,31)" fg:x="33197" fg:w="381"/><text x="67.4994%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.01%)</title><rect x="68.2198%" y="245" width="0.0101%" height="15" fill="rgb(208,222,23)" fg:x="33676" fg:w="5"/><text x="68.4698%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.03%)</title><rect x="68.2035%" y="261" width="0.0284%" height="15" fill="rgb(227,125,18)" fg:x="33668" fg:w="14"/><text x="68.4535%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.01%)</title><rect x="68.2339%" y="261" width="0.0101%" height="15" fill="rgb(234,210,9)" fg:x="33683" fg:w="5"/><text x="68.4839%" y="271.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (106 samples, 0.21%)</title><rect x="68.0334%" y="277" width="0.2147%" height="15" fill="rgb(217,127,24)" fg:x="33584" fg:w="106"/><text x="68.2834%" y="287.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (15 samples, 0.03%)</title><rect x="68.2481%" y="277" width="0.0304%" height="15" fill="rgb(239,141,48)" fg:x="33690" fg:w="15"/><text x="68.4981%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_size (5 samples, 0.01%)</title><rect x="68.2886%" y="261" width="0.0101%" height="15" fill="rgb(227,109,8)" fg:x="33710" fg:w="5"/><text x="68.5386%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (15 samples, 0.03%)</title><rect x="68.2785%" y="277" width="0.0304%" height="15" fill="rgb(235,184,23)" fg:x="33705" fg:w="15"/><text x="68.5285%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.01%)</title><rect x="68.2988%" y="261" width="0.0101%" height="15" fill="rgb(227,226,48)" fg:x="33715" fg:w="5"/><text x="68.5488%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_small (23 samples, 0.05%)</title><rect x="68.3089%" y="277" width="0.0466%" height="15" fill="rgb(206,150,11)" fg:x="33720" fg:w="23"/><text x="68.5589%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (12 samples, 0.02%)</title><rect x="68.3312%" y="261" width="0.0243%" height="15" fill="rgb(254,2,33)" fg:x="33731" fg:w="12"/><text x="68.5812%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="68.3555%" y="277" width="0.0142%" height="15" fill="rgb(243,160,20)" fg:x="33743" fg:w="7"/><text x="68.6055%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="68.3595%" y="261" width="0.0101%" height="15" fill="rgb(218,208,30)" fg:x="33745" fg:w="5"/><text x="68.6095%" y="271.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (177 samples, 0.36%)</title><rect x="68.0253%" y="293" width="0.3586%" height="15" fill="rgb(224,120,49)" fg:x="33580" fg:w="177"/><text x="68.2753%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (6 samples, 0.01%)</title><rect x="68.5682%" y="213" width="0.0122%" height="15" fill="rgb(246,12,2)" fg:x="33848" fg:w="6"/><text x="68.8182%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.03%)</title><rect x="68.5479%" y="229" width="0.0344%" height="15" fill="rgb(236,117,3)" fg:x="33838" fg:w="17"/><text x="68.7979%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.01%)</title><rect x="68.5824%" y="229" width="0.0101%" height="15" fill="rgb(216,128,52)" fg:x="33855" fg:w="5"/><text x="68.8324%" y="239.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (101 samples, 0.20%)</title><rect x="68.3919%" y="245" width="0.2046%" height="15" fill="rgb(246,145,19)" fg:x="33761" fg:w="101"/><text x="68.6419%" y="255.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (10 samples, 0.02%)</title><rect x="68.5965%" y="245" width="0.0203%" height="15" fill="rgb(222,11,46)" fg:x="33862" fg:w="10"/><text x="68.8465%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.03%)</title><rect x="68.6209%" y="245" width="0.0263%" height="15" fill="rgb(245,82,36)" fg:x="33874" fg:w="13"/><text x="68.8709%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (5 samples, 0.01%)</title><rect x="68.6654%" y="229" width="0.0101%" height="15" fill="rgb(250,73,51)" fg:x="33896" fg:w="5"/><text x="68.9154%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_small (21 samples, 0.04%)</title><rect x="68.6472%" y="245" width="0.0425%" height="15" fill="rgb(221,189,23)" fg:x="33887" fg:w="21"/><text x="68.8972%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (5 samples, 0.01%)</title><rect x="68.6796%" y="229" width="0.0101%" height="15" fill="rgb(210,33,7)" fg:x="33903" fg:w="5"/><text x="68.9296%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="68.6897%" y="245" width="0.0101%" height="15" fill="rgb(210,107,22)" fg:x="33908" fg:w="5"/><text x="68.9397%" y="255.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (158 samples, 0.32%)</title><rect x="68.3899%" y="261" width="0.3201%" height="15" fill="rgb(222,116,37)" fg:x="33760" fg:w="158"/><text x="68.6399%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.03%)</title><rect x="68.8093%" y="197" width="0.0263%" height="15" fill="rgb(254,17,48)" fg:x="33967" fg:w="13"/><text x="69.0593%" y="207.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (59 samples, 0.12%)</title><rect x="68.7221%" y="213" width="0.1195%" height="15" fill="rgb(224,36,32)" fg:x="33924" fg:w="59"/><text x="68.9721%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.03%)</title><rect x="68.8457%" y="213" width="0.0284%" height="15" fill="rgb(232,90,46)" fg:x="33985" fg:w="14"/><text x="69.0957%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_small (23 samples, 0.05%)</title><rect x="68.8741%" y="213" width="0.0466%" height="15" fill="rgb(241,66,40)" fg:x="33999" fg:w="23"/><text x="69.1241%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (9 samples, 0.02%)</title><rect x="68.9024%" y="197" width="0.0182%" height="15" fill="rgb(249,184,29)" fg:x="34013" fg:w="9"/><text x="69.1524%" y="207.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (113 samples, 0.23%)</title><rect x="68.7181%" y="229" width="0.2289%" height="15" fill="rgb(231,181,1)" fg:x="33922" fg:w="113"/><text x="68.9681%" y="239.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::scan::Scan&gt; (7 samples, 0.01%)</title><rect x="68.9531%" y="213" width="0.0142%" height="15" fill="rgb(224,94,2)" fg:x="34038" fg:w="7"/><text x="69.2031%" y="223.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_expression::values::Scalar&gt; (11 samples, 0.02%)</title><rect x="68.9693%" y="197" width="0.0223%" height="15" fill="rgb(229,170,15)" fg:x="34046" fg:w="11"/><text x="69.2193%" y="207.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (19 samples, 0.04%)</title><rect x="68.9673%" y="213" width="0.0385%" height="15" fill="rgb(240,127,35)" fg:x="34045" fg:w="19"/><text x="69.2173%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.01%)</title><rect x="68.9936%" y="197" width="0.0122%" height="15" fill="rgb(248,196,34)" fg:x="34058" fg:w="6"/><text x="69.2436%" y="207.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (36 samples, 0.07%)</title><rect x="68.9470%" y="229" width="0.0729%" height="15" fill="rgb(236,137,7)" fg:x="34035" fg:w="36"/><text x="69.1970%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.02%)</title><rect x="69.0280%" y="229" width="0.0182%" height="15" fill="rgb(235,127,16)" fg:x="34075" fg:w="9"/><text x="69.2780%" y="239.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (167 samples, 0.34%)</title><rect x="68.7120%" y="245" width="0.3383%" height="15" fill="rgb(250,192,54)" fg:x="33919" fg:w="167"/><text x="68.9620%" y="255.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::binder::bind_context::ColumnBinding&gt; (7 samples, 0.01%)</title><rect x="69.0544%" y="229" width="0.0142%" height="15" fill="rgb(218,98,20)" fg:x="34088" fg:w="7"/><text x="69.3044%" y="239.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (10 samples, 0.02%)</title><rect x="69.0523%" y="245" width="0.0203%" height="15" fill="rgb(230,176,47)" fg:x="34087" fg:w="10"/><text x="69.3023%" y="255.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_expression::values::Scalar&gt; (7 samples, 0.01%)</title><rect x="69.0807%" y="229" width="0.0142%" height="15" fill="rgb(244,2,33)" fg:x="34101" fg:w="7"/><text x="69.3307%" y="239.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (15 samples, 0.03%)</title><rect x="69.0746%" y="245" width="0.0304%" height="15" fill="rgb(231,100,17)" fg:x="34098" fg:w="15"/><text x="69.3246%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="69.1131%" y="245" width="0.0101%" height="15" fill="rgb(245,23,12)" fg:x="34117" fg:w="5"/><text x="69.3631%" y="255.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (207 samples, 0.42%)</title><rect x="68.7100%" y="261" width="0.4193%" height="15" fill="rgb(249,55,22)" fg:x="33918" fg:w="207"/><text x="68.9600%" y="271.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (379 samples, 0.77%)</title><rect x="68.3859%" y="277" width="0.7678%" height="15" fill="rgb(207,134,9)" fg:x="33758" fg:w="379"/><text x="68.6359%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.01%)</title><rect x="69.1577%" y="245" width="0.0122%" height="15" fill="rgb(218,134,0)" fg:x="34139" fg:w="6"/><text x="69.4077%" y="255.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::binder::bind_context::ColumnBinding&gt; (8 samples, 0.02%)</title><rect x="69.1577%" y="261" width="0.0162%" height="15" fill="rgb(213,212,33)" fg:x="34139" fg:w="8"/><text x="69.4077%" y="271.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (19 samples, 0.04%)</title><rect x="69.1557%" y="277" width="0.0385%" height="15" fill="rgb(252,106,18)" fg:x="34138" fg:w="19"/><text x="69.4057%" y="287.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (407 samples, 0.82%)</title><rect x="68.3838%" y="293" width="0.8245%" height="15" fill="rgb(208,126,42)" fg:x="33757" fg:w="407"/><text x="68.6338%" y="303.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (593 samples, 1.20%)</title><rect x="68.0212%" y="309" width="1.2013%" height="15" fill="rgb(246,175,29)" fg:x="33578" fg:w="593"/><text x="68.2712%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_expression::values::Scalar&gt; (5 samples, 0.01%)</title><rect x="69.2225%" y="309" width="0.0101%" height="15" fill="rgb(215,13,50)" fg:x="34171" fg:w="5"/><text x="69.4725%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (10 samples, 0.02%)</title><rect x="69.2326%" y="309" width="0.0203%" height="15" fill="rgb(216,172,15)" fg:x="34176" fg:w="10"/><text x="69.4826%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::scan::Scan&gt; (5 samples, 0.01%)</title><rect x="69.2529%" y="309" width="0.0101%" height="15" fill="rgb(212,103,13)" fg:x="34186" fg:w="5"/><text x="69.5029%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_expression::values::Scalar&gt; (29 samples, 0.06%)</title><rect x="69.2671%" y="293" width="0.0587%" height="15" fill="rgb(231,171,36)" fg:x="34193" fg:w="29"/><text x="69.5171%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.01%)</title><rect x="69.3258%" y="293" width="0.0122%" height="15" fill="rgb(250,123,20)" fg:x="34222" fg:w="6"/><text x="69.5758%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.02%)</title><rect x="69.3380%" y="293" width="0.0162%" height="15" fill="rgb(212,53,50)" fg:x="34228" fg:w="8"/><text x="69.5880%" y="303.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (50 samples, 0.10%)</title><rect x="69.2630%" y="309" width="0.1013%" height="15" fill="rgb(243,54,12)" fg:x="34191" fg:w="50"/><text x="69.5130%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.01%)</title><rect x="69.3542%" y="293" width="0.0101%" height="15" fill="rgb(234,101,34)" fg:x="34236" fg:w="5"/><text x="69.6042%" y="303.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (672 samples, 1.36%)</title><rect x="68.0212%" y="325" width="1.3613%" height="15" fill="rgb(254,67,22)" fg:x="33578" fg:w="672"/><text x="68.2712%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.03%)</title><rect x="69.3886%" y="325" width="0.0263%" height="15" fill="rgb(250,35,47)" fg:x="34253" fg:w="13"/><text x="69.6386%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_small (5 samples, 0.01%)</title><rect x="69.4150%" y="325" width="0.0101%" height="15" fill="rgb(226,126,38)" fg:x="34266" fg:w="5"/><text x="69.6650%" y="335.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (1,083 samples, 2.19%)</title><rect x="67.2373%" y="341" width="2.1939%" height="15" fill="rgb(216,138,53)" fg:x="33191" fg:w="1083"/><text x="67.4873%" y="351.50">d..</text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.02%)</title><rect x="69.4514%" y="325" width="0.0182%" height="15" fill="rgb(246,199,43)" fg:x="34284" fg:w="9"/><text x="69.7014%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (18 samples, 0.04%)</title><rect x="69.4372%" y="341" width="0.0365%" height="15" fill="rgb(232,125,11)" fg:x="34277" fg:w="18"/><text x="69.6872%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_expression::values::Scalar&gt; (19 samples, 0.04%)</title><rect x="69.4859%" y="325" width="0.0385%" height="15" fill="rgb(218,219,45)" fg:x="34301" fg:w="19"/><text x="69.7359%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.02%)</title><rect x="69.5243%" y="325" width="0.0162%" height="15" fill="rgb(216,102,54)" fg:x="34320" fg:w="8"/><text x="69.7743%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.02%)</title><rect x="69.5406%" y="325" width="0.0203%" height="15" fill="rgb(250,228,7)" fg:x="34328" fg:w="10"/><text x="69.7906%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (6 samples, 0.01%)</title><rect x="69.5628%" y="325" width="0.0122%" height="15" fill="rgb(226,125,25)" fg:x="34339" fg:w="6"/><text x="69.8128%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (48 samples, 0.10%)</title><rect x="69.4798%" y="341" width="0.0972%" height="15" fill="rgb(224,165,27)" fg:x="34298" fg:w="48"/><text x="69.7298%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (1,167 samples, 2.36%)</title><rect x="67.2373%" y="357" width="2.3641%" height="15" fill="rgb(233,86,3)" fg:x="33191" fg:w="1167"/><text x="67.4873%" y="367.50">da..</text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="69.6115%" y="357" width="0.0101%" height="15" fill="rgb(228,116,20)" fg:x="34363" fg:w="5"/><text x="69.8615%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_small (8 samples, 0.02%)</title><rect x="69.6216%" y="357" width="0.0162%" height="15" fill="rgb(209,192,17)" fg:x="34368" fg:w="8"/><text x="69.8716%" y="367.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (1,717 samples, 3.48%)</title><rect x="66.1737%" y="373" width="3.4782%" height="15" fill="rgb(224,88,34)" fg:x="32666" fg:w="1717"/><text x="66.4237%" y="383.50">dat..</text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.01%)</title><rect x="69.6581%" y="341" width="0.0142%" height="15" fill="rgb(233,38,6)" fg:x="34386" fg:w="7"/><text x="69.9081%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::binder::bind_context::ColumnBinding&gt; (11 samples, 0.02%)</title><rect x="69.6540%" y="357" width="0.0223%" height="15" fill="rgb(212,59,30)" fg:x="34384" fg:w="11"/><text x="69.9040%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (17 samples, 0.03%)</title><rect x="69.6540%" y="373" width="0.0344%" height="15" fill="rgb(213,80,3)" fg:x="34384" fg:w="17"/><text x="69.9040%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (1,741 samples, 3.53%)</title><rect x="66.1717%" y="389" width="3.5269%" height="15" fill="rgb(251,178,7)" fg:x="32665" fg:w="1741"/><text x="66.4217%" y="399.50">dat..</text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="69.7067%" y="389" width="0.0101%" height="15" fill="rgb(213,154,26)" fg:x="34410" fg:w="5"/><text x="69.9567%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_small (10 samples, 0.02%)</title><rect x="69.7168%" y="389" width="0.0203%" height="15" fill="rgb(238,165,49)" fg:x="34415" fg:w="10"/><text x="69.9668%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (6 samples, 0.01%)</title><rect x="69.7249%" y="373" width="0.0122%" height="15" fill="rgb(248,91,46)" fg:x="34419" fg:w="6"/><text x="69.9749%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::join_node::JoinNode::cardinality (8,339 samples, 16.89%)</title><rect x="52.8523%" y="405" width="16.8929%" height="15" fill="rgb(244,21,52)" fg:x="26090" fg:w="8339"/><text x="53.1023%" y="415.50">databend-query`common_sql:..</text></g><g><title>databend-query`std::alloc::System::grow_impl (5 samples, 0.01%)</title><rect x="69.7472%" y="341" width="0.0101%" height="15" fill="rgb(247,122,20)" fg:x="34430" fg:w="5"/><text x="69.9972%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`realloc (5 samples, 0.01%)</title><rect x="69.7472%" y="325" width="0.0101%" height="15" fill="rgb(218,27,9)" fg:x="34430" fg:w="5"/><text x="69.9972%" y="335.50"></text></g><g><title>databend-query`__rg_realloc (6 samples, 0.01%)</title><rect x="69.7472%" y="357" width="0.0122%" height="15" fill="rgb(246,7,6)" fg:x="34430" fg:w="6"/><text x="69.9972%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::util::union (8 samples, 0.02%)</title><rect x="69.7452%" y="405" width="0.0162%" height="15" fill="rgb(227,135,54)" fg:x="34429" fg:w="8"/><text x="69.9952%" y="415.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (7 samples, 0.01%)</title><rect x="69.7472%" y="389" width="0.0142%" height="15" fill="rgb(247,14,11)" fg:x="34430" fg:w="7"/><text x="69.9972%" y="399.50"></text></g><g><title>databend-query`alloc::raw_vec::finish_grow (7 samples, 0.01%)</title><rect x="69.7472%" y="373" width="0.0142%" height="15" fill="rgb(206,149,34)" fg:x="34430" fg:w="7"/><text x="69.9972%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::binder::bind_context::ColumnBinding&gt; (5 samples, 0.01%)</title><rect x="69.7634%" y="389" width="0.0101%" height="15" fill="rgb(227,228,4)" fg:x="34438" fg:w="5"/><text x="70.0134%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(common_sql::planner::plans::scalar_expr::ScalarExpr,common_sql::planner::plans::scalar_expr::ScalarExpr)&gt;&gt; (9 samples, 0.02%)</title><rect x="69.7634%" y="405" width="0.0182%" height="15" fill="rgb(238,218,28)" fg:x="34438" fg:w="9"/><text x="70.0134%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::binder::bind_context::ColumnBinding&gt; (5 samples, 0.01%)</title><rect x="69.7857%" y="373" width="0.0101%" height="15" fill="rgb(252,86,40)" fg:x="34449" fg:w="5"/><text x="70.0357%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(common_sql::planner::plans::scalar_expr::ScalarExpr,common_sql::planner::plans::scalar_expr::ScalarExpr)&gt;&gt; (11 samples, 0.02%)</title><rect x="69.7857%" y="389" width="0.0223%" height="15" fill="rgb(251,225,11)" fg:x="34449" fg:w="11"/><text x="70.0357%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(common_sql::planner::plans::scalar_expr::ScalarExpr,common_sql::planner::plans::scalar_expr::ScalarExpr)&gt;&gt; (8 samples, 0.02%)</title><rect x="69.8080%" y="373" width="0.0162%" height="15" fill="rgb(206,46,49)" fg:x="34460" fg:w="8"/><text x="70.0580%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(common_sql::planner::plans::scalar_expr::ScalarExpr,common_sql::planner::plans::scalar_expr::ScalarExpr)&gt;&gt; (7 samples, 0.01%)</title><rect x="69.8323%" y="341" width="0.0142%" height="15" fill="rgb(245,128,24)" fg:x="34472" fg:w="7"/><text x="70.0823%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::binder::bind_context::ColumnBinding&gt; (5 samples, 0.01%)</title><rect x="69.8485%" y="309" width="0.0101%" height="15" fill="rgb(219,177,34)" fg:x="34480" fg:w="5"/><text x="70.0985%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(common_sql::planner::plans::scalar_expr::ScalarExpr,common_sql::planner::plans::scalar_expr::ScalarExpr)&gt;&gt; (10 samples, 0.02%)</title><rect x="69.8485%" y="325" width="0.0203%" height="15" fill="rgb(218,60,48)" fg:x="34480" fg:w="10"/><text x="70.0985%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (8 samples, 0.02%)</title><rect x="69.8687%" y="325" width="0.0162%" height="15" fill="rgb(221,11,5)" fg:x="34490" fg:w="8"/><text x="70.1187%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (23 samples, 0.05%)</title><rect x="69.8485%" y="341" width="0.0466%" height="15" fill="rgb(220,148,13)" fg:x="34480" fg:w="23"/><text x="70.0985%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (38 samples, 0.08%)</title><rect x="69.8302%" y="357" width="0.0770%" height="15" fill="rgb(210,16,3)" fg:x="34471" fg:w="38"/><text x="70.0802%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (45 samples, 0.09%)</title><rect x="69.8242%" y="373" width="0.0912%" height="15" fill="rgb(236,80,2)" fg:x="34468" fg:w="45"/><text x="70.0742%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (61 samples, 0.12%)</title><rect x="69.8080%" y="389" width="0.1236%" height="15" fill="rgb(239,129,19)" fg:x="34460" fg:w="61"/><text x="70.0580%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (83 samples, 0.17%)</title><rect x="69.7816%" y="405" width="0.1681%" height="15" fill="rgb(220,106,35)" fg:x="34447" fg:w="83"/><text x="70.0316%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::emit_csg_cmp (8,568 samples, 17.36%)</title><rect x="52.6274%" y="421" width="17.3568%" height="15" fill="rgb(252,139,45)" fg:x="25979" fg:w="8568"/><text x="52.8774%" y="431.50">databend-query`common_sql::..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (11 samples, 0.02%)</title><rect x="69.9842%" y="421" width="0.0223%" height="15" fill="rgb(229,8,36)" fg:x="34547" fg:w="11"/><text x="70.2342%" y="431.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::query_graph::QueryGraph::neighbors (11 samples, 0.02%)</title><rect x="69.9842%" y="405" width="0.0223%" height="15" fill="rgb(230,126,33)" fg:x="34547" fg:w="11"/><text x="70.2342%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::join_relation::RelationSetTree::get_relation_set_by_index (6 samples, 0.01%)</title><rect x="70.0065%" y="421" width="0.0122%" height="15" fill="rgb(239,140,21)" fg:x="34558" fg:w="6"/><text x="70.2565%" y="431.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="70.0207%" y="389" width="0.0101%" height="15" fill="rgb(254,104,9)" fg:x="34565" fg:w="5"/><text x="70.2707%" y="399.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::query_graph::QueryGraph::is_connected (7 samples, 0.01%)</title><rect x="70.0186%" y="421" width="0.0142%" height="15" fill="rgb(239,52,14)" fg:x="34564" fg:w="7"/><text x="70.2686%" y="431.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="70.0207%" y="405" width="0.0122%" height="15" fill="rgb(208,227,44)" fg:x="34565" fg:w="6"/><text x="70.2707%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::query_graph::QueryGraph::neighbors (14 samples, 0.03%)</title><rect x="70.0328%" y="421" width="0.0284%" height="15" fill="rgb(246,18,19)" fg:x="34571" fg:w="14"/><text x="70.2828%" y="431.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (8,616 samples, 17.45%)</title><rect x="52.6213%" y="437" width="17.4540%" height="15" fill="rgb(235,228,25)" fg:x="25976" fg:w="8616"/><text x="52.8713%" y="447.50">databend-query`common_sql::..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::join_relation::RelationSetTree::get_relation_set_by_index (8 samples, 0.02%)</title><rect x="70.0754%" y="437" width="0.0162%" height="15" fill="rgb(240,156,20)" fg:x="34592" fg:w="8"/><text x="70.3254%" y="447.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="70.0936%" y="405" width="0.0142%" height="15" fill="rgb(224,8,20)" fg:x="34601" fg:w="7"/><text x="70.3436%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::query_graph::QueryGraph::is_connected (11 samples, 0.02%)</title><rect x="70.0916%" y="437" width="0.0223%" height="15" fill="rgb(214,12,52)" fg:x="34600" fg:w="11"/><text x="70.3416%" y="447.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="70.0936%" y="421" width="0.0203%" height="15" fill="rgb(211,220,47)" fg:x="34601" fg:w="10"/><text x="70.3436%" y="431.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (14,572 samples, 29.52%)</title><rect x="40.6207%" y="453" width="29.5195%" height="15" fill="rgb(250,173,5)" fg:x="20052" fg:w="14572"/><text x="40.8707%" y="463.50">databend-query`common_sql::planner::optimizer::h..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::query_graph::QueryGraph::is_connected (5 samples, 0.01%)</title><rect x="70.1422%" y="453" width="0.0101%" height="15" fill="rgb(250,125,52)" fg:x="34625" fg:w="5"/><text x="70.3922%" y="463.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (16,648 samples, 33.72%)</title><rect x="36.4415%" y="469" width="33.7250%" height="15" fill="rgb(209,133,18)" fg:x="17989" fg:w="16648"/><text x="36.6915%" y="479.50">databend-query`common_sql::planner::optimizer::hyper_dp..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::emit_csg (17,309 samples, 35.06%)</title><rect x="35.1086%" y="549" width="35.0640%" height="15" fill="rgb(216,173,22)" fg:x="17331" fg:w="17309"/><text x="35.3586%" y="559.50">databend-query`common_sql::planner::optimizer::hyper_dp::..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (17,306 samples, 35.06%)</title><rect x="35.1147%" y="533" width="35.0579%" height="15" fill="rgb(205,3,22)" fg:x="17334" fg:w="17306"/><text x="35.3647%" y="543.50">databend-query`common_sql::planner::optimizer::hyper_dp::..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (17,302 samples, 35.05%)</title><rect x="35.1228%" y="517" width="35.0498%" height="15" fill="rgb(248,22,20)" fg:x="17338" fg:w="17302"/><text x="35.3728%" y="527.50">databend-query`common_sql::planner::optimizer::hyper_dp::..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (17,288 samples, 35.02%)</title><rect x="35.1511%" y="501" width="35.0215%" height="15" fill="rgb(233,6,29)" fg:x="17352" fg:w="17288"/><text x="35.4011%" y="511.50">databend-query`common_sql::planner::optimizer::hyper_dp::..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (17,198 samples, 34.84%)</title><rect x="35.3334%" y="485" width="34.8392%" height="15" fill="rgb(240,22,54)" fg:x="17442" fg:w="17198"/><text x="35.5834%" y="495.50">databend-query`common_sql::planner::optimizer::hyper_dp::..</text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (5 samples, 0.01%)</title><rect x="70.1929%" y="421" width="0.0101%" height="15" fill="rgb(231,133,32)" fg:x="34650" fg:w="5"/><text x="70.4429%" y="431.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (5 samples, 0.01%)</title><rect x="70.1929%" y="405" width="0.0101%" height="15" fill="rgb(248,193,4)" fg:x="34650" fg:w="5"/><text x="70.4429%" y="415.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (8 samples, 0.02%)</title><rect x="70.1888%" y="437" width="0.0162%" height="15" fill="rgb(211,178,46)" fg:x="34648" fg:w="8"/><text x="70.4388%" y="447.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (10 samples, 0.02%)</title><rect x="70.1868%" y="453" width="0.0203%" height="15" fill="rgb(224,5,42)" fg:x="34647" fg:w="10"/><text x="70.4368%" y="463.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::join_node::JoinNode::cardinality (15 samples, 0.03%)</title><rect x="70.1848%" y="469" width="0.0304%" height="15" fill="rgb(239,176,25)" fg:x="34646" fg:w="15"/><text x="70.4348%" y="479.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::emit_csg_cmp (16 samples, 0.03%)</title><rect x="70.1848%" y="485" width="0.0324%" height="15" fill="rgb(245,187,50)" fg:x="34646" fg:w="16"/><text x="70.4348%" y="495.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (13 samples, 0.03%)</title><rect x="70.2273%" y="421" width="0.0263%" height="15" fill="rgb(248,24,15)" fg:x="34667" fg:w="13"/><text x="70.4773%" y="431.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (5 samples, 0.01%)</title><rect x="70.2597%" y="405" width="0.0101%" height="15" fill="rgb(205,166,13)" fg:x="34683" fg:w="5"/><text x="70.5097%" y="415.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="70.2759%" y="373" width="0.0162%" height="15" fill="rgb(208,114,23)" fg:x="34691" fg:w="8"/><text x="70.5259%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="70.3063%" y="325" width="0.0182%" height="15" fill="rgb(239,127,18)" fg:x="34706" fg:w="9"/><text x="70.5563%" y="335.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (15 samples, 0.03%)</title><rect x="70.3043%" y="357" width="0.0304%" height="15" fill="rgb(219,154,28)" fg:x="34705" fg:w="15"/><text x="70.5543%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (15 samples, 0.03%)</title><rect x="70.3043%" y="341" width="0.0304%" height="15" fill="rgb(225,157,23)" fg:x="34705" fg:w="15"/><text x="70.5543%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (5 samples, 0.01%)</title><rect x="70.3245%" y="325" width="0.0101%" height="15" fill="rgb(219,8,6)" fg:x="34715" fg:w="5"/><text x="70.5745%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (25 samples, 0.05%)</title><rect x="70.2921%" y="373" width="0.0506%" height="15" fill="rgb(212,47,6)" fg:x="34699" fg:w="25"/><text x="70.5421%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (36 samples, 0.07%)</title><rect x="70.2739%" y="405" width="0.0729%" height="15" fill="rgb(224,190,4)" fg:x="34690" fg:w="36"/><text x="70.5239%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (36 samples, 0.07%)</title><rect x="70.2739%" y="389" width="0.0729%" height="15" fill="rgb(239,183,29)" fg:x="34690" fg:w="36"/><text x="70.5239%" y="399.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (50 samples, 0.10%)</title><rect x="70.2536%" y="421" width="0.1013%" height="15" fill="rgb(213,57,7)" fg:x="34680" fg:w="50"/><text x="70.5036%" y="431.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (65 samples, 0.13%)</title><rect x="70.2273%" y="437" width="0.1317%" height="15" fill="rgb(216,148,1)" fg:x="34667" fg:w="65"/><text x="70.4773%" y="447.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (5 samples, 0.01%)</title><rect x="70.3590%" y="437" width="0.0101%" height="15" fill="rgb(236,182,29)" fg:x="34732" fg:w="5"/><text x="70.6090%" y="447.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (6 samples, 0.01%)</title><rect x="70.3691%" y="405" width="0.0122%" height="15" fill="rgb(244,120,48)" fg:x="34737" fg:w="6"/><text x="70.6191%" y="415.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (9 samples, 0.02%)</title><rect x="70.3812%" y="389" width="0.0182%" height="15" fill="rgb(206,71,34)" fg:x="34743" fg:w="9"/><text x="70.6312%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (5 samples, 0.01%)</title><rect x="70.3894%" y="373" width="0.0101%" height="15" fill="rgb(242,32,6)" fg:x="34747" fg:w="5"/><text x="70.6394%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::join_node::JoinNode::cardinality (87 samples, 0.18%)</title><rect x="70.2253%" y="453" width="0.1762%" height="15" fill="rgb(241,35,3)" fg:x="34666" fg:w="87"/><text x="70.4753%" y="463.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (16 samples, 0.03%)</title><rect x="70.3691%" y="437" width="0.0324%" height="15" fill="rgb(222,62,19)" fg:x="34737" fg:w="16"/><text x="70.6191%" y="447.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (16 samples, 0.03%)</title><rect x="70.3691%" y="421" width="0.0324%" height="15" fill="rgb(223,110,41)" fg:x="34737" fg:w="16"/><text x="70.6191%" y="431.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (10 samples, 0.02%)</title><rect x="70.3812%" y="405" width="0.0203%" height="15" fill="rgb(208,224,4)" fg:x="34743" fg:w="10"/><text x="70.6312%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::emit_csg_cmp (91 samples, 0.18%)</title><rect x="70.2192%" y="469" width="0.1843%" height="15" fill="rgb(241,137,19)" fg:x="34663" fg:w="91"/><text x="70.4692%" y="479.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="70.4096%" y="421" width="0.0101%" height="15" fill="rgb(244,24,17)" fg:x="34757" fg:w="5"/><text x="70.6596%" y="431.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="70.4056%" y="437" width="0.0182%" height="15" fill="rgb(245,178,49)" fg:x="34755" fg:w="9"/><text x="70.6556%" y="447.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="70.4319%" y="373" width="0.0142%" height="15" fill="rgb(219,160,38)" fg:x="34768" fg:w="7"/><text x="70.6819%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="70.4319%" y="357" width="0.0142%" height="15" fill="rgb(228,137,14)" fg:x="34768" fg:w="7"/><text x="70.6819%" y="367.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="70.4339%" y="341" width="0.0122%" height="15" fill="rgb(237,134,11)" fg:x="34769" fg:w="6"/><text x="70.6839%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="70.4359%" y="325" width="0.0101%" height="15" fill="rgb(211,126,44)" fg:x="34770" fg:w="5"/><text x="70.6859%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.01%)</title><rect x="70.4359%" y="309" width="0.0101%" height="15" fill="rgb(226,171,33)" fg:x="34770" fg:w="5"/><text x="70.6859%" y="319.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (10 samples, 0.02%)</title><rect x="70.4501%" y="373" width="0.0203%" height="15" fill="rgb(253,99,13)" fg:x="34777" fg:w="10"/><text x="70.7001%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="70.4501%" y="357" width="0.0203%" height="15" fill="rgb(244,48,7)" fg:x="34777" fg:w="10"/><text x="70.7001%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="70.4522%" y="341" width="0.0182%" height="15" fill="rgb(244,217,54)" fg:x="34778" fg:w="9"/><text x="70.7022%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (22 samples, 0.04%)</title><rect x="70.4299%" y="389" width="0.0446%" height="15" fill="rgb(224,15,18)" fg:x="34767" fg:w="22"/><text x="70.6799%" y="399.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (26 samples, 0.05%)</title><rect x="70.4238%" y="421" width="0.0527%" height="15" fill="rgb(244,99,12)" fg:x="34764" fg:w="26"/><text x="70.6738%" y="431.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (26 samples, 0.05%)</title><rect x="70.4238%" y="405" width="0.0527%" height="15" fill="rgb(233,226,8)" fg:x="34764" fg:w="26"/><text x="70.6738%" y="415.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (46 samples, 0.09%)</title><rect x="70.4765%" y="405" width="0.0932%" height="15" fill="rgb(229,211,3)" fg:x="34790" fg:w="46"/><text x="70.7265%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.02%)</title><rect x="70.5534%" y="389" width="0.0162%" height="15" fill="rgb(216,140,21)" fg:x="34828" fg:w="8"/><text x="70.8034%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="70.5555%" y="373" width="0.0142%" height="15" fill="rgb(234,122,30)" fg:x="34829" fg:w="7"/><text x="70.8055%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (7 samples, 0.01%)</title><rect x="70.5555%" y="357" width="0.0142%" height="15" fill="rgb(236,25,46)" fg:x="34829" fg:w="7"/><text x="70.8055%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (6 samples, 0.01%)</title><rect x="70.5575%" y="341" width="0.0122%" height="15" fill="rgb(217,52,54)" fg:x="34830" fg:w="6"/><text x="70.8075%" y="351.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="70.5919%" y="357" width="0.0101%" height="15" fill="rgb(222,29,26)" fg:x="34847" fg:w="5"/><text x="70.8419%" y="367.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (16 samples, 0.03%)</title><rect x="70.5717%" y="373" width="0.0324%" height="15" fill="rgb(216,177,29)" fg:x="34837" fg:w="16"/><text x="70.8217%" y="383.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (19 samples, 0.04%)</title><rect x="70.5717%" y="389" width="0.0385%" height="15" fill="rgb(247,136,51)" fg:x="34837" fg:w="19"/><text x="70.8217%" y="399.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (14 samples, 0.03%)</title><rect x="70.6102%" y="389" width="0.0284%" height="15" fill="rgb(231,47,47)" fg:x="34856" fg:w="14"/><text x="70.8602%" y="399.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (13 samples, 0.03%)</title><rect x="70.6122%" y="373" width="0.0263%" height="15" fill="rgb(211,192,36)" fg:x="34857" fg:w="13"/><text x="70.8622%" y="383.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.01%)</title><rect x="70.6243%" y="357" width="0.0142%" height="15" fill="rgb(229,156,32)" fg:x="34863" fg:w="7"/><text x="70.8743%" y="367.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.01%)</title><rect x="70.6405%" y="373" width="0.0142%" height="15" fill="rgb(248,213,20)" fg:x="34871" fg:w="7"/><text x="70.8905%" y="383.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.02%)</title><rect x="70.6385%" y="389" width="0.0182%" height="15" fill="rgb(217,64,7)" fg:x="34870" fg:w="9"/><text x="70.8885%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (11 samples, 0.02%)</title><rect x="70.7337%" y="341" width="0.0223%" height="15" fill="rgb(232,142,8)" fg:x="34917" fg:w="11"/><text x="70.9837%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="70.7358%" y="325" width="0.0203%" height="15" fill="rgb(224,92,44)" fg:x="34918" fg:w="10"/><text x="70.9858%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (10 samples, 0.02%)</title><rect x="70.7358%" y="309" width="0.0203%" height="15" fill="rgb(214,169,17)" fg:x="34918" fg:w="10"/><text x="70.9858%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (9 samples, 0.02%)</title><rect x="70.7378%" y="293" width="0.0182%" height="15" fill="rgb(210,59,37)" fg:x="34919" fg:w="9"/><text x="70.9878%" y="303.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (50 samples, 0.10%)</title><rect x="70.6568%" y="357" width="0.1013%" height="15" fill="rgb(214,116,48)" fg:x="34879" fg:w="50"/><text x="70.9068%" y="367.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (5 samples, 0.01%)</title><rect x="70.7580%" y="341" width="0.0101%" height="15" fill="rgb(244,191,6)" fg:x="34929" fg:w="5"/><text x="71.0080%" y="351.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.02%)</title><rect x="70.7702%" y="325" width="0.0162%" height="15" fill="rgb(241,50,52)" fg:x="34935" fg:w="8"/><text x="71.0202%" y="335.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (12 samples, 0.02%)</title><rect x="70.7682%" y="341" width="0.0243%" height="15" fill="rgb(236,75,39)" fg:x="34934" fg:w="12"/><text x="71.0182%" y="351.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (14 samples, 0.03%)</title><rect x="70.8006%" y="325" width="0.0284%" height="15" fill="rgb(236,99,0)" fg:x="34950" fg:w="14"/><text x="71.0506%" y="335.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.02%)</title><rect x="70.8087%" y="309" width="0.0203%" height="15" fill="rgb(207,202,15)" fg:x="34954" fg:w="10"/><text x="71.0587%" y="319.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (19 samples, 0.04%)</title><rect x="70.7925%" y="341" width="0.0385%" height="15" fill="rgb(233,207,14)" fg:x="34946" fg:w="19"/><text x="71.0425%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.02%)</title><rect x="70.8978%" y="293" width="0.0203%" height="15" fill="rgb(226,27,51)" fg:x="34998" fg:w="10"/><text x="71.1478%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="70.9059%" y="277" width="0.0122%" height="15" fill="rgb(206,104,42)" fg:x="35002" fg:w="6"/><text x="71.1559%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (6 samples, 0.01%)</title><rect x="70.9059%" y="261" width="0.0122%" height="15" fill="rgb(212,225,4)" fg:x="35002" fg:w="6"/><text x="71.1559%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (5 samples, 0.01%)</title><rect x="70.9079%" y="245" width="0.0101%" height="15" fill="rgb(233,96,42)" fg:x="35003" fg:w="5"/><text x="71.1579%" y="255.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (44 samples, 0.09%)</title><rect x="70.8310%" y="309" width="0.0891%" height="15" fill="rgb(229,21,32)" fg:x="34965" fg:w="44"/><text x="71.0810%" y="319.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (5 samples, 0.01%)</title><rect x="70.9262%" y="293" width="0.0101%" height="15" fill="rgb(226,216,24)" fg:x="35012" fg:w="5"/><text x="71.1762%" y="303.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (7 samples, 0.01%)</title><rect x="70.9363%" y="293" width="0.0142%" height="15" fill="rgb(221,163,17)" fg:x="35017" fg:w="7"/><text x="71.1863%" y="303.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.02%)</title><rect x="70.9505%" y="293" width="0.0182%" height="15" fill="rgb(216,216,42)" fg:x="35024" fg:w="9"/><text x="71.2005%" y="303.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (21 samples, 0.04%)</title><rect x="70.9707%" y="261" width="0.0425%" height="15" fill="rgb(240,118,7)" fg:x="35034" fg:w="21"/><text x="71.2207%" y="271.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (25 samples, 0.05%)</title><rect x="70.9707%" y="293" width="0.0506%" height="15" fill="rgb(221,67,37)" fg:x="35034" fg:w="25"/><text x="71.2207%" y="303.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (25 samples, 0.05%)</title><rect x="70.9707%" y="277" width="0.0506%" height="15" fill="rgb(241,32,44)" fg:x="35034" fg:w="25"/><text x="71.2207%" y="287.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (61 samples, 0.12%)</title><rect x="70.9201%" y="309" width="0.1236%" height="15" fill="rgb(235,204,43)" fg:x="35009" fg:w="61"/><text x="71.1701%" y="319.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (109 samples, 0.22%)</title><rect x="70.8310%" y="341" width="0.2208%" height="15" fill="rgb(213,116,10)" fg:x="34965" fg:w="109"/><text x="71.0810%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (109 samples, 0.22%)</title><rect x="70.8310%" y="325" width="0.2208%" height="15" fill="rgb(239,15,48)" fg:x="34965" fg:w="109"/><text x="71.0810%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (153 samples, 0.31%)</title><rect x="70.7580%" y="357" width="0.3099%" height="15" fill="rgb(207,123,36)" fg:x="34929" fg:w="153"/><text x="71.0080%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (205 samples, 0.42%)</title><rect x="70.6568%" y="389" width="0.4153%" height="15" fill="rgb(209,103,30)" fg:x="34879" fg:w="205"/><text x="70.9068%" y="399.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (205 samples, 0.42%)</title><rect x="70.6568%" y="373" width="0.4153%" height="15" fill="rgb(238,100,19)" fg:x="34879" fg:w="205"/><text x="70.9068%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (6 samples, 0.01%)</title><rect x="71.0801%" y="389" width="0.0122%" height="15" fill="rgb(244,30,14)" fg:x="35088" fg:w="6"/><text x="71.3301%" y="399.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="71.0923%" y="389" width="0.0101%" height="15" fill="rgb(249,174,6)" fg:x="35094" fg:w="5"/><text x="71.3423%" y="399.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (266 samples, 0.54%)</title><rect x="70.5696%" y="405" width="0.5389%" height="15" fill="rgb(235,213,41)" fg:x="34836" fg:w="266"/><text x="70.8196%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (315 samples, 0.64%)</title><rect x="70.4765%" y="421" width="0.6381%" height="15" fill="rgb(213,118,6)" fg:x="34790" fg:w="315"/><text x="70.7265%" y="431.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (14 samples, 0.03%)</title><rect x="71.1166%" y="405" width="0.0284%" height="15" fill="rgb(235,44,51)" fg:x="35106" fg:w="14"/><text x="71.3666%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="71.1470%" y="405" width="0.0101%" height="15" fill="rgb(217,9,53)" fg:x="35121" fg:w="5"/><text x="71.3970%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_small (11 samples, 0.02%)</title><rect x="71.1571%" y="405" width="0.0223%" height="15" fill="rgb(237,172,34)" fg:x="35126" fg:w="11"/><text x="71.4071%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (34 samples, 0.07%)</title><rect x="71.1146%" y="421" width="0.0689%" height="15" fill="rgb(206,206,11)" fg:x="35105" fg:w="34"/><text x="71.3646%" y="431.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (15 samples, 0.03%)</title><rect x="71.1855%" y="373" width="0.0304%" height="15" fill="rgb(214,149,29)" fg:x="35140" fg:w="15"/><text x="71.4355%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_small (9 samples, 0.02%)</title><rect x="71.2199%" y="373" width="0.0182%" height="15" fill="rgb(208,123,3)" fg:x="35157" fg:w="9"/><text x="71.4699%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (29 samples, 0.06%)</title><rect x="71.1855%" y="389" width="0.0587%" height="15" fill="rgb(229,126,4)" fg:x="35140" fg:w="29"/><text x="71.4355%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (7 samples, 0.01%)</title><rect x="71.2463%" y="341" width="0.0142%" height="15" fill="rgb(222,92,36)" fg:x="35170" fg:w="7"/><text x="71.4963%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (15 samples, 0.03%)</title><rect x="71.2442%" y="357" width="0.0304%" height="15" fill="rgb(216,39,41)" fg:x="35169" fg:w="15"/><text x="71.4942%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (7 samples, 0.01%)</title><rect x="71.2746%" y="309" width="0.0142%" height="15" fill="rgb(253,127,28)" fg:x="35184" fg:w="7"/><text x="71.5246%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="71.2949%" y="309" width="0.0101%" height="15" fill="rgb(249,152,51)" fg:x="35194" fg:w="5"/><text x="71.5449%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_small (5 samples, 0.01%)</title><rect x="71.3050%" y="309" width="0.0101%" height="15" fill="rgb(209,123,42)" fg:x="35199" fg:w="5"/><text x="71.5550%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (21 samples, 0.04%)</title><rect x="71.2746%" y="325" width="0.0425%" height="15" fill="rgb(241,118,22)" fg:x="35184" fg:w="21"/><text x="71.5246%" y="335.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (27 samples, 0.05%)</title><rect x="71.2746%" y="341" width="0.0547%" height="15" fill="rgb(208,25,7)" fg:x="35184" fg:w="27"/><text x="71.5246%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (6 samples, 0.01%)</title><rect x="71.3172%" y="325" width="0.0122%" height="15" fill="rgb(243,144,39)" fg:x="35205" fg:w="6"/><text x="71.5672%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (28 samples, 0.06%)</title><rect x="71.2746%" y="357" width="0.0567%" height="15" fill="rgb(250,50,5)" fg:x="35184" fg:w="28"/><text x="71.5246%" y="367.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (47 samples, 0.10%)</title><rect x="71.2442%" y="373" width="0.0952%" height="15" fill="rgb(207,67,11)" fg:x="35169" fg:w="47"/><text x="71.4942%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (49 samples, 0.10%)</title><rect x="71.2442%" y="389" width="0.0993%" height="15" fill="rgb(245,204,40)" fg:x="35169" fg:w="49"/><text x="71.4942%" y="399.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (81 samples, 0.16%)</title><rect x="71.1835%" y="405" width="0.1641%" height="15" fill="rgb(238,228,24)" fg:x="35139" fg:w="81"/><text x="71.4335%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (82 samples, 0.17%)</title><rect x="71.1835%" y="421" width="0.1661%" height="15" fill="rgb(217,116,22)" fg:x="35139" fg:w="82"/><text x="71.4335%" y="431.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::join_node::JoinNode::cardinality (458 samples, 0.93%)</title><rect x="70.4238%" y="437" width="0.9278%" height="15" fill="rgb(234,98,12)" fg:x="34764" fg:w="458"/><text x="70.6738%" y="447.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (5 samples, 0.01%)</title><rect x="71.3516%" y="437" width="0.0101%" height="15" fill="rgb(242,170,50)" fg:x="35222" fg:w="5"/><text x="71.6016%" y="447.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::emit_csg_cmp (473 samples, 0.96%)</title><rect x="70.4056%" y="453" width="0.9582%" height="15" fill="rgb(235,7,5)" fg:x="34755" fg:w="473"/><text x="70.6556%" y="463.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="71.3658%" y="405" width="0.0101%" height="15" fill="rgb(241,114,28)" fg:x="35229" fg:w="5"/><text x="71.6158%" y="415.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="71.3800%" y="373" width="0.0101%" height="15" fill="rgb(246,112,42)" fg:x="35236" fg:w="5"/><text x="71.6300%" y="383.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="71.3800%" y="389" width="0.0142%" height="15" fill="rgb(248,228,14)" fg:x="35236" fg:w="7"/><text x="71.6300%" y="399.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (21 samples, 0.04%)</title><rect x="71.3759%" y="405" width="0.0425%" height="15" fill="rgb(208,133,18)" fg:x="35234" fg:w="21"/><text x="71.6259%" y="415.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="71.3941%" y="389" width="0.0243%" height="15" fill="rgb(207,35,49)" fg:x="35243" fg:w="12"/><text x="71.6441%" y="399.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="71.4002%" y="373" width="0.0182%" height="15" fill="rgb(205,68,36)" fg:x="35246" fg:w="9"/><text x="71.6502%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (28 samples, 0.06%)</title><rect x="71.3658%" y="421" width="0.0567%" height="15" fill="rgb(245,62,40)" fg:x="35229" fg:w="28"/><text x="71.6158%" y="431.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="71.4265%" y="373" width="0.0142%" height="15" fill="rgb(228,27,24)" fg:x="35259" fg:w="7"/><text x="71.6765%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="71.4265%" y="389" width="0.0182%" height="15" fill="rgb(253,19,12)" fg:x="35259" fg:w="9"/><text x="71.6765%" y="399.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="71.4590%" y="341" width="0.0162%" height="15" fill="rgb(232,28,20)" fg:x="35275" fg:w="8"/><text x="71.7090%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (14 samples, 0.03%)</title><rect x="71.4488%" y="373" width="0.0284%" height="15" fill="rgb(218,35,51)" fg:x="35270" fg:w="14"/><text x="71.6988%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (13 samples, 0.03%)</title><rect x="71.4509%" y="357" width="0.0263%" height="15" fill="rgb(212,90,40)" fg:x="35271" fg:w="13"/><text x="71.7009%" y="367.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="71.4934%" y="325" width="0.0243%" height="15" fill="rgb(220,172,12)" fg:x="35292" fg:w="12"/><text x="71.7434%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="71.5056%" y="309" width="0.0122%" height="15" fill="rgb(226,159,20)" fg:x="35298" fg:w="6"/><text x="71.7556%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.01%)</title><rect x="71.5076%" y="293" width="0.0101%" height="15" fill="rgb(234,205,16)" fg:x="35299" fg:w="5"/><text x="71.7576%" y="303.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (21 samples, 0.04%)</title><rect x="71.4853%" y="357" width="0.0425%" height="15" fill="rgb(207,9,39)" fg:x="35288" fg:w="21"/><text x="71.7353%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (20 samples, 0.04%)</title><rect x="71.4873%" y="341" width="0.0405%" height="15" fill="rgb(249,143,15)" fg:x="35289" fg:w="20"/><text x="71.7373%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="71.5380%" y="325" width="0.0162%" height="15" fill="rgb(253,133,29)" fg:x="35314" fg:w="8"/><text x="71.7880%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="71.5380%" y="341" width="0.0182%" height="15" fill="rgb(221,187,0)" fg:x="35314" fg:w="9"/><text x="71.7880%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (22 samples, 0.04%)</title><rect x="71.5359%" y="357" width="0.0446%" height="15" fill="rgb(205,204,26)" fg:x="35313" fg:w="22"/><text x="71.7859%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (9 samples, 0.02%)</title><rect x="71.5623%" y="341" width="0.0182%" height="15" fill="rgb(224,68,54)" fg:x="35326" fg:w="9"/><text x="71.8123%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="71.5623%" y="325" width="0.0182%" height="15" fill="rgb(209,67,4)" fg:x="35326" fg:w="9"/><text x="71.8123%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="71.5623%" y="309" width="0.0182%" height="15" fill="rgb(228,229,18)" fg:x="35326" fg:w="9"/><text x="71.8123%" y="319.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (51 samples, 0.10%)</title><rect x="71.4833%" y="373" width="0.1033%" height="15" fill="rgb(231,89,13)" fg:x="35287" fg:w="51"/><text x="71.7333%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (77 samples, 0.16%)</title><rect x="71.4448%" y="389" width="0.1560%" height="15" fill="rgb(210,182,18)" fg:x="35268" fg:w="77"/><text x="71.6948%" y="399.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (90 samples, 0.18%)</title><rect x="71.4265%" y="405" width="0.1823%" height="15" fill="rgb(240,105,2)" fg:x="35259" fg:w="90"/><text x="71.6765%" y="415.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="71.8884%" y="373" width="0.0101%" height="15" fill="rgb(207,170,50)" fg:x="35487" fg:w="5"/><text x="72.1384%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.01%)</title><rect x="71.9026%" y="357" width="0.0101%" height="15" fill="rgb(232,133,24)" fg:x="35494" fg:w="5"/><text x="72.1526%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (5 samples, 0.01%)</title><rect x="71.9249%" y="309" width="0.0101%" height="15" fill="rgb(235,166,27)" fg:x="35505" fg:w="5"/><text x="72.1749%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (22 samples, 0.04%)</title><rect x="71.8985%" y="373" width="0.0446%" height="15" fill="rgb(209,19,13)" fg:x="35492" fg:w="22"/><text x="72.1485%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (15 samples, 0.03%)</title><rect x="71.9127%" y="357" width="0.0304%" height="15" fill="rgb(226,79,39)" fg:x="35499" fg:w="15"/><text x="72.1627%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (14 samples, 0.03%)</title><rect x="71.9148%" y="341" width="0.0284%" height="15" fill="rgb(222,163,10)" fg:x="35500" fg:w="14"/><text x="72.1648%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (12 samples, 0.02%)</title><rect x="71.9188%" y="325" width="0.0243%" height="15" fill="rgb(214,44,19)" fg:x="35502" fg:w="12"/><text x="72.1688%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (165 samples, 0.33%)</title><rect x="71.6109%" y="389" width="0.3343%" height="15" fill="rgb(210,217,13)" fg:x="35350" fg:w="165"/><text x="71.8609%" y="399.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.02%)</title><rect x="72.0039%" y="341" width="0.0182%" height="15" fill="rgb(237,61,54)" fg:x="35544" fg:w="9"/><text x="72.2539%" y="351.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (7 samples, 0.01%)</title><rect x="72.0221%" y="341" width="0.0142%" height="15" fill="rgb(226,184,24)" fg:x="35553" fg:w="7"/><text x="72.2721%" y="351.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.02%)</title><rect x="72.0363%" y="341" width="0.0162%" height="15" fill="rgb(223,226,4)" fg:x="35560" fg:w="8"/><text x="72.2863%" y="351.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (38 samples, 0.08%)</title><rect x="71.9776%" y="357" width="0.0770%" height="15" fill="rgb(210,26,41)" fg:x="35531" fg:w="38"/><text x="72.2276%" y="367.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.02%)</title><rect x="72.0545%" y="357" width="0.0182%" height="15" fill="rgb(220,221,6)" fg:x="35569" fg:w="9"/><text x="72.3045%" y="367.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (61 samples, 0.12%)</title><rect x="71.9512%" y="373" width="0.1236%" height="15" fill="rgb(225,89,49)" fg:x="35518" fg:w="61"/><text x="72.2012%" y="383.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (7 samples, 0.01%)</title><rect x="72.1315%" y="341" width="0.0142%" height="15" fill="rgb(218,70,45)" fg:x="35607" fg:w="7"/><text x="72.3815%" y="351.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (38 samples, 0.08%)</title><rect x="72.0910%" y="357" width="0.0770%" height="15" fill="rgb(238,166,21)" fg:x="35587" fg:w="38"/><text x="72.3410%" y="367.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.02%)</title><rect x="72.1457%" y="341" width="0.0223%" height="15" fill="rgb(224,141,44)" fg:x="35614" fg:w="11"/><text x="72.3957%" y="351.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="72.1578%" y="325" width="0.0101%" height="15" fill="rgb(230,12,49)" fg:x="35620" fg:w="5"/><text x="72.4078%" y="335.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="72.1680%" y="357" width="0.0122%" height="15" fill="rgb(212,174,12)" fg:x="35625" fg:w="6"/><text x="72.4180%" y="367.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (53 samples, 0.11%)</title><rect x="72.0748%" y="373" width="0.1074%" height="15" fill="rgb(246,67,9)" fg:x="35579" fg:w="53"/><text x="72.3248%" y="383.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.02%)</title><rect x="72.2227%" y="341" width="0.0182%" height="15" fill="rgb(239,35,23)" fg:x="35652" fg:w="9"/><text x="72.4727%" y="351.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="72.2409%" y="341" width="0.0101%" height="15" fill="rgb(211,167,0)" fg:x="35661" fg:w="5"/><text x="72.4909%" y="351.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (22 samples, 0.04%)</title><rect x="72.2105%" y="357" width="0.0446%" height="15" fill="rgb(225,119,45)" fg:x="35646" fg:w="22"/><text x="72.4605%" y="367.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (37 samples, 0.07%)</title><rect x="72.1822%" y="373" width="0.0750%" height="15" fill="rgb(210,162,6)" fg:x="35632" fg:w="37"/><text x="72.4322%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (8 samples, 0.02%)</title><rect x="72.5367%" y="309" width="0.0162%" height="15" fill="rgb(208,118,35)" fg:x="35807" fg:w="8"/><text x="72.7867%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (7 samples, 0.01%)</title><rect x="72.5387%" y="293" width="0.0142%" height="15" fill="rgb(239,4,53)" fg:x="35808" fg:w="7"/><text x="72.7887%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (8 samples, 0.02%)</title><rect x="72.5711%" y="261" width="0.0162%" height="15" fill="rgb(213,130,21)" fg:x="35824" fg:w="8"/><text x="72.8211%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (25 samples, 0.05%)</title><rect x="72.5549%" y="293" width="0.0506%" height="15" fill="rgb(235,148,0)" fg:x="35816" fg:w="25"/><text x="72.8049%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (22 samples, 0.04%)</title><rect x="72.5610%" y="277" width="0.0446%" height="15" fill="rgb(244,224,18)" fg:x="35819" fg:w="22"/><text x="72.8110%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (6 samples, 0.01%)</title><rect x="72.5934%" y="261" width="0.0122%" height="15" fill="rgb(211,214,4)" fg:x="35835" fg:w="6"/><text x="72.8434%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (39 samples, 0.08%)</title><rect x="72.5306%" y="325" width="0.0790%" height="15" fill="rgb(206,119,25)" fg:x="35804" fg:w="39"/><text x="72.7806%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (28 samples, 0.06%)</title><rect x="72.5529%" y="309" width="0.0567%" height="15" fill="rgb(243,93,47)" fg:x="35815" fg:w="28"/><text x="72.8029%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (177 samples, 0.36%)</title><rect x="72.2571%" y="341" width="0.3586%" height="15" fill="rgb(224,194,6)" fg:x="35669" fg:w="177"/><text x="72.5071%" y="351.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (8 samples, 0.02%)</title><rect x="72.6501%" y="293" width="0.0162%" height="15" fill="rgb(243,229,6)" fg:x="35863" fg:w="8"/><text x="72.9001%" y="303.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (18 samples, 0.04%)</title><rect x="72.6319%" y="309" width="0.0365%" height="15" fill="rgb(207,23,50)" fg:x="35854" fg:w="18"/><text x="72.8819%" y="319.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (29 samples, 0.06%)</title><rect x="72.6258%" y="325" width="0.0587%" height="15" fill="rgb(253,192,32)" fg:x="35851" fg:w="29"/><text x="72.8758%" y="335.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.02%)</title><rect x="72.6683%" y="309" width="0.0162%" height="15" fill="rgb(213,21,6)" fg:x="35872" fg:w="8"/><text x="72.9183%" y="319.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (9 samples, 0.02%)</title><rect x="72.7271%" y="293" width="0.0182%" height="15" fill="rgb(243,151,13)" fg:x="35901" fg:w="9"/><text x="72.9771%" y="303.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="72.7494%" y="277" width="0.0122%" height="15" fill="rgb(233,165,41)" fg:x="35912" fg:w="6"/><text x="72.9994%" y="287.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (6 samples, 0.01%)</title><rect x="72.7615%" y="277" width="0.0122%" height="15" fill="rgb(246,176,45)" fg:x="35918" fg:w="6"/><text x="73.0115%" y="287.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (42 samples, 0.09%)</title><rect x="72.6967%" y="309" width="0.0851%" height="15" fill="rgb(217,170,52)" fg:x="35886" fg:w="42"/><text x="72.9467%" y="319.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (18 samples, 0.04%)</title><rect x="72.7453%" y="293" width="0.0365%" height="15" fill="rgb(214,203,54)" fg:x="35910" fg:w="18"/><text x="72.9953%" y="303.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (49 samples, 0.10%)</title><rect x="72.6845%" y="325" width="0.0993%" height="15" fill="rgb(248,215,49)" fg:x="35880" fg:w="49"/><text x="72.9345%" y="335.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="72.8284%" y="293" width="0.0101%" height="15" fill="rgb(208,46,10)" fg:x="35951" fg:w="5"/><text x="73.0784%" y="303.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (24 samples, 0.05%)</title><rect x="72.8101%" y="309" width="0.0486%" height="15" fill="rgb(254,5,31)" fg:x="35942" fg:w="24"/><text x="73.0601%" y="319.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.02%)</title><rect x="72.8385%" y="293" width="0.0203%" height="15" fill="rgb(222,104,33)" fg:x="35956" fg:w="10"/><text x="73.0885%" y="303.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (39 samples, 0.08%)</title><rect x="72.7838%" y="325" width="0.0790%" height="15" fill="rgb(248,49,16)" fg:x="35929" fg:w="39"/><text x="73.0338%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="73.0877%" y="277" width="0.0101%" height="15" fill="rgb(232,198,41)" fg:x="36079" fg:w="5"/><text x="73.3377%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.01%)</title><rect x="73.1039%" y="261" width="0.0142%" height="15" fill="rgb(214,125,3)" fg:x="36087" fg:w="7"/><text x="73.3539%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.01%)</title><rect x="73.1079%" y="245" width="0.0101%" height="15" fill="rgb(229,220,28)" fg:x="36089" fg:w="5"/><text x="73.3579%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (6 samples, 0.01%)</title><rect x="73.1363%" y="213" width="0.0122%" height="15" fill="rgb(222,64,37)" fg:x="36103" fg:w="6"/><text x="73.3863%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (23 samples, 0.05%)</title><rect x="73.1241%" y="245" width="0.0466%" height="15" fill="rgb(249,184,13)" fg:x="36097" fg:w="23"/><text x="73.3741%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (18 samples, 0.04%)</title><rect x="73.1343%" y="229" width="0.0365%" height="15" fill="rgb(252,176,6)" fg:x="36102" fg:w="18"/><text x="73.3843%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (9 samples, 0.02%)</title><rect x="73.1525%" y="213" width="0.0182%" height="15" fill="rgb(228,153,7)" fg:x="36111" fg:w="9"/><text x="73.4025%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (39 samples, 0.08%)</title><rect x="73.0978%" y="277" width="0.0790%" height="15" fill="rgb(242,193,5)" fg:x="36084" fg:w="39"/><text x="73.3478%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (29 samples, 0.06%)</title><rect x="73.1181%" y="261" width="0.0587%" height="15" fill="rgb(232,140,9)" fg:x="36094" fg:w="29"/><text x="73.3681%" y="271.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (155 samples, 0.31%)</title><rect x="72.8669%" y="293" width="0.3140%" height="15" fill="rgb(213,222,16)" fg:x="35970" fg:w="155"/><text x="73.1169%" y="303.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (6 samples, 0.01%)</title><rect x="73.2275%" y="245" width="0.0122%" height="15" fill="rgb(222,75,50)" fg:x="36148" fg:w="6"/><text x="73.4775%" y="255.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (15 samples, 0.03%)</title><rect x="73.2112%" y="261" width="0.0304%" height="15" fill="rgb(205,180,2)" fg:x="36140" fg:w="15"/><text x="73.4612%" y="271.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.01%)</title><rect x="73.2416%" y="261" width="0.0142%" height="15" fill="rgb(216,34,7)" fg:x="36155" fg:w="7"/><text x="73.4916%" y="271.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (32 samples, 0.06%)</title><rect x="73.1930%" y="277" width="0.0648%" height="15" fill="rgb(253,16,32)" fg:x="36131" fg:w="32"/><text x="73.4430%" y="287.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="73.2801%" y="245" width="0.0142%" height="15" fill="rgb(208,97,28)" fg:x="36174" fg:w="7"/><text x="73.5301%" y="255.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (23 samples, 0.05%)</title><rect x="73.2639%" y="261" width="0.0466%" height="15" fill="rgb(225,92,11)" fg:x="36166" fg:w="23"/><text x="73.5139%" y="271.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (32 samples, 0.06%)</title><rect x="73.2578%" y="277" width="0.0648%" height="15" fill="rgb(243,38,12)" fg:x="36163" fg:w="32"/><text x="73.5078%" y="287.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="73.3105%" y="261" width="0.0122%" height="15" fill="rgb(208,139,16)" fg:x="36189" fg:w="6"/><text x="73.5605%" y="271.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.02%)</title><rect x="73.3632%" y="245" width="0.0162%" height="15" fill="rgb(227,24,9)" fg:x="36215" fg:w="8"/><text x="73.6132%" y="255.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (18 samples, 0.04%)</title><rect x="73.3490%" y="261" width="0.0365%" height="15" fill="rgb(206,62,11)" fg:x="36208" fg:w="18"/><text x="73.5990%" y="271.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (33 samples, 0.07%)</title><rect x="73.3227%" y="277" width="0.0669%" height="15" fill="rgb(228,134,27)" fg:x="36195" fg:w="33"/><text x="73.5727%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (12 samples, 0.02%)</title><rect x="73.5475%" y="197" width="0.0243%" height="15" fill="rgb(205,55,33)" fg:x="36306" fg:w="12"/><text x="73.7975%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (10 samples, 0.02%)</title><rect x="73.5516%" y="181" width="0.0203%" height="15" fill="rgb(243,75,43)" fg:x="36308" fg:w="10"/><text x="73.8016%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (5 samples, 0.01%)</title><rect x="73.5617%" y="165" width="0.0101%" height="15" fill="rgb(223,27,42)" fg:x="36313" fg:w="5"/><text x="73.8117%" y="175.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (93 samples, 0.19%)</title><rect x="73.3915%" y="245" width="0.1884%" height="15" fill="rgb(232,189,33)" fg:x="36229" fg:w="93"/><text x="73.6415%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (20 samples, 0.04%)</title><rect x="73.5394%" y="229" width="0.0405%" height="15" fill="rgb(210,9,39)" fg:x="36302" fg:w="20"/><text x="73.7894%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (17 samples, 0.03%)</title><rect x="73.5455%" y="213" width="0.0344%" height="15" fill="rgb(242,85,26)" fg:x="36305" fg:w="17"/><text x="73.7955%" y="223.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="73.5961%" y="213" width="0.0101%" height="15" fill="rgb(248,44,4)" fg:x="36330" fg:w="5"/><text x="73.8461%" y="223.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (9 samples, 0.02%)</title><rect x="73.5901%" y="229" width="0.0182%" height="15" fill="rgb(250,96,46)" fg:x="36327" fg:w="9"/><text x="73.8401%" y="239.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.02%)</title><rect x="73.6083%" y="213" width="0.0162%" height="15" fill="rgb(229,116,26)" fg:x="36336" fg:w="8"/><text x="73.8583%" y="223.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (10 samples, 0.02%)</title><rect x="73.6083%" y="229" width="0.0203%" height="15" fill="rgb(246,94,34)" fg:x="36336" fg:w="10"/><text x="73.8583%" y="239.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.02%)</title><rect x="73.6286%" y="229" width="0.0162%" height="15" fill="rgb(251,73,21)" fg:x="36346" fg:w="8"/><text x="73.8786%" y="239.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (29 samples, 0.06%)</title><rect x="73.6468%" y="197" width="0.0587%" height="15" fill="rgb(254,121,25)" fg:x="36355" fg:w="29"/><text x="73.8968%" y="207.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (34 samples, 0.07%)</title><rect x="73.6468%" y="229" width="0.0689%" height="15" fill="rgb(215,161,49)" fg:x="36355" fg:w="34"/><text x="73.8968%" y="239.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (34 samples, 0.07%)</title><rect x="73.6468%" y="213" width="0.0689%" height="15" fill="rgb(221,43,13)" fg:x="36355" fg:w="34"/><text x="73.8968%" y="223.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (5 samples, 0.01%)</title><rect x="73.7055%" y="197" width="0.0101%" height="15" fill="rgb(249,5,37)" fg:x="36384" fg:w="5"/><text x="73.9555%" y="207.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (77 samples, 0.16%)</title><rect x="73.5799%" y="245" width="0.1560%" height="15" fill="rgb(226,25,44)" fg:x="36322" fg:w="77"/><text x="73.8299%" y="255.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (181 samples, 0.37%)</title><rect x="73.3895%" y="277" width="0.3667%" height="15" fill="rgb(238,189,16)" fg:x="36228" fg:w="181"/><text x="73.6395%" y="287.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (181 samples, 0.37%)</title><rect x="73.3895%" y="261" width="0.3667%" height="15" fill="rgb(251,186,8)" fg:x="36228" fg:w="181"/><text x="73.6395%" y="271.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.01%)</title><rect x="73.7582%" y="261" width="0.0142%" height="15" fill="rgb(254,34,31)" fg:x="36410" fg:w="7"/><text x="74.0082%" y="271.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (11 samples, 0.02%)</title><rect x="73.7562%" y="277" width="0.0223%" height="15" fill="rgb(225,215,27)" fg:x="36409" fg:w="11"/><text x="74.0062%" y="287.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (6 samples, 0.01%)</title><rect x="73.7866%" y="277" width="0.0122%" height="15" fill="rgb(221,192,48)" fg:x="36424" fg:w="6"/><text x="74.0366%" y="287.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="73.7886%" y="261" width="0.0101%" height="15" fill="rgb(219,137,20)" fg:x="36425" fg:w="5"/><text x="74.0386%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.01%)</title><rect x="73.8068%" y="277" width="0.0142%" height="15" fill="rgb(219,84,11)" fg:x="36434" fg:w="7"/><text x="74.0568%" y="287.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (319 samples, 0.65%)</title><rect x="73.1809%" y="293" width="0.6462%" height="15" fill="rgb(224,10,23)" fg:x="36125" fg:w="319"/><text x="73.4309%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.01%)</title><rect x="73.8453%" y="293" width="0.0122%" height="15" fill="rgb(248,22,39)" fg:x="36453" fg:w="6"/><text x="74.0953%" y="303.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (492 samples, 1.00%)</title><rect x="72.8628%" y="325" width="0.9967%" height="15" fill="rgb(212,154,20)" fg:x="35968" fg:w="492"/><text x="73.1128%" y="335.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (491 samples, 0.99%)</title><rect x="72.8648%" y="309" width="0.9947%" height="15" fill="rgb(236,199,50)" fg:x="35969" fg:w="491"/><text x="73.1148%" y="319.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (5 samples, 0.01%)</title><rect x="73.8696%" y="325" width="0.0101%" height="15" fill="rgb(211,9,17)" fg:x="36465" fg:w="5"/><text x="74.1196%" y="335.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="73.8798%" y="325" width="0.0101%" height="15" fill="rgb(243,216,36)" fg:x="36470" fg:w="5"/><text x="74.1298%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (646 samples, 1.31%)</title><rect x="72.6157%" y="341" width="1.3086%" height="15" fill="rgb(250,2,10)" fg:x="35846" fg:w="646"/><text x="72.8657%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.02%)</title><rect x="73.9405%" y="341" width="0.0182%" height="15" fill="rgb(226,50,48)" fg:x="36500" fg:w="9"/><text x="74.1905%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (841 samples, 1.70%)</title><rect x="72.2571%" y="373" width="1.7037%" height="15" fill="rgb(243,81,16)" fg:x="35669" fg:w="841"/><text x="72.5071%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (841 samples, 1.70%)</title><rect x="72.2571%" y="357" width="1.7037%" height="15" fill="rgb(250,14,2)" fg:x="35669" fg:w="841"/><text x="72.5071%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (5 samples, 0.01%)</title><rect x="73.9608%" y="373" width="0.0101%" height="15" fill="rgb(233,135,29)" fg:x="36510" fg:w="5"/><text x="74.2108%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::update_statistic (5 samples, 0.01%)</title><rect x="73.9709%" y="373" width="0.0101%" height="15" fill="rgb(224,64,43)" fg:x="36515" fg:w="5"/><text x="74.2209%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (1,025 samples, 2.08%)</title><rect x="71.9451%" y="389" width="2.0764%" height="15" fill="rgb(238,84,13)" fg:x="35515" fg:w="1025"/><text x="72.1951%" y="399.50">d..</text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (1,209 samples, 2.45%)</title><rect x="71.6089%" y="405" width="2.4492%" height="15" fill="rgb(253,48,26)" fg:x="35349" fg:w="1209"/><text x="71.8589%" y="415.50">da..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.03%)</title><rect x="74.0317%" y="389" width="0.0263%" height="15" fill="rgb(205,223,31)" fg:x="36545" fg:w="13"/><text x="74.2817%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.02%)</title><rect x="74.1451%" y="373" width="0.0182%" height="15" fill="rgb(221,41,32)" fg:x="36601" fg:w="9"/><text x="74.3951%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (7 samples, 0.01%)</title><rect x="74.1634%" y="373" width="0.0142%" height="15" fill="rgb(213,158,31)" fg:x="36610" fg:w="7"/><text x="74.4134%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (60 samples, 0.12%)</title><rect x="74.0621%" y="389" width="0.1215%" height="15" fill="rgb(245,126,43)" fg:x="36560" fg:w="60"/><text x="74.3121%" y="399.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (10 samples, 0.02%)</title><rect x="74.1836%" y="389" width="0.0203%" height="15" fill="rgb(227,7,22)" fg:x="36620" fg:w="10"/><text x="74.4336%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.02%)</title><rect x="74.2039%" y="389" width="0.0182%" height="15" fill="rgb(252,90,44)" fg:x="36630" fg:w="9"/><text x="74.4539%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_small (36 samples, 0.07%)</title><rect x="74.2221%" y="389" width="0.0729%" height="15" fill="rgb(253,91,0)" fg:x="36639" fg:w="36"/><text x="74.4721%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (13 samples, 0.03%)</title><rect x="74.2687%" y="373" width="0.0263%" height="15" fill="rgb(252,175,49)" fg:x="36662" fg:w="13"/><text x="74.5187%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (125 samples, 0.25%)</title><rect x="74.0580%" y="405" width="0.2532%" height="15" fill="rgb(246,150,1)" fg:x="36558" fg:w="125"/><text x="74.3080%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.02%)</title><rect x="74.3882%" y="341" width="0.0162%" height="15" fill="rgb(241,192,25)" fg:x="36721" fg:w="8"/><text x="74.6382%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (47 samples, 0.10%)</title><rect x="74.3153%" y="357" width="0.0952%" height="15" fill="rgb(239,187,11)" fg:x="36685" fg:w="47"/><text x="74.5653%" y="367.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.01%)</title><rect x="74.4105%" y="357" width="0.0142%" height="15" fill="rgb(218,202,51)" fg:x="36732" fg:w="7"/><text x="74.6605%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.01%)</title><rect x="74.4247%" y="357" width="0.0142%" height="15" fill="rgb(225,176,8)" fg:x="36739" fg:w="7"/><text x="74.6747%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (6 samples, 0.01%)</title><rect x="74.4551%" y="341" width="0.0122%" height="15" fill="rgb(219,122,41)" fg:x="36754" fg:w="6"/><text x="74.7051%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_small (28 samples, 0.06%)</title><rect x="74.4389%" y="357" width="0.0567%" height="15" fill="rgb(248,140,20)" fg:x="36746" fg:w="28"/><text x="74.6889%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (11 samples, 0.02%)</title><rect x="74.4733%" y="341" width="0.0223%" height="15" fill="rgb(245,41,37)" fg:x="36763" fg:w="11"/><text x="74.7233%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (95 samples, 0.19%)</title><rect x="74.3112%" y="373" width="0.1924%" height="15" fill="rgb(235,82,39)" fg:x="36683" fg:w="95"/><text x="74.5612%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.01%)</title><rect x="74.5786%" y="309" width="0.0122%" height="15" fill="rgb(230,108,42)" fg:x="36815" fg:w="6"/><text x="74.8286%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.01%)</title><rect x="74.5807%" y="293" width="0.0101%" height="15" fill="rgb(215,150,50)" fg:x="36816" fg:w="5"/><text x="74.8307%" y="303.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (42 samples, 0.09%)</title><rect x="74.5098%" y="325" width="0.0851%" height="15" fill="rgb(233,212,5)" fg:x="36781" fg:w="42"/><text x="74.7598%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="74.5948%" y="325" width="0.0101%" height="15" fill="rgb(245,80,22)" fg:x="36823" fg:w="5"/><text x="74.8448%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.01%)</title><rect x="74.6050%" y="325" width="0.0142%" height="15" fill="rgb(238,129,16)" fg:x="36828" fg:w="7"/><text x="74.8550%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_small (22 samples, 0.04%)</title><rect x="74.6192%" y="325" width="0.0446%" height="15" fill="rgb(240,19,0)" fg:x="36835" fg:w="22"/><text x="74.8692%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (8 samples, 0.02%)</title><rect x="74.6475%" y="309" width="0.0162%" height="15" fill="rgb(232,42,35)" fg:x="36849" fg:w="8"/><text x="74.8975%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (81 samples, 0.16%)</title><rect x="74.5057%" y="341" width="0.1641%" height="15" fill="rgb(223,130,24)" fg:x="36779" fg:w="81"/><text x="74.7557%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (23 samples, 0.05%)</title><rect x="74.6718%" y="293" width="0.0466%" height="15" fill="rgb(237,16,22)" fg:x="36861" fg:w="23"/><text x="74.9218%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="74.7184%" y="293" width="0.0101%" height="15" fill="rgb(248,192,20)" fg:x="36884" fg:w="5"/><text x="74.9684%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.01%)</title><rect x="74.7285%" y="293" width="0.0122%" height="15" fill="rgb(233,167,2)" fg:x="36889" fg:w="6"/><text x="74.9785%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_small (17 samples, 0.03%)</title><rect x="74.7407%" y="293" width="0.0344%" height="15" fill="rgb(252,71,44)" fg:x="36895" fg:w="17"/><text x="74.9907%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (8 samples, 0.02%)</title><rect x="74.7589%" y="277" width="0.0162%" height="15" fill="rgb(238,37,47)" fg:x="36904" fg:w="8"/><text x="75.0089%" y="287.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (57 samples, 0.12%)</title><rect x="74.6718%" y="309" width="0.1155%" height="15" fill="rgb(214,202,54)" fg:x="36861" fg:w="57"/><text x="74.9218%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (10 samples, 0.02%)</title><rect x="74.7893%" y="261" width="0.0203%" height="15" fill="rgb(254,165,40)" fg:x="36919" fg:w="10"/><text x="75.0393%" y="271.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (16 samples, 0.03%)</title><rect x="74.7893%" y="277" width="0.0324%" height="15" fill="rgb(246,173,38)" fg:x="36919" fg:w="16"/><text x="75.0393%" y="287.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (5 samples, 0.01%)</title><rect x="74.8217%" y="261" width="0.0101%" height="15" fill="rgb(215,3,27)" fg:x="36935" fg:w="5"/><text x="75.0717%" y="271.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (7 samples, 0.01%)</title><rect x="74.8359%" y="261" width="0.0142%" height="15" fill="rgb(239,169,51)" fg:x="36942" fg:w="7"/><text x="75.0859%" y="271.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (16 samples, 0.03%)</title><rect x="74.8217%" y="277" width="0.0324%" height="15" fill="rgb(212,5,25)" fg:x="36935" fg:w="16"/><text x="75.0717%" y="287.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (38 samples, 0.08%)</title><rect x="74.7873%" y="293" width="0.0770%" height="15" fill="rgb(243,45,17)" fg:x="36918" fg:w="38"/><text x="75.0373%" y="303.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (9 samples, 0.02%)</title><rect x="74.8785%" y="293" width="0.0182%" height="15" fill="rgb(242,97,9)" fg:x="36963" fg:w="9"/><text x="75.1285%" y="303.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (58 samples, 0.12%)</title><rect x="74.7873%" y="309" width="0.1175%" height="15" fill="rgb(228,71,31)" fg:x="36918" fg:w="58"/><text x="75.0373%" y="319.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (121 samples, 0.25%)</title><rect x="74.6698%" y="325" width="0.2451%" height="15" fill="rgb(252,184,16)" fg:x="36860" fg:w="121"/><text x="74.9198%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (6 samples, 0.01%)</title><rect x="74.9271%" y="325" width="0.0122%" height="15" fill="rgb(236,169,46)" fg:x="36987" fg:w="6"/><text x="75.1771%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (134 samples, 0.27%)</title><rect x="74.6698%" y="341" width="0.2715%" height="15" fill="rgb(207,17,47)" fg:x="36860" fg:w="134"/><text x="74.9198%" y="351.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (220 samples, 0.45%)</title><rect x="74.5037%" y="357" width="0.4457%" height="15" fill="rgb(206,201,28)" fg:x="36778" fg:w="220"/><text x="74.7537%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_expression::values::Scalar&gt; (6 samples, 0.01%)</title><rect x="74.9595%" y="341" width="0.0122%" height="15" fill="rgb(224,184,23)" fg:x="37003" fg:w="6"/><text x="75.2095%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (13 samples, 0.03%)</title><rect x="74.9595%" y="357" width="0.0263%" height="15" fill="rgb(208,139,48)" fg:x="37003" fg:w="13"/><text x="75.2095%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.01%)</title><rect x="74.9757%" y="341" width="0.0101%" height="15" fill="rgb(208,130,10)" fg:x="37011" fg:w="5"/><text x="75.2257%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (247 samples, 0.50%)</title><rect x="74.5037%" y="373" width="0.5004%" height="15" fill="rgb(211,213,45)" fg:x="36778" fg:w="247"/><text x="74.7537%" y="383.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (345 samples, 0.70%)</title><rect x="74.3112%" y="389" width="0.6989%" height="15" fill="rgb(235,100,30)" fg:x="36683" fg:w="345"/><text x="74.5612%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (346 samples, 0.70%)</title><rect x="74.3112%" y="405" width="0.7009%" height="15" fill="rgb(206,144,31)" fg:x="36683" fg:w="346"/><text x="74.5612%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::join_node::JoinNode::cardinality (1,774 samples, 3.59%)</title><rect x="71.4265%" y="421" width="3.5937%" height="15" fill="rgb(224,200,26)" fg:x="35259" fg:w="1774"/><text x="71.6765%" y="431.50">data..</text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (5 samples, 0.01%)</title><rect x="75.0344%" y="373" width="0.0101%" height="15" fill="rgb(247,104,53)" fg:x="37040" fg:w="5"/><text x="75.2844%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (10 samples, 0.02%)</title><rect x="75.0284%" y="389" width="0.0203%" height="15" fill="rgb(220,14,17)" fg:x="37037" fg:w="10"/><text x="75.2784%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (15 samples, 0.03%)</title><rect x="75.0203%" y="421" width="0.0304%" height="15" fill="rgb(230,140,40)" fg:x="37033" fg:w="15"/><text x="75.2703%" y="431.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (11 samples, 0.02%)</title><rect x="75.0284%" y="405" width="0.0223%" height="15" fill="rgb(229,2,41)" fg:x="37037" fg:w="11"/><text x="75.2784%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::emit_csg_cmp (1,820 samples, 3.69%)</title><rect x="71.3658%" y="437" width="3.6869%" height="15" fill="rgb(232,89,16)" fg:x="35229" fg:w="1820"/><text x="71.6158%" y="447.50">data..</text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="75.0587%" y="357" width="0.0142%" height="15" fill="rgb(247,59,52)" fg:x="37052" fg:w="7"/><text x="75.3087%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="75.0628%" y="341" width="0.0101%" height="15" fill="rgb(226,110,21)" fg:x="37054" fg:w="5"/><text x="75.3128%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.01%)</title><rect x="75.0628%" y="325" width="0.0101%" height="15" fill="rgb(224,176,43)" fg:x="37054" fg:w="5"/><text x="75.3128%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="75.0587%" y="373" width="0.0182%" height="15" fill="rgb(221,73,6)" fg:x="37052" fg:w="9"/><text x="75.3087%" y="383.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="75.0587%" y="389" width="0.0203%" height="15" fill="rgb(232,78,19)" fg:x="37052" fg:w="10"/><text x="75.3087%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="75.0851%" y="325" width="0.0101%" height="15" fill="rgb(233,112,48)" fg:x="37065" fg:w="5"/><text x="75.3351%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="75.0810%" y="341" width="0.0162%" height="15" fill="rgb(243,131,47)" fg:x="37063" fg:w="8"/><text x="75.3310%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="75.0810%" y="357" width="0.0223%" height="15" fill="rgb(226,51,1)" fg:x="37063" fg:w="11"/><text x="75.3310%" y="367.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.03%)</title><rect x="75.0790%" y="373" width="0.0284%" height="15" fill="rgb(247,58,7)" fg:x="37062" fg:w="14"/><text x="75.3290%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="75.1094%" y="325" width="0.0142%" height="15" fill="rgb(209,7,32)" fg:x="37077" fg:w="7"/><text x="75.3594%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="75.1114%" y="309" width="0.0122%" height="15" fill="rgb(209,39,41)" fg:x="37078" fg:w="6"/><text x="75.3614%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="75.1074%" y="341" width="0.0223%" height="15" fill="rgb(226,182,46)" fg:x="37076" fg:w="11"/><text x="75.3574%" y="351.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="75.1074%" y="357" width="0.0243%" height="15" fill="rgb(230,219,10)" fg:x="37076" fg:w="12"/><text x="75.3574%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="75.1317%" y="309" width="0.0101%" height="15" fill="rgb(227,175,30)" fg:x="37088" fg:w="5"/><text x="75.3817%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="75.1317%" y="325" width="0.0122%" height="15" fill="rgb(217,2,50)" fg:x="37088" fg:w="6"/><text x="75.3817%" y="335.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="75.1317%" y="341" width="0.0243%" height="15" fill="rgb(229,160,0)" fg:x="37088" fg:w="12"/><text x="75.3817%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (18 samples, 0.04%)</title><rect x="75.1317%" y="357" width="0.0365%" height="15" fill="rgb(207,78,37)" fg:x="37088" fg:w="18"/><text x="75.3817%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (35 samples, 0.07%)</title><rect x="75.1074%" y="373" width="0.0709%" height="15" fill="rgb(225,57,0)" fg:x="37076" fg:w="35"/><text x="75.3574%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (51 samples, 0.10%)</title><rect x="75.0790%" y="389" width="0.1033%" height="15" fill="rgb(232,154,2)" fg:x="37062" fg:w="51"/><text x="75.3290%" y="399.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (64 samples, 0.13%)</title><rect x="75.0587%" y="405" width="0.1296%" height="15" fill="rgb(241,212,25)" fg:x="37052" fg:w="64"/><text x="75.3087%" y="415.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="75.1965%" y="357" width="0.0142%" height="15" fill="rgb(226,69,20)" fg:x="37120" fg:w="7"/><text x="75.4465%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="75.1965%" y="373" width="0.0182%" height="15" fill="rgb(247,184,54)" fg:x="37120" fg:w="9"/><text x="75.4465%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="75.2836%" y="309" width="0.0122%" height="15" fill="rgb(210,145,0)" fg:x="37163" fg:w="6"/><text x="75.5336%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.01%)</title><rect x="75.2836%" y="293" width="0.0122%" height="15" fill="rgb(253,82,12)" fg:x="37163" fg:w="6"/><text x="75.5336%" y="303.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (21 samples, 0.04%)</title><rect x="75.2552%" y="325" width="0.0425%" height="15" fill="rgb(245,42,11)" fg:x="37149" fg:w="21"/><text x="75.5052%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (5 samples, 0.01%)</title><rect x="75.2998%" y="293" width="0.0101%" height="15" fill="rgb(219,147,32)" fg:x="37171" fg:w="5"/><text x="75.5498%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (5 samples, 0.01%)</title><rect x="75.2998%" y="277" width="0.0101%" height="15" fill="rgb(246,12,7)" fg:x="37171" fg:w="5"/><text x="75.5498%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.02%)</title><rect x="75.2978%" y="325" width="0.0162%" height="15" fill="rgb(243,50,9)" fg:x="37170" fg:w="8"/><text x="75.5478%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="75.2998%" y="309" width="0.0142%" height="15" fill="rgb(219,149,6)" fg:x="37171" fg:w="7"/><text x="75.5498%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (44 samples, 0.09%)</title><rect x="75.2289%" y="357" width="0.0891%" height="15" fill="rgb(241,51,42)" fg:x="37136" fg:w="44"/><text x="75.4789%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (43 samples, 0.09%)</title><rect x="75.2309%" y="341" width="0.0871%" height="15" fill="rgb(226,128,27)" fg:x="37137" fg:w="43"/><text x="75.4809%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="75.3180%" y="357" width="0.0122%" height="15" fill="rgb(244,144,4)" fg:x="37180" fg:w="6"/><text x="75.5680%" y="367.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="75.3829%" y="293" width="0.0101%" height="15" fill="rgb(221,4,13)" fg:x="37212" fg:w="5"/><text x="75.6329%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.02%)</title><rect x="75.3930%" y="293" width="0.0182%" height="15" fill="rgb(208,170,28)" fg:x="37217" fg:w="9"/><text x="75.6430%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.01%)</title><rect x="75.3971%" y="277" width="0.0142%" height="15" fill="rgb(226,131,13)" fg:x="37219" fg:w="7"/><text x="75.6471%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (7 samples, 0.01%)</title><rect x="75.3971%" y="261" width="0.0142%" height="15" fill="rgb(215,72,41)" fg:x="37219" fg:w="7"/><text x="75.6471%" y="271.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (20 samples, 0.04%)</title><rect x="75.3727%" y="309" width="0.0405%" height="15" fill="rgb(243,108,20)" fg:x="37207" fg:w="20"/><text x="75.6227%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (37 samples, 0.07%)</title><rect x="75.3484%" y="325" width="0.0750%" height="15" fill="rgb(230,189,17)" fg:x="37195" fg:w="37"/><text x="75.5984%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (41 samples, 0.08%)</title><rect x="75.3424%" y="341" width="0.0831%" height="15" fill="rgb(220,50,17)" fg:x="37192" fg:w="41"/><text x="75.5924%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="75.4315%" y="309" width="0.0142%" height="15" fill="rgb(248,152,48)" fg:x="37236" fg:w="7"/><text x="75.6815%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.01%)</title><rect x="75.4335%" y="293" width="0.0122%" height="15" fill="rgb(244,91,11)" fg:x="37237" fg:w="6"/><text x="75.6835%" y="303.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="75.4254%" y="325" width="0.0223%" height="15" fill="rgb(220,157,5)" fg:x="37233" fg:w="11"/><text x="75.6754%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (13 samples, 0.03%)</title><rect x="75.4254%" y="341" width="0.0263%" height="15" fill="rgb(253,137,8)" fg:x="37233" fg:w="13"/><text x="75.6754%" y="351.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (15 samples, 0.03%)</title><rect x="75.4740%" y="293" width="0.0304%" height="15" fill="rgb(217,137,51)" fg:x="37257" fg:w="15"/><text x="75.7240%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="75.4923%" y="277" width="0.0122%" height="15" fill="rgb(218,209,53)" fg:x="37266" fg:w="6"/><text x="75.7423%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="75.5064%" y="293" width="0.0142%" height="15" fill="rgb(249,137,25)" fg:x="37273" fg:w="7"/><text x="75.7564%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="75.5085%" y="277" width="0.0122%" height="15" fill="rgb(239,155,26)" fg:x="37274" fg:w="6"/><text x="75.7585%" y="287.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (34 samples, 0.07%)</title><rect x="75.4558%" y="325" width="0.0689%" height="15" fill="rgb(227,85,46)" fg:x="37248" fg:w="34"/><text x="75.7058%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (34 samples, 0.07%)</title><rect x="75.4558%" y="309" width="0.0689%" height="15" fill="rgb(251,107,43)" fg:x="37248" fg:w="34"/><text x="75.7058%" y="319.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="75.5449%" y="277" width="0.0203%" height="15" fill="rgb(234,170,33)" fg:x="37292" fg:w="10"/><text x="75.7949%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="75.5510%" y="261" width="0.0142%" height="15" fill="rgb(206,29,35)" fg:x="37295" fg:w="7"/><text x="75.8010%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.01%)</title><rect x="75.5530%" y="245" width="0.0122%" height="15" fill="rgb(227,138,25)" fg:x="37296" fg:w="6"/><text x="75.8030%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.01%)</title><rect x="75.5551%" y="229" width="0.0101%" height="15" fill="rgb(249,131,35)" fg:x="37297" fg:w="5"/><text x="75.8051%" y="239.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (23 samples, 0.05%)</title><rect x="75.5308%" y="293" width="0.0466%" height="15" fill="rgb(239,6,40)" fg:x="37285" fg:w="23"/><text x="75.7808%" y="303.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (26 samples, 0.05%)</title><rect x="75.5308%" y="309" width="0.0527%" height="15" fill="rgb(246,136,47)" fg:x="37285" fg:w="26"/><text x="75.7808%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="75.5834%" y="309" width="0.0122%" height="15" fill="rgb(253,58,26)" fg:x="37311" fg:w="6"/><text x="75.8334%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="75.5854%" y="293" width="0.0101%" height="15" fill="rgb(237,141,10)" fg:x="37312" fg:w="5"/><text x="75.8354%" y="303.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="75.5956%" y="261" width="0.0122%" height="15" fill="rgb(234,156,12)" fg:x="37317" fg:w="6"/><text x="75.8456%" y="271.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="75.5956%" y="293" width="0.0182%" height="15" fill="rgb(243,224,36)" fg:x="37317" fg:w="9"/><text x="75.8456%" y="303.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="75.5956%" y="277" width="0.0182%" height="15" fill="rgb(205,229,51)" fg:x="37317" fg:w="9"/><text x="75.8456%" y="287.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (10 samples, 0.02%)</title><rect x="75.5956%" y="309" width="0.0203%" height="15" fill="rgb(223,189,4)" fg:x="37317" fg:w="10"/><text x="75.8456%" y="319.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (43 samples, 0.09%)</title><rect x="75.5308%" y="325" width="0.0871%" height="15" fill="rgb(249,167,54)" fg:x="37285" fg:w="43"/><text x="75.7808%" y="335.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (86 samples, 0.17%)</title><rect x="75.4558%" y="341" width="0.1742%" height="15" fill="rgb(218,34,28)" fg:x="37248" fg:w="86"/><text x="75.7058%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="75.6442%" y="341" width="0.0101%" height="15" fill="rgb(232,109,42)" fg:x="37341" fg:w="5"/><text x="75.8942%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (161 samples, 0.33%)</title><rect x="75.3302%" y="357" width="0.3261%" height="15" fill="rgb(248,214,46)" fg:x="37186" fg:w="161"/><text x="75.5802%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (226 samples, 0.46%)</title><rect x="75.2168%" y="373" width="0.4578%" height="15" fill="rgb(244,216,40)" fg:x="37130" fg:w="226"/><text x="75.4668%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (246 samples, 0.50%)</title><rect x="75.1965%" y="389" width="0.4983%" height="15" fill="rgb(231,226,31)" fg:x="37120" fg:w="246"/><text x="75.4465%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="75.6827%" y="373" width="0.0122%" height="15" fill="rgb(238,38,43)" fg:x="37360" fg:w="6"/><text x="75.9327%" y="383.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (17 samples, 0.03%)</title><rect x="76.4383%" y="357" width="0.0344%" height="15" fill="rgb(208,88,43)" fg:x="37733" fg:w="17"/><text x="76.6883%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (22 samples, 0.04%)</title><rect x="76.4849%" y="341" width="0.0446%" height="15" fill="rgb(205,136,37)" fg:x="37756" fg:w="22"/><text x="76.7349%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (15 samples, 0.03%)</title><rect x="76.4991%" y="325" width="0.0304%" height="15" fill="rgb(237,34,14)" fg:x="37763" fg:w="15"/><text x="76.7491%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (18 samples, 0.04%)</title><rect x="76.5781%" y="293" width="0.0365%" height="15" fill="rgb(236,193,44)" fg:x="37802" fg:w="18"/><text x="76.8281%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (55 samples, 0.11%)</title><rect x="76.5376%" y="325" width="0.1114%" height="15" fill="rgb(231,48,10)" fg:x="37782" fg:w="55"/><text x="76.7876%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (43 samples, 0.09%)</title><rect x="76.5619%" y="309" width="0.0871%" height="15" fill="rgb(213,141,34)" fg:x="37794" fg:w="43"/><text x="76.8119%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (13 samples, 0.03%)</title><rect x="76.6226%" y="293" width="0.0263%" height="15" fill="rgb(249,130,34)" fg:x="37824" fg:w="13"/><text x="76.8726%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (89 samples, 0.18%)</title><rect x="76.4727%" y="357" width="0.1803%" height="15" fill="rgb(219,42,41)" fg:x="37750" fg:w="89"/><text x="76.7227%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (61 samples, 0.12%)</title><rect x="76.5295%" y="341" width="0.1236%" height="15" fill="rgb(224,100,54)" fg:x="37778" fg:w="61"/><text x="76.7795%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (6 samples, 0.01%)</title><rect x="76.6530%" y="357" width="0.0122%" height="15" fill="rgb(229,200,27)" fg:x="37839" fg:w="6"/><text x="76.9030%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (481 samples, 0.97%)</title><rect x="75.6948%" y="373" width="0.9744%" height="15" fill="rgb(217,118,10)" fg:x="37366" fg:w="481"/><text x="75.9448%" y="383.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17 samples, 0.03%)</title><rect x="76.7969%" y="325" width="0.0344%" height="15" fill="rgb(206,22,3)" fg:x="37910" fg:w="17"/><text x="77.0469%" y="335.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (20 samples, 0.04%)</title><rect x="76.8313%" y="325" width="0.0405%" height="15" fill="rgb(232,163,46)" fg:x="37927" fg:w="20"/><text x="77.0813%" y="335.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="76.8840%" y="309" width="0.0101%" height="15" fill="rgb(206,95,13)" fg:x="37953" fg:w="5"/><text x="77.1340%" y="319.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (17 samples, 0.03%)</title><rect x="76.8718%" y="325" width="0.0344%" height="15" fill="rgb(253,154,18)" fg:x="37947" fg:w="17"/><text x="77.1218%" y="335.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (92 samples, 0.19%)</title><rect x="76.7239%" y="341" width="0.1864%" height="15" fill="rgb(219,32,23)" fg:x="37874" fg:w="92"/><text x="76.9739%" y="351.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="76.9184%" y="325" width="0.0122%" height="15" fill="rgb(230,191,45)" fg:x="37970" fg:w="6"/><text x="77.1684%" y="335.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (18 samples, 0.04%)</title><rect x="76.9103%" y="341" width="0.0365%" height="15" fill="rgb(229,64,36)" fg:x="37966" fg:w="18"/><text x="77.1603%" y="351.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (133 samples, 0.27%)</title><rect x="76.6794%" y="357" width="0.2694%" height="15" fill="rgb(205,129,25)" fg:x="37852" fg:w="133"/><text x="76.9294%" y="367.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="77.0298%" y="325" width="0.0122%" height="15" fill="rgb(254,112,7)" fg:x="38025" fg:w="6"/><text x="77.2798%" y="335.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (20 samples, 0.04%)</title><rect x="77.0420%" y="325" width="0.0405%" height="15" fill="rgb(226,53,48)" fg:x="38031" fg:w="20"/><text x="77.2920%" y="335.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.02%)</title><rect x="77.1068%" y="309" width="0.0203%" height="15" fill="rgb(214,153,38)" fg:x="38063" fg:w="10"/><text x="77.3568%" y="319.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (9 samples, 0.02%)</title><rect x="77.1271%" y="309" width="0.0182%" height="15" fill="rgb(243,101,7)" fg:x="38073" fg:w="9"/><text x="77.3771%" y="319.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (84 samples, 0.17%)</title><rect x="76.9812%" y="341" width="0.1702%" height="15" fill="rgb(240,140,22)" fg:x="38001" fg:w="84"/><text x="77.2312%" y="351.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (34 samples, 0.07%)</title><rect x="77.0825%" y="325" width="0.0689%" height="15" fill="rgb(235,114,2)" fg:x="38051" fg:w="34"/><text x="77.3325%" y="335.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="77.1676%" y="325" width="0.0101%" height="15" fill="rgb(242,59,12)" fg:x="38093" fg:w="5"/><text x="77.4176%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="77.1797%" y="325" width="0.0122%" height="15" fill="rgb(252,134,9)" fg:x="38099" fg:w="6"/><text x="77.4297%" y="335.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (24 samples, 0.05%)</title><rect x="77.1514%" y="341" width="0.0486%" height="15" fill="rgb(236,4,44)" fg:x="38085" fg:w="24"/><text x="77.4014%" y="351.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (125 samples, 0.25%)</title><rect x="76.9488%" y="357" width="0.2532%" height="15" fill="rgb(254,172,41)" fg:x="37985" fg:w="125"/><text x="77.1988%" y="367.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="77.2668%" y="341" width="0.0101%" height="15" fill="rgb(244,63,20)" fg:x="38142" fg:w="5"/><text x="77.5168%" y="351.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17 samples, 0.03%)</title><rect x="77.3418%" y="325" width="0.0344%" height="15" fill="rgb(250,73,31)" fg:x="38179" fg:w="17"/><text x="77.5918%" y="335.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (19 samples, 0.04%)</title><rect x="77.3762%" y="325" width="0.0385%" height="15" fill="rgb(241,38,36)" fg:x="38196" fg:w="19"/><text x="77.6262%" y="335.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (71 samples, 0.14%)</title><rect x="77.2770%" y="341" width="0.1438%" height="15" fill="rgb(245,211,2)" fg:x="38147" fg:w="71"/><text x="77.5270%" y="351.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (109 samples, 0.22%)</title><rect x="77.2020%" y="357" width="0.2208%" height="15" fill="rgb(206,120,28)" fg:x="38110" fg:w="109"/><text x="77.4520%" y="367.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (20 samples, 0.04%)</title><rect x="78.2574%" y="309" width="0.0405%" height="15" fill="rgb(211,59,34)" fg:x="38631" fg:w="20"/><text x="78.5074%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.02%)</title><rect x="78.3142%" y="293" width="0.0162%" height="15" fill="rgb(233,168,5)" fg:x="38659" fg:w="8"/><text x="78.5642%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (25 samples, 0.05%)</title><rect x="78.3304%" y="293" width="0.0506%" height="15" fill="rgb(234,33,13)" fg:x="38667" fg:w="25"/><text x="78.5804%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (22 samples, 0.04%)</title><rect x="78.3364%" y="277" width="0.0446%" height="15" fill="rgb(231,150,26)" fg:x="38670" fg:w="22"/><text x="78.5864%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.01%)</title><rect x="78.3709%" y="261" width="0.0101%" height="15" fill="rgb(217,191,4)" fg:x="38687" fg:w="5"/><text x="78.6209%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (30 samples, 0.06%)</title><rect x="78.4256%" y="245" width="0.0608%" height="15" fill="rgb(246,198,38)" fg:x="38714" fg:w="30"/><text x="78.6756%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (67 samples, 0.14%)</title><rect x="78.3992%" y="277" width="0.1357%" height="15" fill="rgb(245,64,37)" fg:x="38701" fg:w="67"/><text x="78.6492%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (59 samples, 0.12%)</title><rect x="78.4154%" y="261" width="0.1195%" height="15" fill="rgb(250,30,36)" fg:x="38709" fg:w="59"/><text x="78.6654%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (21 samples, 0.04%)</title><rect x="78.4924%" y="245" width="0.0425%" height="15" fill="rgb(217,86,53)" fg:x="38747" fg:w="21"/><text x="78.7424%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (125 samples, 0.25%)</title><rect x="78.2979%" y="309" width="0.2532%" height="15" fill="rgb(228,157,16)" fg:x="38651" fg:w="125"/><text x="78.5479%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (82 samples, 0.17%)</title><rect x="78.3851%" y="293" width="0.1661%" height="15" fill="rgb(217,59,31)" fg:x="38694" fg:w="82"/><text x="78.6351%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="78.5350%" y="277" width="0.0162%" height="15" fill="rgb(237,138,41)" fg:x="38768" fg:w="8"/><text x="78.7850%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.01%)</title><rect x="78.5370%" y="261" width="0.0142%" height="15" fill="rgb(227,91,49)" fg:x="38769" fg:w="7"/><text x="78.7870%" y="271.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (558 samples, 1.13%)</title><rect x="77.4329%" y="325" width="1.1304%" height="15" fill="rgb(247,21,44)" fg:x="38224" fg:w="558"/><text x="77.6829%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (6 samples, 0.01%)</title><rect x="78.5512%" y="309" width="0.0122%" height="15" fill="rgb(219,210,51)" fg:x="38776" fg:w="6"/><text x="78.8012%" y="319.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="78.6788%" y="277" width="0.0101%" height="15" fill="rgb(209,140,6)" fg:x="38839" fg:w="5"/><text x="78.9288%" y="287.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (11 samples, 0.02%)</title><rect x="78.6889%" y="277" width="0.0223%" height="15" fill="rgb(221,188,24)" fg:x="38844" fg:w="11"/><text x="78.9389%" y="287.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="78.7173%" y="261" width="0.0122%" height="15" fill="rgb(232,154,20)" fg:x="38858" fg:w="6"/><text x="78.9673%" y="271.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (64 samples, 0.13%)</title><rect x="78.6140%" y="293" width="0.1296%" height="15" fill="rgb(244,137,50)" fg:x="38807" fg:w="64"/><text x="78.8640%" y="303.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (16 samples, 0.03%)</title><rect x="78.7112%" y="277" width="0.0324%" height="15" fill="rgb(225,185,43)" fg:x="38855" fg:w="16"/><text x="78.9612%" y="287.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (7 samples, 0.01%)</title><rect x="78.7294%" y="261" width="0.0142%" height="15" fill="rgb(213,205,38)" fg:x="38864" fg:w="7"/><text x="78.9794%" y="271.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="78.7477%" y="277" width="0.0101%" height="15" fill="rgb(236,73,12)" fg:x="38873" fg:w="5"/><text x="78.9977%" y="287.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (93 samples, 0.19%)</title><rect x="78.5876%" y="309" width="0.1884%" height="15" fill="rgb(235,219,13)" fg:x="38794" fg:w="93"/><text x="78.8376%" y="319.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (16 samples, 0.03%)</title><rect x="78.7436%" y="293" width="0.0324%" height="15" fill="rgb(218,59,36)" fg:x="38871" fg:w="16"/><text x="78.9936%" y="303.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.02%)</title><rect x="78.8814%" y="277" width="0.0243%" height="15" fill="rgb(205,110,39)" fg:x="38939" fg:w="12"/><text x="79.1314%" y="287.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (8 samples, 0.02%)</title><rect x="78.9057%" y="277" width="0.0162%" height="15" fill="rgb(218,206,42)" fg:x="38951" fg:w="8"/><text x="79.1557%" y="287.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (18 samples, 0.04%)</title><rect x="78.9462%" y="261" width="0.0365%" height="15" fill="rgb(248,125,24)" fg:x="38971" fg:w="18"/><text x="79.1962%" y="271.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (11 samples, 0.02%)</title><rect x="78.9827%" y="261" width="0.0223%" height="15" fill="rgb(242,28,27)" fg:x="38989" fg:w="11"/><text x="79.2327%" y="271.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (47 samples, 0.10%)</title><rect x="78.9219%" y="277" width="0.0952%" height="15" fill="rgb(216,228,15)" fg:x="38959" fg:w="47"/><text x="79.1719%" y="287.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (103 samples, 0.21%)</title><rect x="78.8105%" y="293" width="0.2087%" height="15" fill="rgb(235,116,46)" fg:x="38904" fg:w="103"/><text x="79.0605%" y="303.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (121 samples, 0.25%)</title><rect x="78.7760%" y="309" width="0.2451%" height="15" fill="rgb(224,18,32)" fg:x="38887" fg:w="121"/><text x="79.0260%" y="319.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="79.1103%" y="277" width="0.0142%" height="15" fill="rgb(252,5,12)" fg:x="39052" fg:w="7"/><text x="79.3603%" y="287.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (12 samples, 0.02%)</title><rect x="79.1265%" y="277" width="0.0243%" height="15" fill="rgb(251,36,5)" fg:x="39060" fg:w="12"/><text x="79.3765%" y="287.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="79.1650%" y="261" width="0.0122%" height="15" fill="rgb(217,53,14)" fg:x="39079" fg:w="6"/><text x="79.4150%" y="271.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (11 samples, 0.02%)</title><rect x="79.1771%" y="261" width="0.0223%" height="15" fill="rgb(215,86,45)" fg:x="39085" fg:w="11"/><text x="79.4271%" y="271.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (29 samples, 0.06%)</title><rect x="79.1508%" y="277" width="0.0587%" height="15" fill="rgb(242,169,11)" fg:x="39072" fg:w="29"/><text x="79.4008%" y="287.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (69 samples, 0.14%)</title><rect x="79.0758%" y="293" width="0.1398%" height="15" fill="rgb(211,213,45)" fg:x="39035" fg:w="69"/><text x="79.3258%" y="303.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (98 samples, 0.20%)</title><rect x="79.0211%" y="309" width="0.1985%" height="15" fill="rgb(205,88,11)" fg:x="39008" fg:w="98"/><text x="79.2711%" y="319.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (14 samples, 0.03%)</title><rect x="79.8132%" y="261" width="0.0284%" height="15" fill="rgb(252,69,26)" fg:x="39399" fg:w="14"/><text x="80.0632%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (11 samples, 0.02%)</title><rect x="79.8618%" y="229" width="0.0223%" height="15" fill="rgb(246,123,37)" fg:x="39423" fg:w="11"/><text x="80.1118%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.01%)</title><rect x="79.8740%" y="213" width="0.0101%" height="15" fill="rgb(212,205,5)" fg:x="39429" fg:w="5"/><text x="80.1240%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (15 samples, 0.03%)</title><rect x="79.8578%" y="245" width="0.0304%" height="15" fill="rgb(253,148,0)" fg:x="39421" fg:w="15"/><text x="80.1078%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (18 samples, 0.04%)</title><rect x="79.9388%" y="197" width="0.0365%" height="15" fill="rgb(239,22,4)" fg:x="39461" fg:w="18"/><text x="80.1888%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (52 samples, 0.11%)</title><rect x="79.9024%" y="229" width="0.1053%" height="15" fill="rgb(226,26,53)" fg:x="39443" fg:w="52"/><text x="80.1524%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (44 samples, 0.09%)</title><rect x="79.9186%" y="213" width="0.0891%" height="15" fill="rgb(225,229,45)" fg:x="39451" fg:w="44"/><text x="80.1686%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (14 samples, 0.03%)</title><rect x="79.9793%" y="197" width="0.0284%" height="15" fill="rgb(220,60,37)" fg:x="39481" fg:w="14"/><text x="80.2293%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (88 samples, 0.18%)</title><rect x="79.8416%" y="261" width="0.1783%" height="15" fill="rgb(217,180,35)" fg:x="39413" fg:w="88"/><text x="80.0916%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (62 samples, 0.13%)</title><rect x="79.8943%" y="245" width="0.1256%" height="15" fill="rgb(229,7,53)" fg:x="39439" fg:w="62"/><text x="80.1443%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="80.0077%" y="229" width="0.0122%" height="15" fill="rgb(254,137,3)" fg:x="39495" fg:w="6"/><text x="80.2577%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="80.0097%" y="213" width="0.0101%" height="15" fill="rgb(215,140,41)" fg:x="39496" fg:w="5"/><text x="80.2597%" y="223.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (393 samples, 0.80%)</title><rect x="79.2318%" y="277" width="0.7961%" height="15" fill="rgb(250,80,15)" fg:x="39112" fg:w="393"/><text x="79.4818%" y="287.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="80.0827%" y="229" width="0.0101%" height="15" fill="rgb(252,191,6)" fg:x="39532" fg:w="5"/><text x="80.3327%" y="239.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (12 samples, 0.02%)</title><rect x="80.0928%" y="229" width="0.0243%" height="15" fill="rgb(246,217,18)" fg:x="39537" fg:w="12"/><text x="80.3428%" y="239.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (28 samples, 0.06%)</title><rect x="80.0664%" y="245" width="0.0567%" height="15" fill="rgb(223,93,7)" fg:x="39524" fg:w="28"/><text x="80.3164%" y="255.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.02%)</title><rect x="80.1232%" y="245" width="0.0182%" height="15" fill="rgb(225,55,52)" fg:x="39552" fg:w="9"/><text x="80.3732%" y="255.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (48 samples, 0.10%)</title><rect x="80.0462%" y="261" width="0.0972%" height="15" fill="rgb(240,31,24)" fg:x="39514" fg:w="48"/><text x="80.2962%" y="271.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="80.1900%" y="229" width="0.0101%" height="15" fill="rgb(205,56,52)" fg:x="39585" fg:w="5"/><text x="80.4400%" y="239.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (6 samples, 0.01%)</title><rect x="80.2001%" y="229" width="0.0122%" height="15" fill="rgb(246,146,12)" fg:x="39590" fg:w="6"/><text x="80.4501%" y="239.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (44 samples, 0.09%)</title><rect x="80.1536%" y="245" width="0.0891%" height="15" fill="rgb(239,84,36)" fg:x="39567" fg:w="44"/><text x="80.4036%" y="255.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (15 samples, 0.03%)</title><rect x="80.2123%" y="229" width="0.0304%" height="15" fill="rgb(207,41,40)" fg:x="39596" fg:w="15"/><text x="80.4623%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="80.2710%" y="229" width="0.0101%" height="15" fill="rgb(241,179,25)" fg:x="39625" fg:w="5"/><text x="80.5210%" y="239.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (23 samples, 0.05%)</title><rect x="80.2427%" y="245" width="0.0466%" height="15" fill="rgb(210,0,34)" fg:x="39611" fg:w="23"/><text x="80.4927%" y="255.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (74 samples, 0.15%)</title><rect x="80.1434%" y="261" width="0.1499%" height="15" fill="rgb(225,217,29)" fg:x="39562" fg:w="74"/><text x="80.3934%" y="271.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (8 samples, 0.02%)</title><rect x="80.3723%" y="229" width="0.0162%" height="15" fill="rgb(216,191,38)" fg:x="39675" fg:w="8"/><text x="80.6223%" y="239.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (23 samples, 0.05%)</title><rect x="80.3885%" y="229" width="0.0466%" height="15" fill="rgb(232,140,52)" fg:x="39683" fg:w="23"/><text x="80.6385%" y="239.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (50 samples, 0.10%)</title><rect x="80.3359%" y="245" width="0.1013%" height="15" fill="rgb(223,158,51)" fg:x="39657" fg:w="50"/><text x="80.5859%" y="255.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (74 samples, 0.15%)</title><rect x="80.2933%" y="261" width="0.1499%" height="15" fill="rgb(235,29,51)" fg:x="39636" fg:w="74"/><text x="80.5433%" y="271.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (10 samples, 0.02%)</title><rect x="80.8099%" y="213" width="0.0203%" height="15" fill="rgb(215,181,18)" fg:x="39891" fg:w="10"/><text x="81.0599%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (9 samples, 0.02%)</title><rect x="80.8464%" y="181" width="0.0182%" height="15" fill="rgb(227,125,34)" fg:x="39909" fg:w="9"/><text x="81.0964%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (15 samples, 0.03%)</title><rect x="80.8383%" y="197" width="0.0304%" height="15" fill="rgb(230,197,49)" fg:x="39905" fg:w="15"/><text x="81.0883%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (22 samples, 0.04%)</title><rect x="80.8747%" y="181" width="0.0446%" height="15" fill="rgb(239,141,16)" fg:x="39923" fg:w="22"/><text x="81.1247%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (20 samples, 0.04%)</title><rect x="80.8788%" y="165" width="0.0405%" height="15" fill="rgb(225,105,43)" fg:x="39925" fg:w="20"/><text x="81.1288%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (13 samples, 0.03%)</title><rect x="80.8930%" y="149" width="0.0263%" height="15" fill="rgb(214,131,14)" fg:x="39932" fg:w="13"/><text x="81.1430%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (50 samples, 0.10%)</title><rect x="80.8302%" y="213" width="0.1013%" height="15" fill="rgb(229,177,11)" fg:x="39901" fg:w="50"/><text x="81.0802%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (31 samples, 0.06%)</title><rect x="80.8686%" y="197" width="0.0628%" height="15" fill="rgb(231,180,14)" fg:x="39920" fg:w="31"/><text x="81.1186%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="80.9193%" y="181" width="0.0122%" height="15" fill="rgb(232,88,2)" fg:x="39945" fg:w="6"/><text x="81.1693%" y="191.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (243 samples, 0.49%)</title><rect x="80.4473%" y="229" width="0.4923%" height="15" fill="rgb(205,220,8)" fg:x="39712" fg:w="243"/><text x="80.6973%" y="239.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="81.0023%" y="181" width="0.0101%" height="15" fill="rgb(225,23,53)" fg:x="39986" fg:w="5"/><text x="81.2523%" y="191.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.01%)</title><rect x="81.0125%" y="181" width="0.0142%" height="15" fill="rgb(213,62,29)" fg:x="39991" fg:w="7"/><text x="81.2625%" y="191.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (28 samples, 0.06%)</title><rect x="80.9720%" y="197" width="0.0567%" height="15" fill="rgb(227,75,7)" fg:x="39971" fg:w="28"/><text x="81.2220%" y="207.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.02%)</title><rect x="81.0287%" y="197" width="0.0203%" height="15" fill="rgb(207,105,14)" fg:x="39999" fg:w="10"/><text x="81.2787%" y="207.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (49 samples, 0.10%)</title><rect x="80.9517%" y="213" width="0.0993%" height="15" fill="rgb(245,62,29)" fg:x="39961" fg:w="49"/><text x="81.2017%" y="223.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11 samples, 0.02%)</title><rect x="81.0591%" y="197" width="0.0223%" height="15" fill="rgb(236,202,4)" fg:x="40014" fg:w="11"/><text x="81.3091%" y="207.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (25 samples, 0.05%)</title><rect x="81.0510%" y="213" width="0.0506%" height="15" fill="rgb(250,67,1)" fg:x="40010" fg:w="25"/><text x="81.3010%" y="223.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.02%)</title><rect x="81.0814%" y="197" width="0.0203%" height="15" fill="rgb(253,115,44)" fg:x="40025" fg:w="10"/><text x="81.3314%" y="207.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (22 samples, 0.04%)</title><rect x="81.1158%" y="197" width="0.0446%" height="15" fill="rgb(251,139,18)" fg:x="40042" fg:w="22"/><text x="81.3658%" y="207.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.02%)</title><rect x="81.1421%" y="181" width="0.0182%" height="15" fill="rgb(218,22,32)" fg:x="40055" fg:w="9"/><text x="81.3921%" y="191.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (31 samples, 0.06%)</title><rect x="81.1016%" y="213" width="0.0628%" height="15" fill="rgb(243,53,5)" fg:x="40035" fg:w="31"/><text x="81.3516%" y="223.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="81.3508%" y="165" width="0.0101%" height="15" fill="rgb(227,56,16)" fg:x="40158" fg:w="5"/><text x="81.6008%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.01%)</title><rect x="81.3731%" y="149" width="0.0142%" height="15" fill="rgb(245,53,0)" fg:x="40169" fg:w="7"/><text x="81.6231%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (12 samples, 0.02%)</title><rect x="81.3893%" y="133" width="0.0243%" height="15" fill="rgb(216,170,35)" fg:x="40177" fg:w="12"/><text x="81.6393%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (11 samples, 0.02%)</title><rect x="81.3913%" y="117" width="0.0223%" height="15" fill="rgb(211,200,8)" fg:x="40178" fg:w="11"/><text x="81.6413%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (31 samples, 0.06%)</title><rect x="81.3609%" y="165" width="0.0628%" height="15" fill="rgb(228,204,44)" fg:x="40163" fg:w="31"/><text x="81.6109%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (18 samples, 0.04%)</title><rect x="81.3872%" y="149" width="0.0365%" height="15" fill="rgb(214,121,17)" fg:x="40176" fg:w="18"/><text x="81.6372%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="81.4136%" y="133" width="0.0101%" height="15" fill="rgb(233,64,38)" fg:x="40189" fg:w="5"/><text x="81.6636%" y="143.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (128 samples, 0.26%)</title><rect x="81.1664%" y="181" width="0.2593%" height="15" fill="rgb(253,54,19)" fg:x="40067" fg:w="128"/><text x="81.4164%" y="191.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (10 samples, 0.02%)</title><rect x="81.4278%" y="165" width="0.0203%" height="15" fill="rgb(253,94,18)" fg:x="40196" fg:w="10"/><text x="81.6778%" y="175.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (8 samples, 0.02%)</title><rect x="81.4480%" y="165" width="0.0162%" height="15" fill="rgb(227,57,52)" fg:x="40206" fg:w="8"/><text x="81.6980%" y="175.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="81.4642%" y="165" width="0.0122%" height="15" fill="rgb(230,228,50)" fg:x="40214" fg:w="6"/><text x="81.7142%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.02%)</title><rect x="81.5311%" y="117" width="0.0203%" height="15" fill="rgb(217,205,27)" fg:x="40247" fg:w="10"/><text x="81.7811%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="81.5372%" y="101" width="0.0142%" height="15" fill="rgb(252,71,50)" fg:x="40250" fg:w="7"/><text x="81.7872%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (7 samples, 0.01%)</title><rect x="81.5372%" y="85" width="0.0142%" height="15" fill="rgb(209,86,4)" fg:x="40250" fg:w="7"/><text x="81.7872%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (6 samples, 0.01%)</title><rect x="81.5392%" y="69" width="0.0122%" height="15" fill="rgb(229,94,0)" fg:x="40251" fg:w="6"/><text x="81.7892%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (5 samples, 0.01%)</title><rect x="81.5412%" y="53" width="0.0101%" height="15" fill="rgb(252,223,21)" fg:x="40252" fg:w="5"/><text x="81.7912%" y="63.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (37 samples, 0.07%)</title><rect x="81.4784%" y="133" width="0.0750%" height="15" fill="rgb(230,210,4)" fg:x="40221" fg:w="37"/><text x="81.7284%" y="143.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (41 samples, 0.08%)</title><rect x="81.4764%" y="165" width="0.0831%" height="15" fill="rgb(240,149,38)" fg:x="40220" fg:w="41"/><text x="81.7264%" y="175.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (40 samples, 0.08%)</title><rect x="81.4784%" y="149" width="0.0810%" height="15" fill="rgb(254,105,20)" fg:x="40221" fg:w="40"/><text x="81.7284%" y="159.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (79 samples, 0.16%)</title><rect x="81.4257%" y="181" width="0.1600%" height="15" fill="rgb(253,87,46)" fg:x="40195" fg:w="79"/><text x="81.6757%" y="191.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (215 samples, 0.44%)</title><rect x="81.1644%" y="213" width="0.4355%" height="15" fill="rgb(253,116,33)" fg:x="40066" fg:w="215"/><text x="81.4144%" y="223.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (215 samples, 0.44%)</title><rect x="81.1644%" y="197" width="0.4355%" height="15" fill="rgb(229,198,5)" fg:x="40066" fg:w="215"/><text x="81.4144%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.01%)</title><rect x="81.5878%" y="181" width="0.0122%" height="15" fill="rgb(242,38,37)" fg:x="40275" fg:w="6"/><text x="81.8378%" y="191.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (10 samples, 0.02%)</title><rect x="81.6000%" y="213" width="0.0203%" height="15" fill="rgb(242,69,53)" fg:x="40281" fg:w="10"/><text x="81.8500%" y="223.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::update_statistic (7 samples, 0.01%)</title><rect x="81.6202%" y="213" width="0.0142%" height="15" fill="rgb(249,80,16)" fg:x="40291" fg:w="7"/><text x="81.8702%" y="223.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (9 samples, 0.02%)</title><rect x="81.6344%" y="213" width="0.0182%" height="15" fill="rgb(206,128,11)" fg:x="40298" fg:w="9"/><text x="81.8844%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (7 samples, 0.01%)</title><rect x="81.6648%" y="197" width="0.0142%" height="15" fill="rgb(212,35,20)" fg:x="40313" fg:w="7"/><text x="81.9148%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.02%)</title><rect x="81.6628%" y="213" width="0.0182%" height="15" fill="rgb(236,79,13)" fg:x="40312" fg:w="9"/><text x="81.9128%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="81.6850%" y="213" width="0.0101%" height="15" fill="rgb(233,123,3)" fg:x="40323" fg:w="5"/><text x="81.9350%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="81.6850%" y="197" width="0.0101%" height="15" fill="rgb(214,93,52)" fg:x="40323" fg:w="5"/><text x="81.9350%" y="207.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (376 samples, 0.76%)</title><rect x="80.9396%" y="229" width="0.7617%" height="15" fill="rgb(251,37,40)" fg:x="39955" fg:w="376"/><text x="81.1896%" y="239.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (644 samples, 1.30%)</title><rect x="80.4432%" y="245" width="1.3046%" height="15" fill="rgb(227,80,54)" fg:x="39710" fg:w="644"/><text x="80.6932%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (15 samples, 0.03%)</title><rect x="81.7174%" y="229" width="0.0304%" height="15" fill="rgb(254,48,11)" fg:x="40339" fg:w="15"/><text x="81.9674%" y="239.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (645 samples, 1.31%)</title><rect x="80.4432%" y="261" width="1.3066%" height="15" fill="rgb(235,193,26)" fg:x="39710" fg:w="645"/><text x="80.6932%" y="271.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (11 samples, 0.02%)</title><rect x="81.7519%" y="261" width="0.0223%" height="15" fill="rgb(229,99,21)" fg:x="40356" fg:w="11"/><text x="82.0019%" y="271.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::update_statistic (11 samples, 0.02%)</title><rect x="81.7742%" y="261" width="0.0223%" height="15" fill="rgb(211,140,41)" fg:x="40367" fg:w="11"/><text x="82.0242%" y="271.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.02%)</title><rect x="81.8046%" y="245" width="0.0182%" height="15" fill="rgb(240,227,30)" fg:x="40382" fg:w="9"/><text x="82.0546%" y="255.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (16 samples, 0.03%)</title><rect x="81.7965%" y="261" width="0.0324%" height="15" fill="rgb(215,224,45)" fg:x="40378" fg:w="16"/><text x="82.0465%" y="271.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (16 samples, 0.03%)</title><rect x="81.8289%" y="261" width="0.0324%" height="15" fill="rgb(206,123,31)" fg:x="40394" fg:w="16"/><text x="82.0789%" y="271.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.01%)</title><rect x="81.8613%" y="261" width="0.0142%" height="15" fill="rgb(210,138,16)" fg:x="40410" fg:w="7"/><text x="82.1113%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.02%)</title><rect x="81.8795%" y="261" width="0.0182%" height="15" fill="rgb(228,57,28)" fg:x="40419" fg:w="9"/><text x="82.1295%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.01%)</title><rect x="81.8876%" y="245" width="0.0101%" height="15" fill="rgb(242,170,10)" fg:x="40423" fg:w="5"/><text x="82.1376%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="81.9018%" y="261" width="0.0142%" height="15" fill="rgb(228,214,39)" fg:x="40430" fg:w="7"/><text x="82.1518%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="81.9038%" y="245" width="0.0122%" height="15" fill="rgb(218,179,33)" fg:x="40431" fg:w="6"/><text x="82.1538%" y="255.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (936 samples, 1.90%)</title><rect x="80.0280%" y="277" width="1.8961%" height="15" fill="rgb(235,193,39)" fg:x="39505" fg:w="936"/><text x="80.2780%" y="287.50">d..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (17 samples, 0.03%)</title><rect x="81.9443%" y="277" width="0.0344%" height="15" fill="rgb(219,221,36)" fg:x="40451" fg:w="17"/><text x="82.1943%" y="287.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (1,361 samples, 2.76%)</title><rect x="79.2237%" y="309" width="2.7571%" height="15" fill="rgb(248,218,19)" fg:x="39108" fg:w="1361"/><text x="79.4737%" y="319.50">da..</text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (1,361 samples, 2.76%)</title><rect x="79.2237%" y="293" width="2.7571%" height="15" fill="rgb(205,50,9)" fg:x="39108" fg:w="1361"/><text x="79.4737%" y="303.50">da..</text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="81.9828%" y="293" width="0.0122%" height="15" fill="rgb(238,81,28)" fg:x="40470" fg:w="6"/><text x="82.2328%" y="303.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (9 samples, 0.02%)</title><rect x="81.9808%" y="309" width="0.0182%" height="15" fill="rgb(235,110,19)" fg:x="40469" fg:w="9"/><text x="82.2308%" y="319.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::update_statistic (10 samples, 0.02%)</title><rect x="81.9990%" y="309" width="0.0203%" height="15" fill="rgb(214,7,14)" fg:x="40478" fg:w="10"/><text x="82.2490%" y="319.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="82.0213%" y="293" width="0.0101%" height="15" fill="rgb(211,77,3)" fg:x="40489" fg:w="5"/><text x="82.2713%" y="303.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (11 samples, 0.02%)</title><rect x="82.0193%" y="309" width="0.0223%" height="15" fill="rgb(229,5,9)" fg:x="40488" fg:w="11"/><text x="82.2693%" y="319.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (18 samples, 0.04%)</title><rect x="82.0416%" y="309" width="0.0365%" height="15" fill="rgb(225,90,11)" fg:x="40499" fg:w="18"/><text x="82.2916%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.02%)</title><rect x="82.0902%" y="309" width="0.0182%" height="15" fill="rgb(242,56,8)" fg:x="40523" fg:w="9"/><text x="82.3402%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_small (5 samples, 0.01%)</title><rect x="82.1084%" y="309" width="0.0101%" height="15" fill="rgb(249,212,39)" fg:x="40532" fg:w="5"/><text x="82.3584%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (1,764 samples, 3.57%)</title><rect x="78.5633%" y="325" width="3.5735%" height="15" fill="rgb(236,90,9)" fg:x="38782" fg:w="1764"/><text x="78.8133%" y="335.50">data..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.01%)</title><rect x="82.1246%" y="309" width="0.0122%" height="15" fill="rgb(206,88,35)" fg:x="40540" fg:w="6"/><text x="82.3746%" y="319.50"></text></g><g><title>databend-query`common_base::runtime::runtime_tracker::ThreadTracker::alloc (7 samples, 0.01%)</title><rect x="82.1408%" y="325" width="0.0142%" height="15" fill="rgb(205,126,30)" fg:x="40548" fg:w="7"/><text x="82.3908%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (21 samples, 0.04%)</title><rect x="82.1651%" y="325" width="0.0425%" height="15" fill="rgb(230,176,12)" fg:x="40560" fg:w="21"/><text x="82.4151%" y="335.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (2,364 samples, 4.79%)</title><rect x="77.4289%" y="357" width="4.7889%" height="15" fill="rgb(243,19,9)" fg:x="38222" fg:w="2364"/><text x="77.6789%" y="367.50">databe..</text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (2,363 samples, 4.79%)</title><rect x="77.4309%" y="341" width="4.7869%" height="15" fill="rgb(245,171,17)" fg:x="38223" fg:w="2363"/><text x="77.6809%" y="351.50">databe..</text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (10 samples, 0.02%)</title><rect x="82.2178%" y="341" width="0.0203%" height="15" fill="rgb(227,52,21)" fg:x="40586" fg:w="10"/><text x="82.4678%" y="351.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="82.2279%" y="325" width="0.0101%" height="15" fill="rgb(238,69,14)" fg:x="40591" fg:w="5"/><text x="82.4779%" y="335.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (5 samples, 0.01%)</title><rect x="82.2381%" y="341" width="0.0101%" height="15" fill="rgb(241,156,39)" fg:x="40596" fg:w="5"/><text x="82.4881%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (17 samples, 0.03%)</title><rect x="82.2178%" y="357" width="0.0344%" height="15" fill="rgb(212,227,28)" fg:x="40586" fg:w="17"/><text x="82.4678%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::update_statistic (7 samples, 0.01%)</title><rect x="82.2522%" y="357" width="0.0142%" height="15" fill="rgb(209,118,27)" fg:x="40603" fg:w="7"/><text x="82.5022%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (5 samples, 0.01%)</title><rect x="82.2563%" y="341" width="0.0101%" height="15" fill="rgb(226,102,5)" fg:x="40605" fg:w="5"/><text x="82.5063%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (7 samples, 0.01%)</title><rect x="82.2664%" y="357" width="0.0142%" height="15" fill="rgb(223,34,3)" fg:x="40610" fg:w="7"/><text x="82.5164%" y="367.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (18 samples, 0.04%)</title><rect x="82.2826%" y="357" width="0.0365%" height="15" fill="rgb(221,81,38)" fg:x="40618" fg:w="18"/><text x="82.5326%" y="367.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="82.3191%" y="357" width="0.0101%" height="15" fill="rgb(236,219,28)" fg:x="40636" fg:w="5"/><text x="82.5691%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="82.3313%" y="357" width="0.0101%" height="15" fill="rgb(213,200,14)" fg:x="40642" fg:w="5"/><text x="82.5813%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_small (6 samples, 0.01%)</title><rect x="82.3414%" y="357" width="0.0122%" height="15" fill="rgb(240,33,19)" fg:x="40647" fg:w="6"/><text x="82.5914%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (2,812 samples, 5.70%)</title><rect x="76.6692%" y="373" width="5.6965%" height="15" fill="rgb(233,113,27)" fg:x="37847" fg:w="2812"/><text x="76.9192%" y="383.50">databen..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.01%)</title><rect x="82.3556%" y="357" width="0.0101%" height="15" fill="rgb(220,221,18)" fg:x="40654" fg:w="5"/><text x="82.6056%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (28 samples, 0.06%)</title><rect x="82.3859%" y="373" width="0.0567%" height="15" fill="rgb(238,92,8)" fg:x="40669" fg:w="28"/><text x="82.6359%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (3,334 samples, 6.75%)</title><rect x="75.6948%" y="389" width="6.7539%" height="15" fill="rgb(222,164,16)" fg:x="37366" fg:w="3334"/><text x="75.9448%" y="399.50">databend-..</text></g><g><title>libsystem_malloc.dylib`free (15 samples, 0.03%)</title><rect x="82.6999%" y="357" width="0.0304%" height="15" fill="rgb(241,119,3)" fg:x="40824" fg:w="15"/><text x="82.9499%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (6 samples, 0.01%)</title><rect x="82.7182%" y="341" width="0.0122%" height="15" fill="rgb(241,44,8)" fg:x="40833" fg:w="6"/><text x="82.9682%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (11 samples, 0.02%)</title><rect x="82.7364%" y="357" width="0.0223%" height="15" fill="rgb(230,36,40)" fg:x="40842" fg:w="11"/><text x="82.9864%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (150 samples, 0.30%)</title><rect x="82.4650%" y="373" width="0.3039%" height="15" fill="rgb(243,16,36)" fg:x="40708" fg:w="150"/><text x="82.7150%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (5 samples, 0.01%)</title><rect x="82.7587%" y="357" width="0.0101%" height="15" fill="rgb(231,4,26)" fg:x="40853" fg:w="5"/><text x="83.0087%" y="367.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (18 samples, 0.04%)</title><rect x="82.7688%" y="373" width="0.0365%" height="15" fill="rgb(240,9,31)" fg:x="40858" fg:w="18"/><text x="83.0188%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_size (6 samples, 0.01%)</title><rect x="82.8174%" y="357" width="0.0122%" height="15" fill="rgb(207,173,15)" fg:x="40882" fg:w="6"/><text x="83.0674%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.04%)</title><rect x="82.8053%" y="373" width="0.0446%" height="15" fill="rgb(224,192,53)" fg:x="40876" fg:w="22"/><text x="83.0553%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (10 samples, 0.02%)</title><rect x="82.8296%" y="357" width="0.0203%" height="15" fill="rgb(223,67,28)" fg:x="40888" fg:w="10"/><text x="83.0796%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (9 samples, 0.02%)</title><rect x="82.8316%" y="341" width="0.0182%" height="15" fill="rgb(211,20,47)" fg:x="40889" fg:w="9"/><text x="83.0816%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (29 samples, 0.06%)</title><rect x="82.9248%" y="357" width="0.0587%" height="15" fill="rgb(240,228,2)" fg:x="40935" fg:w="29"/><text x="83.1748%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_find_by_ptr (6 samples, 0.01%)</title><rect x="82.9836%" y="357" width="0.0122%" height="15" fill="rgb(248,151,12)" fg:x="40964" fg:w="6"/><text x="83.2336%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_small (112 samples, 0.23%)</title><rect x="82.8499%" y="373" width="0.2269%" height="15" fill="rgb(244,8,39)" fg:x="40898" fg:w="112"/><text x="83.0999%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (39 samples, 0.08%)</title><rect x="82.9977%" y="357" width="0.0790%" height="15" fill="rgb(222,26,8)" fg:x="40971" fg:w="39"/><text x="83.2477%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (322 samples, 0.65%)</title><rect x="82.4508%" y="389" width="0.6523%" height="15" fill="rgb(213,106,44)" fg:x="40701" fg:w="322"/><text x="82.7008%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.03%)</title><rect x="83.3745%" y="325" width="0.0344%" height="15" fill="rgb(214,129,20)" fg:x="41157" fg:w="17"/><text x="83.6245%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (10 samples, 0.02%)</title><rect x="83.3887%" y="309" width="0.0203%" height="15" fill="rgb(212,32,13)" fg:x="41164" fg:w="10"/><text x="83.6387%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (151 samples, 0.31%)</title><rect x="83.1314%" y="341" width="0.3059%" height="15" fill="rgb(208,168,33)" fg:x="41037" fg:w="151"/><text x="83.3814%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (13 samples, 0.03%)</title><rect x="83.4110%" y="325" width="0.0263%" height="15" fill="rgb(231,207,8)" fg:x="41175" fg:w="13"/><text x="83.6610%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (16 samples, 0.03%)</title><rect x="83.4373%" y="341" width="0.0324%" height="15" fill="rgb(235,219,23)" fg:x="41188" fg:w="16"/><text x="83.6873%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (5 samples, 0.01%)</title><rect x="83.4697%" y="341" width="0.0101%" height="15" fill="rgb(226,216,26)" fg:x="41204" fg:w="5"/><text x="83.7197%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (20 samples, 0.04%)</title><rect x="83.4799%" y="341" width="0.0405%" height="15" fill="rgb(239,137,16)" fg:x="41209" fg:w="20"/><text x="83.7299%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (8 samples, 0.02%)</title><rect x="83.5568%" y="325" width="0.0162%" height="15" fill="rgb(207,12,36)" fg:x="41247" fg:w="8"/><text x="83.8068%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_small (67 samples, 0.14%)</title><rect x="83.5204%" y="341" width="0.1357%" height="15" fill="rgb(210,214,24)" fg:x="41229" fg:w="67"/><text x="83.7704%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (34 samples, 0.07%)</title><rect x="83.5872%" y="325" width="0.0689%" height="15" fill="rgb(206,56,30)" fg:x="41262" fg:w="34"/><text x="83.8372%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (7 samples, 0.01%)</title><rect x="83.6683%" y="341" width="0.0142%" height="15" fill="rgb(228,143,26)" fg:x="41302" fg:w="7"/><text x="83.9183%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (289 samples, 0.59%)</title><rect x="83.1091%" y="357" width="0.5854%" height="15" fill="rgb(216,218,46)" fg:x="41026" fg:w="289"/><text x="83.3591%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.03%)</title><rect x="83.9397%" y="293" width="0.0263%" height="15" fill="rgb(206,6,19)" fg:x="41436" fg:w="13"/><text x="84.1897%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (8 samples, 0.02%)</title><rect x="83.9498%" y="277" width="0.0162%" height="15" fill="rgb(239,177,51)" fg:x="41441" fg:w="8"/><text x="84.1998%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (8 samples, 0.02%)</title><rect x="83.9660%" y="293" width="0.0162%" height="15" fill="rgb(216,55,25)" fg:x="41449" fg:w="8"/><text x="84.2160%" y="303.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (132 samples, 0.27%)</title><rect x="83.7169%" y="309" width="0.2674%" height="15" fill="rgb(231,163,29)" fg:x="41326" fg:w="132"/><text x="83.9669%" y="319.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (21 samples, 0.04%)</title><rect x="83.9843%" y="309" width="0.0425%" height="15" fill="rgb(232,149,50)" fg:x="41458" fg:w="21"/><text x="84.2343%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_size (5 samples, 0.01%)</title><rect x="84.0532%" y="293" width="0.0101%" height="15" fill="rgb(223,142,48)" fg:x="41492" fg:w="5"/><text x="84.3032%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (19 samples, 0.04%)</title><rect x="84.0288%" y="309" width="0.0385%" height="15" fill="rgb(245,83,23)" fg:x="41480" fg:w="19"/><text x="84.2788%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (13 samples, 0.03%)</title><rect x="84.0977%" y="293" width="0.0263%" height="15" fill="rgb(224,63,2)" fg:x="41514" fg:w="13"/><text x="84.3477%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_small (52 samples, 0.11%)</title><rect x="84.0673%" y="309" width="0.1053%" height="15" fill="rgb(218,65,53)" fg:x="41499" fg:w="52"/><text x="84.3173%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (23 samples, 0.05%)</title><rect x="84.1261%" y="293" width="0.0466%" height="15" fill="rgb(221,84,29)" fg:x="41528" fg:w="23"/><text x="84.3761%" y="303.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (243 samples, 0.49%)</title><rect x="83.6966%" y="325" width="0.4923%" height="15" fill="rgb(234,0,32)" fg:x="41316" fg:w="243"/><text x="83.9466%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.02%)</title><rect x="84.3165%" y="261" width="0.0162%" height="15" fill="rgb(206,20,16)" fg:x="41622" fg:w="8"/><text x="84.5665%" y="271.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (66 samples, 0.13%)</title><rect x="84.2071%" y="277" width="0.1337%" height="15" fill="rgb(244,172,18)" fg:x="41568" fg:w="66"/><text x="84.4571%" y="287.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (11 samples, 0.02%)</title><rect x="84.3408%" y="277" width="0.0223%" height="15" fill="rgb(254,133,1)" fg:x="41634" fg:w="11"/><text x="84.5908%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.03%)</title><rect x="84.3692%" y="277" width="0.0344%" height="15" fill="rgb(222,206,41)" fg:x="41648" fg:w="17"/><text x="84.6192%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.01%)</title><rect x="84.3935%" y="261" width="0.0101%" height="15" fill="rgb(212,3,42)" fg:x="41660" fg:w="5"/><text x="84.6435%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (8 samples, 0.02%)</title><rect x="84.4239%" y="261" width="0.0162%" height="15" fill="rgb(241,11,4)" fg:x="41675" fg:w="8"/><text x="84.6739%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_small (36 samples, 0.07%)</title><rect x="84.4036%" y="277" width="0.0729%" height="15" fill="rgb(205,19,26)" fg:x="41665" fg:w="36"/><text x="84.6536%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (16 samples, 0.03%)</title><rect x="84.4441%" y="261" width="0.0324%" height="15" fill="rgb(210,179,32)" fg:x="41685" fg:w="16"/><text x="84.6941%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="84.4765%" y="277" width="0.0122%" height="15" fill="rgb(227,116,49)" fg:x="41701" fg:w="6"/><text x="84.7265%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="84.4765%" y="261" width="0.0122%" height="15" fill="rgb(211,146,6)" fg:x="41701" fg:w="6"/><text x="84.7265%" y="271.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (147 samples, 0.30%)</title><rect x="84.1950%" y="293" width="0.2978%" height="15" fill="rgb(219,44,39)" fg:x="41562" fg:w="147"/><text x="84.4450%" y="303.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (35 samples, 0.07%)</title><rect x="84.4988%" y="245" width="0.0709%" height="15" fill="rgb(234,128,11)" fg:x="41712" fg:w="35"/><text x="84.7488%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_small (8 samples, 0.02%)</title><rect x="84.5799%" y="245" width="0.0162%" height="15" fill="rgb(220,183,53)" fg:x="41752" fg:w="8"/><text x="84.8299%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="84.5961%" y="245" width="0.0101%" height="15" fill="rgb(213,219,32)" fg:x="41760" fg:w="5"/><text x="84.8461%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="84.5961%" y="229" width="0.0101%" height="15" fill="rgb(232,156,16)" fg:x="41760" fg:w="5"/><text x="84.8461%" y="239.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (59 samples, 0.12%)</title><rect x="84.4948%" y="261" width="0.1195%" height="15" fill="rgb(246,135,34)" fg:x="41710" fg:w="59"/><text x="84.7448%" y="271.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (12 samples, 0.02%)</title><rect x="84.6183%" y="213" width="0.0243%" height="15" fill="rgb(241,99,0)" fg:x="41771" fg:w="12"/><text x="84.8683%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="84.6508%" y="213" width="0.0101%" height="15" fill="rgb(222,103,45)" fg:x="41787" fg:w="5"/><text x="84.9008%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_small (7 samples, 0.01%)</title><rect x="84.6609%" y="213" width="0.0142%" height="15" fill="rgb(212,57,4)" fg:x="41792" fg:w="7"/><text x="84.9109%" y="223.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (33 samples, 0.07%)</title><rect x="84.6163%" y="229" width="0.0669%" height="15" fill="rgb(215,68,47)" fg:x="41770" fg:w="33"/><text x="84.8663%" y="239.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (6 samples, 0.01%)</title><rect x="84.6832%" y="229" width="0.0122%" height="15" fill="rgb(230,84,2)" fg:x="41803" fg:w="6"/><text x="84.9332%" y="239.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (43 samples, 0.09%)</title><rect x="84.6143%" y="245" width="0.0871%" height="15" fill="rgb(220,102,14)" fg:x="41769" fg:w="43"/><text x="84.8643%" y="255.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (5 samples, 0.01%)</title><rect x="84.7014%" y="245" width="0.0101%" height="15" fill="rgb(240,10,32)" fg:x="41812" fg:w="5"/><text x="84.9514%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="84.7196%" y="229" width="0.0101%" height="15" fill="rgb(215,47,27)" fg:x="41821" fg:w="5"/><text x="84.9696%" y="239.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (11 samples, 0.02%)</title><rect x="84.7136%" y="245" width="0.0223%" height="15" fill="rgb(233,188,43)" fg:x="41818" fg:w="11"/><text x="84.9636%" y="255.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (67 samples, 0.14%)</title><rect x="84.6143%" y="261" width="0.1357%" height="15" fill="rgb(253,190,1)" fg:x="41769" fg:w="67"/><text x="84.8643%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_small (7 samples, 0.01%)</title><rect x="84.7500%" y="261" width="0.0142%" height="15" fill="rgb(206,114,52)" fg:x="41836" fg:w="7"/><text x="85.0000%" y="271.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (136 samples, 0.28%)</title><rect x="84.4927%" y="277" width="0.2755%" height="15" fill="rgb(233,120,37)" fg:x="41709" fg:w="136"/><text x="84.7427%" y="287.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (5 samples, 0.01%)</title><rect x="84.7743%" y="277" width="0.0101%" height="15" fill="rgb(214,52,39)" fg:x="41848" fg:w="5"/><text x="85.0243%" y="287.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_expression::values::Scalar&gt; (6 samples, 0.01%)</title><rect x="84.8007%" y="261" width="0.0122%" height="15" fill="rgb(223,80,29)" fg:x="41861" fg:w="6"/><text x="85.0507%" y="271.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (19 samples, 0.04%)</title><rect x="84.7905%" y="277" width="0.0385%" height="15" fill="rgb(230,101,40)" fg:x="41856" fg:w="19"/><text x="85.0405%" y="287.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (174 samples, 0.35%)</title><rect x="84.4927%" y="293" width="0.3525%" height="15" fill="rgb(219,211,8)" fg:x="41709" fg:w="174"/><text x="84.7427%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="84.8493%" y="293" width="0.0101%" height="15" fill="rgb(252,126,28)" fg:x="41885" fg:w="5"/><text x="85.0993%" y="303.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (337 samples, 0.68%)</title><rect x="84.1889%" y="309" width="0.6827%" height="15" fill="rgb(215,56,38)" fg:x="41559" fg:w="337"/><text x="84.4389%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::binder::bind_context::ColumnBinding&gt; (7 samples, 0.01%)</title><rect x="84.8756%" y="293" width="0.0142%" height="15" fill="rgb(249,55,44)" fg:x="41898" fg:w="7"/><text x="85.1256%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="84.8797%" y="277" width="0.0101%" height="15" fill="rgb(220,221,32)" fg:x="41900" fg:w="5"/><text x="85.1297%" y="287.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (14 samples, 0.03%)</title><rect x="84.8736%" y="309" width="0.0284%" height="15" fill="rgb(212,216,41)" fg:x="41897" fg:w="14"/><text x="85.1236%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::scan::Scan&gt; (5 samples, 0.01%)</title><rect x="84.9020%" y="309" width="0.0101%" height="15" fill="rgb(228,213,43)" fg:x="41911" fg:w="5"/><text x="85.1520%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="84.9020%" y="293" width="0.0101%" height="15" fill="rgb(211,31,26)" fg:x="41911" fg:w="5"/><text x="85.1520%" y="303.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_expression::values::Scalar&gt; (16 samples, 0.03%)</title><rect x="84.9121%" y="293" width="0.0324%" height="15" fill="rgb(229,202,19)" fg:x="41916" fg:w="16"/><text x="85.1621%" y="303.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (23 samples, 0.05%)</title><rect x="84.9121%" y="309" width="0.0466%" height="15" fill="rgb(229,105,46)" fg:x="41916" fg:w="23"/><text x="85.1621%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (387 samples, 0.78%)</title><rect x="84.1889%" y="325" width="0.7840%" height="15" fill="rgb(235,108,1)" fg:x="41559" fg:w="387"/><text x="84.4389%" y="335.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (643 samples, 1.30%)</title><rect x="83.6946%" y="341" width="1.3026%" height="15" fill="rgb(245,111,35)" fg:x="41315" fg:w="643"/><text x="83.9446%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (7 samples, 0.01%)</title><rect x="85.0012%" y="341" width="0.0142%" height="15" fill="rgb(219,185,31)" fg:x="41960" fg:w="7"/><text x="85.2512%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::scan::Scan&gt; (5 samples, 0.01%)</title><rect x="85.0154%" y="341" width="0.0101%" height="15" fill="rgb(214,4,43)" fg:x="41967" fg:w="5"/><text x="85.2654%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_expression::values::Scalar&gt; (5 samples, 0.01%)</title><rect x="85.0316%" y="325" width="0.0101%" height="15" fill="rgb(235,227,40)" fg:x="41975" fg:w="5"/><text x="85.2816%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="85.0417%" y="325" width="0.0101%" height="15" fill="rgb(230,88,30)" fg:x="41980" fg:w="5"/><text x="85.2917%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.02%)</title><rect x="85.0519%" y="325" width="0.0162%" height="15" fill="rgb(216,217,1)" fg:x="41985" fg:w="8"/><text x="85.3019%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (24 samples, 0.05%)</title><rect x="85.0255%" y="341" width="0.0486%" height="15" fill="rgb(248,139,50)" fg:x="41972" fg:w="24"/><text x="85.2755%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (691 samples, 1.40%)</title><rect x="83.6946%" y="357" width="1.3998%" height="15" fill="rgb(233,1,21)" fg:x="41315" fg:w="691"/><text x="83.9446%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_small (13 samples, 0.03%)</title><rect x="85.1045%" y="357" width="0.0263%" height="15" fill="rgb(215,183,12)" fg:x="42011" fg:w="13"/><text x="85.3545%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (6 samples, 0.01%)</title><rect x="85.1187%" y="341" width="0.0122%" height="15" fill="rgb(229,104,42)" fg:x="42018" fg:w="6"/><text x="85.3687%" y="351.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (1,004 samples, 2.03%)</title><rect x="83.1031%" y="373" width="2.0339%" height="15" fill="rgb(243,34,48)" fg:x="41023" fg:w="1004"/><text x="83.3531%" y="383.50">d..</text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (6 samples, 0.01%)</title><rect x="85.1369%" y="373" width="0.0122%" height="15" fill="rgb(239,11,44)" fg:x="42027" fg:w="6"/><text x="85.3869%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (1,011 samples, 2.05%)</title><rect x="83.1031%" y="389" width="2.0481%" height="15" fill="rgb(231,98,35)" fg:x="41023" fg:w="1011"/><text x="83.3531%" y="399.50">d..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::join_node::JoinNode::cardinality (4,924 samples, 9.97%)</title><rect x="75.1945%" y="405" width="9.9749%" height="15" fill="rgb(233,28,25)" fg:x="37119" fg:w="4924"/><text x="75.4445%" y="415.50">databend-query..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.01%)</title><rect x="85.1592%" y="389" width="0.0101%" height="15" fill="rgb(234,123,11)" fg:x="42038" fg:w="5"/><text x="85.4092%" y="399.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::util::union (5 samples, 0.01%)</title><rect x="85.1694%" y="405" width="0.0101%" height="15" fill="rgb(220,69,3)" fg:x="42043" fg:w="5"/><text x="85.4194%" y="415.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::binder::bind_context::ColumnBinding&gt; (5 samples, 0.01%)</title><rect x="85.1876%" y="373" width="0.0101%" height="15" fill="rgb(214,64,36)" fg:x="42052" fg:w="5"/><text x="85.4376%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="85.1876%" y="357" width="0.0101%" height="15" fill="rgb(211,138,32)" fg:x="42052" fg:w="5"/><text x="85.4376%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(common_sql::planner::plans::scalar_expr::ScalarExpr,common_sql::planner::plans::scalar_expr::ScalarExpr)&gt;&gt; (11 samples, 0.02%)</title><rect x="85.1876%" y="389" width="0.0223%" height="15" fill="rgb(213,118,47)" fg:x="42052" fg:w="11"/><text x="85.4376%" y="399.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::binder::bind_context::ColumnBinding&gt; (5 samples, 0.01%)</title><rect x="85.2220%" y="341" width="0.0101%" height="15" fill="rgb(243,124,49)" fg:x="42069" fg:w="5"/><text x="85.4720%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(common_sql::planner::plans::scalar_expr::ScalarExpr,common_sql::planner::plans::scalar_expr::ScalarExpr)&gt;&gt; (12 samples, 0.02%)</title><rect x="85.2220%" y="357" width="0.0243%" height="15" fill="rgb(221,30,28)" fg:x="42069" fg:w="12"/><text x="85.4720%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(common_sql::planner::plans::scalar_expr::ScalarExpr,common_sql::planner::plans::scalar_expr::ScalarExpr)&gt;&gt; (8 samples, 0.02%)</title><rect x="85.2463%" y="341" width="0.0162%" height="15" fill="rgb(246,37,13)" fg:x="42081" fg:w="8"/><text x="85.4963%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (20 samples, 0.04%)</title><rect x="85.2463%" y="357" width="0.0405%" height="15" fill="rgb(249,66,14)" fg:x="42081" fg:w="20"/><text x="85.4963%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (41 samples, 0.08%)</title><rect x="85.2200%" y="373" width="0.0831%" height="15" fill="rgb(213,166,5)" fg:x="42068" fg:w="41"/><text x="85.4700%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (50 samples, 0.10%)</title><rect x="85.2099%" y="389" width="0.1013%" height="15" fill="rgb(221,66,24)" fg:x="42063" fg:w="50"/><text x="85.4599%" y="399.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::emit_csg_cmp (5,063 samples, 10.26%)</title><rect x="75.0567%" y="421" width="10.2565%" height="15" fill="rgb(210,132,17)" fg:x="37051" fg:w="5063"/><text x="75.3067%" y="431.50">databend-query`..</text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (62 samples, 0.13%)</title><rect x="85.1876%" y="405" width="0.1256%" height="15" fill="rgb(243,202,5)" fg:x="42052" fg:w="62"/><text x="85.4376%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="85.3274%" y="325" width="0.0101%" height="15" fill="rgb(233,70,48)" fg:x="42121" fg:w="5"/><text x="85.5774%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (13 samples, 0.03%)</title><rect x="85.3213%" y="341" width="0.0263%" height="15" fill="rgb(238,41,26)" fg:x="42118" fg:w="13"/><text x="85.5713%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (15 samples, 0.03%)</title><rect x="85.3213%" y="357" width="0.0304%" height="15" fill="rgb(241,19,31)" fg:x="42118" fg:w="15"/><text x="85.5713%" y="367.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.03%)</title><rect x="85.3213%" y="373" width="0.0324%" height="15" fill="rgb(214,76,10)" fg:x="42118" fg:w="16"/><text x="85.5713%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="85.3557%" y="325" width="0.0142%" height="15" fill="rgb(254,202,22)" fg:x="42135" fg:w="7"/><text x="85.6057%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="85.3557%" y="341" width="0.0162%" height="15" fill="rgb(214,72,24)" fg:x="42135" fg:w="8"/><text x="85.6057%" y="351.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="85.3557%" y="357" width="0.0182%" height="15" fill="rgb(221,92,46)" fg:x="42135" fg:w="9"/><text x="85.6057%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="85.3841%" y="309" width="0.0203%" height="15" fill="rgb(246,13,50)" fg:x="42149" fg:w="10"/><text x="85.6341%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="85.3902%" y="293" width="0.0142%" height="15" fill="rgb(240,165,38)" fg:x="42152" fg:w="7"/><text x="85.6402%" y="303.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="85.3841%" y="325" width="0.0243%" height="15" fill="rgb(241,24,51)" fg:x="42149" fg:w="12"/><text x="85.6341%" y="335.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.03%)</title><rect x="85.3821%" y="341" width="0.0284%" height="15" fill="rgb(227,51,44)" fg:x="42148" fg:w="14"/><text x="85.6321%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="85.4124%" y="293" width="0.0203%" height="15" fill="rgb(231,121,3)" fg:x="42163" fg:w="10"/><text x="85.6624%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.02%)</title><rect x="85.4165%" y="277" width="0.0162%" height="15" fill="rgb(245,3,41)" fg:x="42165" fg:w="8"/><text x="85.6665%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.01%)</title><rect x="85.4205%" y="261" width="0.0122%" height="15" fill="rgb(214,13,26)" fg:x="42167" fg:w="6"/><text x="85.6705%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (6 samples, 0.01%)</title><rect x="85.4205%" y="245" width="0.0122%" height="15" fill="rgb(252,75,11)" fg:x="42167" fg:w="6"/><text x="85.6705%" y="255.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="85.4124%" y="309" width="0.0223%" height="15" fill="rgb(218,226,17)" fg:x="42163" fg:w="11"/><text x="85.6624%" y="319.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.03%)</title><rect x="85.4124%" y="325" width="0.0263%" height="15" fill="rgb(248,89,38)" fg:x="42163" fg:w="13"/><text x="85.6624%" y="335.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="85.4408%" y="309" width="0.0142%" height="15" fill="rgb(237,73,46)" fg:x="42177" fg:w="7"/><text x="85.6908%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="85.4428%" y="293" width="0.0122%" height="15" fill="rgb(242,78,33)" fg:x="42178" fg:w="6"/><text x="85.6928%" y="303.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (14 samples, 0.03%)</title><rect x="85.4388%" y="325" width="0.0284%" height="15" fill="rgb(235,60,3)" fg:x="42176" fg:w="14"/><text x="85.6888%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (31 samples, 0.06%)</title><rect x="85.4104%" y="341" width="0.0628%" height="15" fill="rgb(216,172,19)" fg:x="42162" fg:w="31"/><text x="85.6604%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (54 samples, 0.11%)</title><rect x="85.3740%" y="357" width="0.1094%" height="15" fill="rgb(227,6,42)" fg:x="42144" fg:w="54"/><text x="85.6240%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="85.4894%" y="357" width="0.0101%" height="15" fill="rgb(223,207,42)" fg:x="42201" fg:w="5"/><text x="85.7394%" y="367.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (75 samples, 0.15%)</title><rect x="85.3537%" y="373" width="0.1519%" height="15" fill="rgb(246,138,30)" fg:x="42134" fg:w="75"/><text x="85.6037%" y="383.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode as core::clone::Clone&gt;::clone (95 samples, 0.19%)</title><rect x="85.3193%" y="389" width="0.1924%" height="15" fill="rgb(251,199,47)" fg:x="42117" fg:w="95"/><text x="85.5693%" y="399.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="85.5279%" y="341" width="0.0122%" height="15" fill="rgb(228,218,44)" fg:x="42220" fg:w="6"/><text x="85.7779%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="85.5299%" y="325" width="0.0101%" height="15" fill="rgb(220,68,6)" fg:x="42221" fg:w="5"/><text x="85.7799%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="85.5259%" y="357" width="0.0162%" height="15" fill="rgb(240,60,26)" fg:x="42219" fg:w="8"/><text x="85.7759%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (17 samples, 0.03%)</title><rect x="85.6292%" y="293" width="0.0344%" height="15" fill="rgb(211,200,19)" fg:x="42270" fg:w="17"/><text x="85.8792%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (12 samples, 0.02%)</title><rect x="85.6393%" y="277" width="0.0243%" height="15" fill="rgb(242,145,30)" fg:x="42275" fg:w="12"/><text x="85.8893%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (9 samples, 0.02%)</title><rect x="85.6454%" y="261" width="0.0182%" height="15" fill="rgb(225,64,13)" fg:x="42278" fg:w="9"/><text x="85.8954%" y="271.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (37 samples, 0.07%)</title><rect x="85.5927%" y="309" width="0.0750%" height="15" fill="rgb(218,103,35)" fg:x="42252" fg:w="37"/><text x="85.8427%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (61 samples, 0.12%)</title><rect x="85.5624%" y="341" width="0.1236%" height="15" fill="rgb(216,93,46)" fg:x="42237" fg:w="61"/><text x="85.8124%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (59 samples, 0.12%)</title><rect x="85.5664%" y="325" width="0.1195%" height="15" fill="rgb(225,159,27)" fg:x="42239" fg:w="59"/><text x="85.8164%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="85.6859%" y="325" width="0.0101%" height="15" fill="rgb(225,204,11)" fg:x="42298" fg:w="5"/><text x="85.9359%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="85.6859%" y="341" width="0.0122%" height="15" fill="rgb(205,56,4)" fg:x="42298" fg:w="6"/><text x="85.9359%" y="351.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="85.7062%" y="309" width="0.0101%" height="15" fill="rgb(206,6,35)" fg:x="42308" fg:w="5"/><text x="85.9562%" y="319.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (27 samples, 0.05%)</title><rect x="85.7264%" y="293" width="0.0547%" height="15" fill="rgb(247,73,52)" fg:x="42318" fg:w="27"/><text x="85.9764%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.02%)</title><rect x="85.7649%" y="277" width="0.0162%" height="15" fill="rgb(246,97,4)" fg:x="42337" fg:w="8"/><text x="86.0149%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (8 samples, 0.02%)</title><rect x="85.7649%" y="261" width="0.0162%" height="15" fill="rgb(212,37,15)" fg:x="42337" fg:w="8"/><text x="86.0149%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (7 samples, 0.01%)</title><rect x="85.7670%" y="245" width="0.0142%" height="15" fill="rgb(208,130,40)" fg:x="42338" fg:w="7"/><text x="86.0170%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.02%)</title><rect x="85.7811%" y="293" width="0.0162%" height="15" fill="rgb(236,55,29)" fg:x="42345" fg:w="8"/><text x="86.0311%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="85.7811%" y="277" width="0.0162%" height="15" fill="rgb(209,156,45)" fg:x="42345" fg:w="8"/><text x="86.0311%" y="287.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (43 samples, 0.09%)</title><rect x="85.7163%" y="309" width="0.0871%" height="15" fill="rgb(249,107,4)" fg:x="42313" fg:w="43"/><text x="85.9663%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (50 samples, 0.10%)</title><rect x="85.7042%" y="325" width="0.1013%" height="15" fill="rgb(227,7,13)" fg:x="42307" fg:w="50"/><text x="85.9542%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="85.8054%" y="309" width="0.0162%" height="15" fill="rgb(250,129,14)" fg:x="42357" fg:w="8"/><text x="86.0554%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="85.8054%" y="325" width="0.0203%" height="15" fill="rgb(229,92,13)" fg:x="42357" fg:w="10"/><text x="86.0554%" y="335.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (15 samples, 0.03%)</title><rect x="85.8581%" y="277" width="0.0304%" height="15" fill="rgb(245,98,39)" fg:x="42383" fg:w="15"/><text x="86.1081%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="85.8784%" y="261" width="0.0101%" height="15" fill="rgb(234,135,48)" fg:x="42393" fg:w="5"/><text x="86.1284%" y="271.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (26 samples, 0.05%)</title><rect x="85.8439%" y="293" width="0.0527%" height="15" fill="rgb(230,98,28)" fg:x="42376" fg:w="26"/><text x="86.0939%" y="303.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (33 samples, 0.07%)</title><rect x="85.8358%" y="309" width="0.0669%" height="15" fill="rgb(223,121,0)" fg:x="42372" fg:w="33"/><text x="86.0858%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="85.9027%" y="309" width="0.0101%" height="15" fill="rgb(234,173,33)" fg:x="42405" fg:w="5"/><text x="86.1527%" y="319.50"></text></g><g><title>databend-query`&lt;common_sql::planner::binder::bind_context::ColumnBinding as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="85.9027%" y="293" width="0.0101%" height="15" fill="rgb(245,47,8)" fg:x="42405" fg:w="5"/><text x="86.1527%" y="303.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="85.9412%" y="261" width="0.0122%" height="15" fill="rgb(205,17,20)" fg:x="42424" fg:w="6"/><text x="86.1912%" y="271.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (30 samples, 0.06%)</title><rect x="85.9189%" y="277" width="0.0608%" height="15" fill="rgb(232,151,16)" fg:x="42413" fg:w="30"/><text x="86.1689%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.01%)</title><rect x="85.9675%" y="261" width="0.0122%" height="15" fill="rgb(208,30,32)" fg:x="42437" fg:w="6"/><text x="86.2175%" y="271.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (32 samples, 0.06%)</title><rect x="85.9169%" y="293" width="0.0648%" height="15" fill="rgb(254,26,3)" fg:x="42412" fg:w="32"/><text x="86.1669%" y="303.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="85.9817%" y="293" width="0.0122%" height="15" fill="rgb(240,177,30)" fg:x="42444" fg:w="6"/><text x="86.2317%" y="303.50"></text></g><g><title>databend-query`&lt;common_expression::values::Scalar as core::clone::Clone&gt;::clone (17 samples, 0.03%)</title><rect x="86.0121%" y="245" width="0.0344%" height="15" fill="rgb(248,76,44)" fg:x="42459" fg:w="17"/><text x="86.2621%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="86.0465%" y="245" width="0.0101%" height="15" fill="rgb(241,186,54)" fg:x="42476" fg:w="5"/><text x="86.2965%" y="255.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scan::Scan as core::clone::Clone&gt;::clone (30 samples, 0.06%)</title><rect x="85.9999%" y="261" width="0.0608%" height="15" fill="rgb(249,171,29)" fg:x="42453" fg:w="30"/><text x="86.2499%" y="271.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::operator::RelOperator as core::clone::Clone&gt;::clone (31 samples, 0.06%)</title><rect x="85.9999%" y="277" width="0.0628%" height="15" fill="rgb(237,151,44)" fg:x="42453" fg:w="31"/><text x="86.2499%" y="287.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (34 samples, 0.07%)</title><rect x="85.9979%" y="293" width="0.0689%" height="15" fill="rgb(228,174,30)" fg:x="42452" fg:w="34"/><text x="86.2479%" y="303.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (81 samples, 0.16%)</title><rect x="85.9128%" y="309" width="0.1641%" height="15" fill="rgb(252,14,37)" fg:x="42410" fg:w="81"/><text x="86.1628%" y="319.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (137 samples, 0.28%)</title><rect x="85.8277%" y="325" width="0.2775%" height="15" fill="rgb(207,111,40)" fg:x="42368" fg:w="137"/><text x="86.0777%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.01%)</title><rect x="86.0931%" y="309" width="0.0122%" height="15" fill="rgb(248,171,54)" fg:x="42499" fg:w="6"/><text x="86.3431%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="86.1174%" y="325" width="0.0101%" height="15" fill="rgb(211,127,2)" fg:x="42511" fg:w="5"/><text x="86.3674%" y="335.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (215 samples, 0.44%)</title><rect x="85.7001%" y="341" width="0.4355%" height="15" fill="rgb(236,87,47)" fg:x="42305" fg:w="215"/><text x="85.9501%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="86.1417%" y="341" width="0.0101%" height="15" fill="rgb(223,190,45)" fg:x="42523" fg:w="5"/><text x="86.3917%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (306 samples, 0.62%)</title><rect x="85.5441%" y="357" width="0.6199%" height="15" fill="rgb(215,5,16)" fg:x="42228" fg:w="306"/><text x="85.7941%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.01%)</title><rect x="86.1519%" y="341" width="0.0122%" height="15" fill="rgb(252,82,33)" fg:x="42528" fg:w="6"/><text x="86.4019%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::s_expr (325 samples, 0.66%)</title><rect x="85.5259%" y="373" width="0.6584%" height="15" fill="rgb(247,213,44)" fg:x="42219" fg:w="325"/><text x="85.7759%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.01%)</title><rect x="86.1721%" y="357" width="0.0122%" height="15" fill="rgb(205,196,44)" fg:x="42538" fg:w="6"/><text x="86.4221%" y="367.50"></text></g><g><title>databend-query`common_base::runtime::runtime_tracker::ThreadTracker::alloc (5 samples, 0.01%)</title><rect x="87.1809%" y="341" width="0.0101%" height="15" fill="rgb(237,96,54)" fg:x="43036" fg:w="5"/><text x="87.4309%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (17 samples, 0.03%)</title><rect x="87.1911%" y="341" width="0.0344%" height="15" fill="rgb(230,113,34)" fg:x="43041" fg:w="17"/><text x="87.4411%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (6 samples, 0.01%)</title><rect x="87.3086%" y="293" width="0.0122%" height="15" fill="rgb(221,224,12)" fg:x="43099" fg:w="6"/><text x="87.5586%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (29 samples, 0.06%)</title><rect x="87.2660%" y="325" width="0.0587%" height="15" fill="rgb(219,112,44)" fg:x="43078" fg:w="29"/><text x="87.5160%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (23 samples, 0.05%)</title><rect x="87.2782%" y="309" width="0.0466%" height="15" fill="rgb(210,31,13)" fg:x="43084" fg:w="23"/><text x="87.5282%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (29 samples, 0.06%)</title><rect x="87.3795%" y="277" width="0.0587%" height="15" fill="rgb(230,25,16)" fg:x="43134" fg:w="29"/><text x="87.6295%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (6 samples, 0.01%)</title><rect x="87.4382%" y="277" width="0.0122%" height="15" fill="rgb(246,108,53)" fg:x="43163" fg:w="6"/><text x="87.6882%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (77 samples, 0.16%)</title><rect x="87.3329%" y="309" width="0.1560%" height="15" fill="rgb(241,172,50)" fg:x="43111" fg:w="77"/><text x="87.5829%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (61 samples, 0.12%)</title><rect x="87.3653%" y="293" width="0.1236%" height="15" fill="rgb(235,141,10)" fg:x="43127" fg:w="61"/><text x="87.6153%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (19 samples, 0.04%)</title><rect x="87.4504%" y="277" width="0.0385%" height="15" fill="rgb(220,174,43)" fg:x="43169" fg:w="19"/><text x="87.7004%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (131 samples, 0.27%)</title><rect x="87.2255%" y="341" width="0.2654%" height="15" fill="rgb(215,181,40)" fg:x="43058" fg:w="131"/><text x="87.4755%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (82 samples, 0.17%)</title><rect x="87.3248%" y="325" width="0.1661%" height="15" fill="rgb(230,97,2)" fg:x="43107" fg:w="82"/><text x="87.5748%" y="335.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (649 samples, 1.31%)</title><rect x="86.1903%" y="357" width="1.3147%" height="15" fill="rgb(211,25,27)" fg:x="42547" fg:w="649"/><text x="86.4403%" y="367.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.03%)</title><rect x="87.6651%" y="309" width="0.0284%" height="15" fill="rgb(230,87,26)" fg:x="43275" fg:w="14"/><text x="87.9151%" y="319.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (40 samples, 0.08%)</title><rect x="87.6935%" y="309" width="0.0810%" height="15" fill="rgb(227,160,17)" fg:x="43289" fg:w="40"/><text x="87.9435%" y="319.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="87.7907%" y="293" width="0.0101%" height="15" fill="rgb(244,85,34)" fg:x="43337" fg:w="5"/><text x="88.0407%" y="303.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (116 samples, 0.23%)</title><rect x="87.5679%" y="325" width="0.2350%" height="15" fill="rgb(207,70,0)" fg:x="43227" fg:w="116"/><text x="87.8179%" y="335.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (14 samples, 0.03%)</title><rect x="87.7745%" y="309" width="0.0284%" height="15" fill="rgb(223,129,7)" fg:x="43329" fg:w="14"/><text x="88.0245%" y="319.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="87.8191%" y="309" width="0.0142%" height="15" fill="rgb(246,105,7)" fg:x="43351" fg:w="7"/><text x="88.0691%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="87.8413%" y="309" width="0.0101%" height="15" fill="rgb(215,154,42)" fg:x="43362" fg:w="5"/><text x="88.0913%" y="319.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (168 samples, 0.34%)</title><rect x="87.5152%" y="341" width="0.3403%" height="15" fill="rgb(220,215,30)" fg:x="43201" fg:w="168"/><text x="87.7652%" y="351.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (26 samples, 0.05%)</title><rect x="87.8029%" y="325" width="0.0527%" height="15" fill="rgb(228,81,51)" fg:x="43343" fg:w="26"/><text x="88.0529%" y="335.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.02%)</title><rect x="88.0075%" y="309" width="0.0243%" height="15" fill="rgb(247,71,54)" fg:x="43444" fg:w="12"/><text x="88.2575%" y="319.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (22 samples, 0.04%)</title><rect x="88.0318%" y="309" width="0.0446%" height="15" fill="rgb(234,176,34)" fg:x="43456" fg:w="22"/><text x="88.2818%" y="319.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.02%)</title><rect x="88.1006%" y="293" width="0.0182%" height="15" fill="rgb(241,103,54)" fg:x="43490" fg:w="9"/><text x="88.3506%" y="303.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (11 samples, 0.02%)</title><rect x="88.1189%" y="293" width="0.0223%" height="15" fill="rgb(228,22,34)" fg:x="43499" fg:w="11"/><text x="88.3689%" y="303.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (40 samples, 0.08%)</title><rect x="88.0763%" y="309" width="0.0810%" height="15" fill="rgb(241,179,48)" fg:x="43478" fg:w="40"/><text x="88.3263%" y="319.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (136 samples, 0.28%)</title><rect x="87.8859%" y="325" width="0.2755%" height="15" fill="rgb(235,167,37)" fg:x="43384" fg:w="136"/><text x="88.1359%" y="335.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (6 samples, 0.01%)</title><rect x="88.2019%" y="309" width="0.0122%" height="15" fill="rgb(213,109,30)" fg:x="43540" fg:w="6"/><text x="88.4519%" y="319.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (32 samples, 0.06%)</title><rect x="88.1614%" y="325" width="0.0648%" height="15" fill="rgb(222,172,16)" fg:x="43520" fg:w="32"/><text x="88.4114%" y="335.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (184 samples, 0.37%)</title><rect x="87.8555%" y="341" width="0.3727%" height="15" fill="rgb(233,192,5)" fg:x="43369" fg:w="184"/><text x="88.1055%" y="351.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="88.3113%" y="325" width="0.0101%" height="15" fill="rgb(247,189,41)" fg:x="43594" fg:w="5"/><text x="88.5613%" y="335.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (26 samples, 0.05%)</title><rect x="88.3883%" y="309" width="0.0527%" height="15" fill="rgb(218,134,47)" fg:x="43632" fg:w="26"/><text x="88.6383%" y="319.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (22 samples, 0.04%)</title><rect x="88.4410%" y="309" width="0.0446%" height="15" fill="rgb(216,29,3)" fg:x="43658" fg:w="22"/><text x="88.6910%" y="319.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (85 samples, 0.17%)</title><rect x="88.3214%" y="325" width="0.1722%" height="15" fill="rgb(246,140,12)" fg:x="43599" fg:w="85"/><text x="88.5714%" y="335.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (132 samples, 0.27%)</title><rect x="88.2283%" y="341" width="0.2674%" height="15" fill="rgb(230,136,11)" fg:x="43553" fg:w="132"/><text x="88.4783%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (24 samples, 0.05%)</title><rect x="89.5389%" y="293" width="0.0486%" height="15" fill="rgb(247,22,47)" fg:x="44200" fg:w="24"/><text x="89.7889%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (6 samples, 0.01%)</title><rect x="89.6787%" y="245" width="0.0122%" height="15" fill="rgb(218,84,22)" fg:x="44269" fg:w="6"/><text x="89.9287%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (32 samples, 0.06%)</title><rect x="89.6301%" y="261" width="0.0648%" height="15" fill="rgb(216,87,39)" fg:x="44245" fg:w="32"/><text x="89.8801%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (45 samples, 0.09%)</title><rect x="89.6139%" y="277" width="0.0912%" height="15" fill="rgb(221,178,8)" fg:x="44237" fg:w="45"/><text x="89.8639%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.01%)</title><rect x="89.6949%" y="261" width="0.0101%" height="15" fill="rgb(230,42,11)" fg:x="44277" fg:w="5"/><text x="89.9449%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (36 samples, 0.07%)</title><rect x="89.7922%" y="229" width="0.0729%" height="15" fill="rgb(237,229,4)" fg:x="44325" fg:w="36"/><text x="90.0422%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (6 samples, 0.01%)</title><rect x="89.8651%" y="229" width="0.0122%" height="15" fill="rgb(222,31,33)" fg:x="44361" fg:w="6"/><text x="90.1151%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (104 samples, 0.21%)</title><rect x="89.7213%" y="261" width="0.2107%" height="15" fill="rgb(210,17,39)" fg:x="44290" fg:w="104"/><text x="89.9713%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (83 samples, 0.17%)</title><rect x="89.7638%" y="245" width="0.1681%" height="15" fill="rgb(244,93,20)" fg:x="44311" fg:w="83"/><text x="90.0138%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (27 samples, 0.05%)</title><rect x="89.8772%" y="229" width="0.0547%" height="15" fill="rgb(210,40,47)" fg:x="44367" fg:w="27"/><text x="90.1272%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (179 samples, 0.36%)</title><rect x="89.5876%" y="293" width="0.3626%" height="15" fill="rgb(239,211,47)" fg:x="44224" fg:w="179"/><text x="89.8376%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (118 samples, 0.24%)</title><rect x="89.7111%" y="277" width="0.2390%" height="15" fill="rgb(251,223,49)" fg:x="44285" fg:w="118"/><text x="89.9611%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="89.9319%" y="261" width="0.0182%" height="15" fill="rgb(221,149,5)" fg:x="44394" fg:w="9"/><text x="90.1819%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (8 samples, 0.02%)</title><rect x="89.9340%" y="245" width="0.0162%" height="15" fill="rgb(219,224,51)" fg:x="44395" fg:w="8"/><text x="90.1840%" y="255.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (719 samples, 1.46%)</title><rect x="88.5078%" y="309" width="1.4565%" height="15" fill="rgb(223,7,8)" fg:x="43691" fg:w="719"/><text x="88.7578%" y="319.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.02%)</title><rect x="90.0920%" y="261" width="0.0203%" height="15" fill="rgb(241,217,22)" fg:x="44473" fg:w="10"/><text x="90.3420%" y="271.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (19 samples, 0.04%)</title><rect x="90.1122%" y="261" width="0.0385%" height="15" fill="rgb(248,209,0)" fg:x="44483" fg:w="19"/><text x="90.3622%" y="271.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="90.1568%" y="245" width="0.0142%" height="15" fill="rgb(217,205,4)" fg:x="44505" fg:w="7"/><text x="90.4068%" y="255.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (8 samples, 0.02%)</title><rect x="90.1710%" y="245" width="0.0162%" height="15" fill="rgb(228,124,39)" fg:x="44512" fg:w="8"/><text x="90.4210%" y="255.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (80 samples, 0.16%)</title><rect x="90.0271%" y="277" width="0.1621%" height="15" fill="rgb(250,116,42)" fg:x="44441" fg:w="80"/><text x="90.2771%" y="287.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (19 samples, 0.04%)</title><rect x="90.1507%" y="261" width="0.0385%" height="15" fill="rgb(223,202,9)" fg:x="44502" fg:w="19"/><text x="90.4007%" y="271.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="90.2155%" y="261" width="0.0122%" height="15" fill="rgb(242,222,40)" fg:x="44534" fg:w="6"/><text x="90.4655%" y="271.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="90.2277%" y="261" width="0.0101%" height="15" fill="rgb(229,99,46)" fg:x="44540" fg:w="5"/><text x="90.4777%" y="271.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (30 samples, 0.06%)</title><rect x="90.1892%" y="277" width="0.0608%" height="15" fill="rgb(225,56,46)" fg:x="44521" fg:w="30"/><text x="90.4392%" y="287.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (133 samples, 0.27%)</title><rect x="89.9826%" y="293" width="0.2694%" height="15" fill="rgb(227,94,5)" fg:x="44419" fg:w="133"/><text x="90.2326%" y="303.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.02%)</title><rect x="90.3736%" y="261" width="0.0223%" height="15" fill="rgb(205,112,38)" fg:x="44612" fg:w="11"/><text x="90.6236%" y="271.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (28 samples, 0.06%)</title><rect x="90.3958%" y="261" width="0.0567%" height="15" fill="rgb(231,133,46)" fg:x="44623" fg:w="28"/><text x="90.6458%" y="271.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (16 samples, 0.03%)</title><rect x="90.4890%" y="245" width="0.0324%" height="15" fill="rgb(217,16,9)" fg:x="44669" fg:w="16"/><text x="90.7390%" y="255.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (20 samples, 0.04%)</title><rect x="90.5214%" y="245" width="0.0405%" height="15" fill="rgb(249,173,9)" fg:x="44685" fg:w="20"/><text x="90.7714%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="90.5619%" y="245" width="0.0122%" height="15" fill="rgb(205,163,53)" fg:x="44705" fg:w="6"/><text x="90.8119%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="90.5619%" y="229" width="0.0122%" height="15" fill="rgb(217,54,41)" fg:x="44705" fg:w="6"/><text x="90.8119%" y="239.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (65 samples, 0.13%)</title><rect x="90.4526%" y="261" width="0.1317%" height="15" fill="rgb(228,216,12)" fg:x="44651" fg:w="65"/><text x="90.7026%" y="271.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (156 samples, 0.32%)</title><rect x="90.2743%" y="277" width="0.3160%" height="15" fill="rgb(244,228,15)" fg:x="44563" fg:w="156"/><text x="90.5243%" y="287.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (178 samples, 0.36%)</title><rect x="90.2520%" y="293" width="0.3606%" height="15" fill="rgb(221,176,53)" fg:x="44552" fg:w="178"/><text x="90.5020%" y="303.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.02%)</title><rect x="90.5903%" y="277" width="0.0223%" height="15" fill="rgb(205,94,34)" fg:x="44719" fg:w="11"/><text x="90.8403%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="90.6025%" y="261" width="0.0101%" height="15" fill="rgb(213,110,48)" fg:x="44725" fg:w="5"/><text x="90.8525%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="90.6025%" y="245" width="0.0101%" height="15" fill="rgb(236,142,28)" fg:x="44725" fg:w="5"/><text x="90.8525%" y="255.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.03%)</title><rect x="90.7483%" y="261" width="0.0284%" height="15" fill="rgb(225,135,29)" fg:x="44797" fg:w="14"/><text x="90.9983%" y="271.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (24 samples, 0.05%)</title><rect x="90.7767%" y="261" width="0.0486%" height="15" fill="rgb(252,45,31)" fg:x="44811" fg:w="24"/><text x="91.0267%" y="271.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.02%)</title><rect x="90.8456%" y="245" width="0.0223%" height="15" fill="rgb(211,187,50)" fg:x="44845" fg:w="11"/><text x="91.0956%" y="255.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (16 samples, 0.03%)</title><rect x="90.8678%" y="245" width="0.0324%" height="15" fill="rgb(229,109,7)" fg:x="44856" fg:w="16"/><text x="91.1178%" y="255.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (105 samples, 0.21%)</title><rect x="90.6956%" y="277" width="0.2127%" height="15" fill="rgb(251,131,51)" fg:x="44771" fg:w="105"/><text x="90.9456%" y="287.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (41 samples, 0.08%)</title><rect x="90.8253%" y="261" width="0.0831%" height="15" fill="rgb(251,180,35)" fg:x="44835" fg:w="41"/><text x="91.0753%" y="271.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (149 samples, 0.30%)</title><rect x="90.6126%" y="293" width="0.3018%" height="15" fill="rgb(211,46,32)" fg:x="44730" fg:w="149"/><text x="90.8626%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (11 samples, 0.02%)</title><rect x="91.7328%" y="245" width="0.0223%" height="15" fill="rgb(248,123,17)" fg:x="45283" fg:w="11"/><text x="91.9828%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (19 samples, 0.04%)</title><rect x="91.7794%" y="213" width="0.0385%" height="15" fill="rgb(227,141,18)" fg:x="45306" fg:w="19"/><text x="92.0294%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (8 samples, 0.02%)</title><rect x="91.8017%" y="197" width="0.0162%" height="15" fill="rgb(216,102,9)" fg:x="45317" fg:w="8"/><text x="92.0517%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (25 samples, 0.05%)</title><rect x="91.7734%" y="229" width="0.0506%" height="15" fill="rgb(253,47,13)" fg:x="45303" fg:w="25"/><text x="92.0234%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (15 samples, 0.03%)</title><rect x="91.8706%" y="181" width="0.0304%" height="15" fill="rgb(226,93,23)" fg:x="45351" fg:w="15"/><text x="92.1206%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (51 samples, 0.10%)</title><rect x="91.8341%" y="213" width="0.1033%" height="15" fill="rgb(247,104,17)" fg:x="45333" fg:w="51"/><text x="92.0841%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (42 samples, 0.09%)</title><rect x="91.8524%" y="197" width="0.0851%" height="15" fill="rgb(233,203,26)" fg:x="45342" fg:w="42"/><text x="92.1024%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (17 samples, 0.03%)</title><rect x="91.9030%" y="181" width="0.0344%" height="15" fill="rgb(244,98,49)" fg:x="45367" fg:w="17"/><text x="92.1530%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (95 samples, 0.19%)</title><rect x="91.7551%" y="245" width="0.1924%" height="15" fill="rgb(235,134,22)" fg:x="45294" fg:w="95"/><text x="92.0051%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (60 samples, 0.12%)</title><rect x="91.8260%" y="229" width="0.1215%" height="15" fill="rgb(221,70,32)" fg:x="45329" fg:w="60"/><text x="92.0760%" y="239.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (510 samples, 1.03%)</title><rect x="90.9286%" y="261" width="1.0331%" height="15" fill="rgb(238,15,50)" fg:x="44886" fg:w="510"/><text x="91.1786%" y="271.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.02%)</title><rect x="92.0489%" y="213" width="0.0182%" height="15" fill="rgb(215,221,48)" fg:x="45439" fg:w="9"/><text x="92.2989%" y="223.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (9 samples, 0.02%)</title><rect x="92.0671%" y="213" width="0.0182%" height="15" fill="rgb(236,73,3)" fg:x="45448" fg:w="9"/><text x="92.3171%" y="223.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (39 samples, 0.08%)</title><rect x="92.0124%" y="229" width="0.0790%" height="15" fill="rgb(250,107,11)" fg:x="45421" fg:w="39"/><text x="92.2624%" y="239.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (12 samples, 0.02%)</title><rect x="92.0914%" y="229" width="0.0243%" height="15" fill="rgb(242,39,14)" fg:x="45460" fg:w="12"/><text x="92.3414%" y="239.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (66 samples, 0.13%)</title><rect x="91.9840%" y="245" width="0.1337%" height="15" fill="rgb(248,164,37)" fg:x="45407" fg:w="66"/><text x="92.2340%" y="255.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.02%)</title><rect x="92.1826%" y="213" width="0.0182%" height="15" fill="rgb(217,60,12)" fg:x="45505" fg:w="9"/><text x="92.4326%" y="223.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (20 samples, 0.04%)</title><rect x="92.2008%" y="213" width="0.0405%" height="15" fill="rgb(240,125,29)" fg:x="45514" fg:w="20"/><text x="92.4508%" y="223.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (68 samples, 0.14%)</title><rect x="92.1299%" y="229" width="0.1378%" height="15" fill="rgb(208,207,28)" fg:x="45479" fg:w="68"/><text x="92.3799%" y="239.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (13 samples, 0.03%)</title><rect x="92.2413%" y="213" width="0.0263%" height="15" fill="rgb(209,159,27)" fg:x="45534" fg:w="13"/><text x="92.4913%" y="223.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="92.2575%" y="197" width="0.0101%" height="15" fill="rgb(251,176,53)" fg:x="45542" fg:w="5"/><text x="92.5075%" y="207.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="92.2899%" y="213" width="0.0101%" height="15" fill="rgb(211,85,7)" fg:x="45558" fg:w="5"/><text x="92.5399%" y="223.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (98 samples, 0.20%)</title><rect x="92.1177%" y="245" width="0.1985%" height="15" fill="rgb(216,64,54)" fg:x="45473" fg:w="98"/><text x="92.3677%" y="255.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (24 samples, 0.05%)</title><rect x="92.2676%" y="229" width="0.0486%" height="15" fill="rgb(217,54,24)" fg:x="45547" fg:w="24"/><text x="92.5176%" y="239.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="92.3507%" y="229" width="0.0101%" height="15" fill="rgb(208,206,53)" fg:x="45588" fg:w="5"/><text x="92.6007%" y="239.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="92.3953%" y="213" width="0.0162%" height="15" fill="rgb(251,74,39)" fg:x="45610" fg:w="8"/><text x="92.6453%" y="223.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (12 samples, 0.02%)</title><rect x="92.4115%" y="213" width="0.0243%" height="15" fill="rgb(226,47,5)" fg:x="45618" fg:w="12"/><text x="92.6615%" y="223.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (15 samples, 0.03%)</title><rect x="92.4358%" y="213" width="0.0304%" height="15" fill="rgb(234,111,33)" fg:x="45630" fg:w="15"/><text x="92.6858%" y="223.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (53 samples, 0.11%)</title><rect x="92.3608%" y="229" width="0.1074%" height="15" fill="rgb(251,14,10)" fg:x="45593" fg:w="53"/><text x="92.6108%" y="239.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (79 samples, 0.16%)</title><rect x="92.3163%" y="245" width="0.1600%" height="15" fill="rgb(232,43,0)" fg:x="45571" fg:w="79"/><text x="92.5663%" y="255.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (9 samples, 0.02%)</title><rect x="92.8815%" y="197" width="0.0182%" height="15" fill="rgb(222,68,43)" fg:x="45850" fg:w="9"/><text x="93.1315%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (10 samples, 0.02%)</title><rect x="92.9098%" y="165" width="0.0203%" height="15" fill="rgb(217,24,23)" fg:x="45864" fg:w="10"/><text x="93.1598%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (15 samples, 0.03%)</title><rect x="92.9058%" y="181" width="0.0304%" height="15" fill="rgb(229,209,14)" fg:x="45862" fg:w="15"/><text x="93.1558%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (13 samples, 0.03%)</title><rect x="92.9665%" y="133" width="0.0263%" height="15" fill="rgb(250,149,48)" fg:x="45892" fg:w="13"/><text x="93.2165%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (49 samples, 0.10%)</title><rect x="92.9463%" y="165" width="0.0993%" height="15" fill="rgb(210,120,37)" fg:x="45882" fg:w="49"/><text x="93.1963%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (44 samples, 0.09%)</title><rect x="92.9564%" y="149" width="0.0891%" height="15" fill="rgb(210,21,8)" fg:x="45887" fg:w="44"/><text x="93.2064%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (24 samples, 0.05%)</title><rect x="92.9969%" y="133" width="0.0486%" height="15" fill="rgb(243,145,7)" fg:x="45907" fg:w="24"/><text x="93.2469%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (76 samples, 0.15%)</title><rect x="92.8997%" y="197" width="0.1540%" height="15" fill="rgb(238,178,32)" fg:x="45859" fg:w="76"/><text x="93.1497%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (56 samples, 0.11%)</title><rect x="92.9402%" y="181" width="0.1134%" height="15" fill="rgb(222,4,10)" fg:x="45879" fg:w="56"/><text x="93.1902%" y="191.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (281 samples, 0.57%)</title><rect x="92.4885%" y="213" width="0.5692%" height="15" fill="rgb(239,7,37)" fg:x="45656" fg:w="281"/><text x="92.7385%" y="223.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="93.1205%" y="165" width="0.0142%" height="15" fill="rgb(215,31,37)" fg:x="45968" fg:w="7"/><text x="93.3705%" y="175.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (8 samples, 0.02%)</title><rect x="93.1347%" y="165" width="0.0162%" height="15" fill="rgb(224,83,33)" fg:x="45975" fg:w="8"/><text x="93.3847%" y="175.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="93.1509%" y="165" width="0.0101%" height="15" fill="rgb(239,55,3)" fg:x="45983" fg:w="5"/><text x="93.4009%" y="175.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (30 samples, 0.06%)</title><rect x="93.1023%" y="181" width="0.0608%" height="15" fill="rgb(247,92,11)" fg:x="45959" fg:w="30"/><text x="93.3523%" y="191.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (9 samples, 0.02%)</title><rect x="93.1833%" y="165" width="0.0182%" height="15" fill="rgb(239,200,7)" fg:x="45999" fg:w="9"/><text x="93.4333%" y="175.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (20 samples, 0.04%)</title><rect x="93.1630%" y="181" width="0.0405%" height="15" fill="rgb(227,115,8)" fg:x="45989" fg:w="20"/><text x="93.4130%" y="191.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (63 samples, 0.13%)</title><rect x="93.0800%" y="197" width="0.1276%" height="15" fill="rgb(215,189,27)" fg:x="45948" fg:w="63"/><text x="93.3300%" y="207.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (23 samples, 0.05%)</title><rect x="93.2198%" y="181" width="0.0466%" height="15" fill="rgb(251,216,39)" fg:x="46017" fg:w="23"/><text x="93.4698%" y="191.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (10 samples, 0.02%)</title><rect x="93.2461%" y="165" width="0.0203%" height="15" fill="rgb(207,29,47)" fg:x="46030" fg:w="10"/><text x="93.4961%" y="175.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="93.2785%" y="165" width="0.0122%" height="15" fill="rgb(210,71,34)" fg:x="46046" fg:w="6"/><text x="93.5285%" y="175.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (11 samples, 0.02%)</title><rect x="93.2907%" y="165" width="0.0223%" height="15" fill="rgb(253,217,51)" fg:x="46052" fg:w="11"/><text x="93.5407%" y="175.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (57 samples, 0.12%)</title><rect x="93.2076%" y="197" width="0.1155%" height="15" fill="rgb(222,117,46)" fg:x="46011" fg:w="57"/><text x="93.4576%" y="207.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (28 samples, 0.06%)</title><rect x="93.2663%" y="181" width="0.0567%" height="15" fill="rgb(226,132,6)" fg:x="46040" fg:w="28"/><text x="93.5163%" y="191.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="93.3838%" y="165" width="0.0142%" height="15" fill="rgb(254,145,51)" fg:x="46098" fg:w="7"/><text x="93.6338%" y="175.50"></text></g><g><title>databend-query`core::hash::BuildHasher::hash_one (6 samples, 0.01%)</title><rect x="93.3980%" y="165" width="0.0122%" height="15" fill="rgb(231,199,27)" fg:x="46105" fg:w="6"/><text x="93.6480%" y="175.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.02%)</title><rect x="93.4102%" y="165" width="0.0182%" height="15" fill="rgb(245,158,14)" fg:x="46111" fg:w="9"/><text x="93.6602%" y="175.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (32 samples, 0.06%)</title><rect x="93.3656%" y="181" width="0.0648%" height="15" fill="rgb(240,113,14)" fg:x="46089" fg:w="32"/><text x="93.6156%" y="191.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (55 samples, 0.11%)</title><rect x="93.3231%" y="197" width="0.1114%" height="15" fill="rgb(210,20,13)" fg:x="46068" fg:w="55"/><text x="93.5731%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (12 samples, 0.02%)</title><rect x="93.7444%" y="117" width="0.0243%" height="15" fill="rgb(241,144,13)" fg:x="46276" fg:w="12"/><text x="93.9944%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (19 samples, 0.04%)</title><rect x="93.7323%" y="133" width="0.0385%" height="15" fill="rgb(235,43,34)" fg:x="46270" fg:w="19"/><text x="93.9823%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (6 samples, 0.01%)</title><rect x="93.7870%" y="85" width="0.0122%" height="15" fill="rgb(208,36,20)" fg:x="46297" fg:w="6"/><text x="94.0370%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (20 samples, 0.04%)</title><rect x="93.7728%" y="117" width="0.0405%" height="15" fill="rgb(239,204,10)" fg:x="46290" fg:w="20"/><text x="94.0228%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (15 samples, 0.03%)</title><rect x="93.7829%" y="101" width="0.0304%" height="15" fill="rgb(217,84,43)" fg:x="46295" fg:w="15"/><text x="94.0329%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (5 samples, 0.01%)</title><rect x="93.8032%" y="85" width="0.0101%" height="15" fill="rgb(241,170,50)" fg:x="46305" fg:w="5"/><text x="94.0532%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (45 samples, 0.09%)</title><rect x="93.7323%" y="149" width="0.0912%" height="15" fill="rgb(226,205,29)" fg:x="46270" fg:w="45"/><text x="93.9823%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (26 samples, 0.05%)</title><rect x="93.7708%" y="133" width="0.0527%" height="15" fill="rgb(233,113,1)" fg:x="46289" fg:w="26"/><text x="94.0208%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="93.8133%" y="117" width="0.0101%" height="15" fill="rgb(253,98,13)" fg:x="46310" fg:w="5"/><text x="94.0633%" y="127.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (184 samples, 0.37%)</title><rect x="93.4547%" y="165" width="0.3727%" height="15" fill="rgb(211,115,12)" fg:x="46133" fg:w="184"/><text x="93.7047%" y="175.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.02%)</title><rect x="93.8518%" y="133" width="0.0203%" height="15" fill="rgb(208,12,16)" fg:x="46329" fg:w="10"/><text x="94.1018%" y="143.50"></text></g><g><title>databend-query`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (28 samples, 0.06%)</title><rect x="93.8356%" y="149" width="0.0567%" height="15" fill="rgb(237,193,54)" fg:x="46321" fg:w="28"/><text x="94.0856%" y="159.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.02%)</title><rect x="93.8721%" y="133" width="0.0203%" height="15" fill="rgb(243,22,42)" fg:x="46339" fg:w="10"/><text x="94.1221%" y="143.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (17 samples, 0.03%)</title><rect x="93.8984%" y="133" width="0.0344%" height="15" fill="rgb(233,151,36)" fg:x="46352" fg:w="17"/><text x="94.1484%" y="143.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="93.9328%" y="133" width="0.0122%" height="15" fill="rgb(237,57,45)" fg:x="46369" fg:w="6"/><text x="94.1828%" y="143.50"></text></g><g><title>databend-query`&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (27 samples, 0.05%)</title><rect x="93.8923%" y="149" width="0.0547%" height="15" fill="rgb(221,88,17)" fg:x="46349" fg:w="27"/><text x="94.1423%" y="159.50"></text></g><g><title>databend-query`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="93.9875%" y="117" width="0.0122%" height="15" fill="rgb(230,79,15)" fg:x="46396" fg:w="6"/><text x="94.2375%" y="127.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (17 samples, 0.03%)</title><rect x="93.9713%" y="133" width="0.0344%" height="15" fill="rgb(213,57,13)" fg:x="46388" fg:w="17"/><text x="94.2213%" y="143.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (30 samples, 0.06%)</title><rect x="93.9470%" y="149" width="0.0608%" height="15" fill="rgb(222,116,39)" fg:x="46376" fg:w="30"/><text x="94.1970%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.01%)</title><rect x="94.2002%" y="85" width="0.0142%" height="15" fill="rgb(245,107,2)" fg:x="46501" fg:w="7"/><text x="94.4502%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (21 samples, 0.04%)</title><rect x="94.2164%" y="69" width="0.0425%" height="15" fill="rgb(238,1,10)" fg:x="46509" fg:w="21"/><text x="94.4664%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (14 samples, 0.03%)</title><rect x="94.2306%" y="53" width="0.0284%" height="15" fill="rgb(249,4,48)" fg:x="46516" fg:w="14"/><text x="94.4806%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (8 samples, 0.02%)</title><rect x="94.2428%" y="37" width="0.0162%" height="15" fill="rgb(223,151,18)" fg:x="46522" fg:w="8"/><text x="94.4928%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (33 samples, 0.07%)</title><rect x="94.1941%" y="101" width="0.0669%" height="15" fill="rgb(227,65,43)" fg:x="46498" fg:w="33"/><text x="94.4441%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (23 samples, 0.05%)</title><rect x="94.2144%" y="85" width="0.0466%" height="15" fill="rgb(218,40,45)" fg:x="46508" fg:w="23"/><text x="94.4644%" y="95.50"></text></g><g><title>databend-query`&lt;common_sql::planner::optimizer::property::property::RelationalProperty as core::clone::Clone&gt;::clone (125 samples, 0.25%)</title><rect x="94.0098%" y="117" width="0.2532%" height="15" fill="rgb(252,121,31)" fg:x="46407" fg:w="125"/><text x="94.2598%" y="127.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (131 samples, 0.27%)</title><rect x="94.0098%" y="133" width="0.2654%" height="15" fill="rgb(219,158,43)" fg:x="46407" fg:w="131"/><text x="94.2598%" y="143.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (132 samples, 0.27%)</title><rect x="94.0098%" y="149" width="0.2674%" height="15" fill="rgb(231,162,42)" fg:x="46407" fg:w="132"/><text x="94.2598%" y="159.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.01%)</title><rect x="94.2792%" y="133" width="0.0101%" height="15" fill="rgb(217,179,25)" fg:x="46540" fg:w="5"/><text x="94.5292%" y="143.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (8 samples, 0.02%)</title><rect x="94.2792%" y="149" width="0.0162%" height="15" fill="rgb(206,212,31)" fg:x="46540" fg:w="8"/><text x="94.5292%" y="159.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::update_statistic (6 samples, 0.01%)</title><rect x="94.2954%" y="149" width="0.0122%" height="15" fill="rgb(235,144,12)" fg:x="46548" fg:w="6"/><text x="94.5454%" y="159.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (9 samples, 0.02%)</title><rect x="94.3076%" y="149" width="0.0182%" height="15" fill="rgb(213,51,10)" fg:x="46554" fg:w="9"/><text x="94.5576%" y="159.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.01%)</title><rect x="94.3116%" y="133" width="0.0142%" height="15" fill="rgb(231,145,14)" fg:x="46556" fg:w="7"/><text x="94.5616%" y="143.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="94.3258%" y="149" width="0.0101%" height="15" fill="rgb(235,15,28)" fg:x="46563" fg:w="5"/><text x="94.5758%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.01%)</title><rect x="94.3380%" y="149" width="0.0122%" height="15" fill="rgb(237,206,10)" fg:x="46569" fg:w="6"/><text x="94.5880%" y="159.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (266 samples, 0.54%)</title><rect x="93.8275%" y="165" width="0.5389%" height="15" fill="rgb(236,227,27)" fg:x="46317" fg:w="266"/><text x="94.0775%" y="175.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (480 samples, 0.97%)</title><rect x="93.4365%" y="197" width="0.9724%" height="15" fill="rgb(246,83,35)" fg:x="46124" fg:w="480"/><text x="93.6865%" y="207.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (477 samples, 0.97%)</title><rect x="93.4426%" y="181" width="0.9663%" height="15" fill="rgb(220,136,24)" fg:x="46127" fg:w="477"/><text x="93.6926%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (15 samples, 0.03%)</title><rect x="94.3785%" y="165" width="0.0304%" height="15" fill="rgb(217,3,25)" fg:x="46589" fg:w="15"/><text x="94.6285%" y="175.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.01%)</title><rect x="94.4109%" y="165" width="0.0122%" height="15" fill="rgb(239,24,14)" fg:x="46605" fg:w="6"/><text x="94.6609%" y="175.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.02%)</title><rect x="94.4109%" y="181" width="0.0182%" height="15" fill="rgb(244,16,53)" fg:x="46605" fg:w="9"/><text x="94.6609%" y="191.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (16 samples, 0.03%)</title><rect x="94.4089%" y="197" width="0.0324%" height="15" fill="rgb(208,175,44)" fg:x="46604" fg:w="16"/><text x="94.6589%" y="207.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::update_statistic (13 samples, 0.03%)</title><rect x="94.4413%" y="197" width="0.0263%" height="15" fill="rgb(252,18,48)" fg:x="46620" fg:w="13"/><text x="94.6913%" y="207.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.02%)</title><rect x="94.4757%" y="181" width="0.0223%" height="15" fill="rgb(234,199,32)" fg:x="46637" fg:w="11"/><text x="94.7257%" y="191.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (16 samples, 0.03%)</title><rect x="94.4676%" y="197" width="0.0324%" height="15" fill="rgb(225,77,54)" fg:x="46633" fg:w="16"/><text x="94.7176%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.02%)</title><rect x="94.5162%" y="197" width="0.0243%" height="15" fill="rgb(225,42,25)" fg:x="46657" fg:w="12"/><text x="94.7662%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="94.5426%" y="197" width="0.0162%" height="15" fill="rgb(242,227,46)" fg:x="46670" fg:w="8"/><text x="94.7926%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.02%)</title><rect x="94.5426%" y="181" width="0.0162%" height="15" fill="rgb(246,197,35)" fg:x="46670" fg:w="8"/><text x="94.7926%" y="191.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (750 samples, 1.52%)</title><rect x="93.0577%" y="213" width="1.5193%" height="15" fill="rgb(215,159,26)" fg:x="45937" fg:w="750"/><text x="93.3077%" y="223.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.01%)</title><rect x="94.5912%" y="213" width="0.0142%" height="15" fill="rgb(212,194,50)" fg:x="46694" fg:w="7"/><text x="94.8412%" y="223.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (1,072 samples, 2.17%)</title><rect x="92.4804%" y="245" width="2.1716%" height="15" fill="rgb(246,132,1)" fg:x="45652" fg:w="1072"/><text x="92.7304%" y="255.50">d..</text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (1,072 samples, 2.17%)</title><rect x="92.4804%" y="229" width="2.1716%" height="15" fill="rgb(217,71,7)" fg:x="45652" fg:w="1072"/><text x="92.7304%" y="239.50">d..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (15 samples, 0.03%)</title><rect x="94.6216%" y="213" width="0.0304%" height="15" fill="rgb(252,59,32)" fg:x="46709" fg:w="15"/><text x="94.8716%" y="223.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.02%)</title><rect x="94.6621%" y="229" width="0.0182%" height="15" fill="rgb(253,204,25)" fg:x="46729" fg:w="9"/><text x="94.9121%" y="239.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (5 samples, 0.01%)</title><rect x="94.6803%" y="229" width="0.0101%" height="15" fill="rgb(232,21,16)" fg:x="46738" fg:w="5"/><text x="94.9303%" y="239.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (19 samples, 0.04%)</title><rect x="94.6621%" y="245" width="0.0385%" height="15" fill="rgb(248,90,29)" fg:x="46729" fg:w="19"/><text x="94.9121%" y="255.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (5 samples, 0.01%)</title><rect x="94.7087%" y="229" width="0.0101%" height="15" fill="rgb(249,223,7)" fg:x="46752" fg:w="5"/><text x="94.9587%" y="239.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::update_statistic (11 samples, 0.02%)</title><rect x="94.7006%" y="245" width="0.0223%" height="15" fill="rgb(231,119,42)" fg:x="46748" fg:w="11"/><text x="94.9506%" y="255.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (10 samples, 0.02%)</title><rect x="94.7229%" y="245" width="0.0203%" height="15" fill="rgb(215,41,35)" fg:x="46759" fg:w="10"/><text x="94.9729%" y="255.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.02%)</title><rect x="94.7431%" y="245" width="0.0182%" height="15" fill="rgb(220,44,45)" fg:x="46769" fg:w="9"/><text x="94.9931%" y="255.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="94.7634%" y="245" width="0.0101%" height="15" fill="rgb(253,197,36)" fg:x="46779" fg:w="5"/><text x="95.0134%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.01%)</title><rect x="94.7857%" y="229" width="0.0101%" height="15" fill="rgb(245,225,54)" fg:x="46790" fg:w="5"/><text x="95.0357%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.02%)</title><rect x="94.7776%" y="245" width="0.0223%" height="15" fill="rgb(239,94,37)" fg:x="46786" fg:w="11"/><text x="95.0276%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_small (8 samples, 0.02%)</title><rect x="94.7999%" y="245" width="0.0162%" height="15" fill="rgb(242,217,10)" fg:x="46797" fg:w="8"/><text x="95.0499%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="94.8161%" y="245" width="0.0122%" height="15" fill="rgb(250,193,7)" fg:x="46805" fg:w="6"/><text x="95.0661%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="94.8161%" y="229" width="0.0122%" height="15" fill="rgb(230,104,19)" fg:x="46805" fg:w="6"/><text x="95.0661%" y="239.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (1,424 samples, 2.88%)</title><rect x="91.9618%" y="261" width="2.8847%" height="15" fill="rgb(230,181,4)" fg:x="45396" fg:w="1424"/><text x="92.2118%" y="271.50">da..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.01%)</title><rect x="94.8363%" y="245" width="0.0101%" height="15" fill="rgb(216,219,49)" fg:x="46815" fg:w="5"/><text x="95.0863%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (24 samples, 0.05%)</title><rect x="94.8789%" y="261" width="0.0486%" height="15" fill="rgb(254,144,0)" fg:x="46836" fg:w="24"/><text x="95.1289%" y="271.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (1,977 samples, 4.00%)</title><rect x="90.9246%" y="277" width="4.0049%" height="15" fill="rgb(205,209,38)" fg:x="44884" fg:w="1977"/><text x="91.1746%" y="287.50">data..</text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (1,982 samples, 4.02%)</title><rect x="90.9165%" y="293" width="4.0151%" height="15" fill="rgb(240,21,42)" fg:x="44880" fg:w="1982"/><text x="91.1665%" y="303.50">data..</text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="94.9457%" y="261" width="0.0101%" height="15" fill="rgb(241,132,3)" fg:x="46869" fg:w="5"/><text x="95.1957%" y="271.50"></text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.02%)</title><rect x="94.9457%" y="277" width="0.0162%" height="15" fill="rgb(225,14,2)" fg:x="46869" fg:w="8"/><text x="95.1957%" y="287.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (6 samples, 0.01%)</title><rect x="94.9619%" y="277" width="0.0122%" height="15" fill="rgb(210,141,35)" fg:x="46877" fg:w="6"/><text x="95.2119%" y="287.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (23 samples, 0.05%)</title><rect x="94.9417%" y="293" width="0.0466%" height="15" fill="rgb(251,14,44)" fg:x="46867" fg:w="23"/><text x="95.1917%" y="303.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::update_statistic (14 samples, 0.03%)</title><rect x="94.9883%" y="293" width="0.0284%" height="15" fill="rgb(247,48,18)" fg:x="46890" fg:w="14"/><text x="95.2383%" y="303.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.02%)</title><rect x="95.0227%" y="277" width="0.0162%" height="15" fill="rgb(225,0,40)" fg:x="46907" fg:w="8"/><text x="95.2727%" y="287.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (16 samples, 0.03%)</title><rect x="95.0166%" y="293" width="0.0324%" height="15" fill="rgb(221,31,33)" fg:x="46904" fg:w="16"/><text x="95.2666%" y="303.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (26 samples, 0.05%)</title><rect x="95.0490%" y="293" width="0.0527%" height="15" fill="rgb(237,42,40)" fg:x="46920" fg:w="26"/><text x="95.2990%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.02%)</title><rect x="95.1017%" y="293" width="0.0162%" height="15" fill="rgb(233,51,29)" fg:x="46946" fg:w="8"/><text x="95.3517%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.02%)</title><rect x="95.1199%" y="293" width="0.0162%" height="15" fill="rgb(226,58,20)" fg:x="46955" fg:w="8"/><text x="95.3699%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_small (5 samples, 0.01%)</title><rect x="95.1361%" y="293" width="0.0101%" height="15" fill="rgb(208,98,7)" fg:x="46963" fg:w="5"/><text x="95.3861%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="95.1463%" y="293" width="0.0142%" height="15" fill="rgb(228,143,44)" fg:x="46968" fg:w="7"/><text x="95.3963%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="95.1503%" y="277" width="0.0101%" height="15" fill="rgb(246,55,38)" fg:x="46970" fg:w="5"/><text x="95.4003%" y="287.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (2,570 samples, 5.21%)</title><rect x="89.9643%" y="309" width="5.2062%" height="15" fill="rgb(247,87,16)" fg:x="44410" fg:w="2570"/><text x="90.2143%" y="319.50">databe..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (17 samples, 0.03%)</title><rect x="95.1949%" y="309" width="0.0344%" height="15" fill="rgb(234,129,42)" fg:x="46992" fg:w="17"/><text x="95.4449%" y="319.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop_child (3,324 samples, 6.73%)</title><rect x="88.4977%" y="341" width="6.7337%" height="15" fill="rgb(220,82,16)" fg:x="43686" fg:w="3324"/><text x="88.7477%" y="351.50">databend-..</text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (3,323 samples, 6.73%)</title><rect x="88.4997%" y="325" width="6.7316%" height="15" fill="rgb(211,88,4)" fg:x="43687" fg:w="3323"/><text x="88.7497%" y="335.50">databend-..</text></g><g><title>databend-query`&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.01%)</title><rect x="95.2394%" y="325" width="0.0122%" height="15" fill="rgb(248,151,21)" fg:x="47014" fg:w="6"/><text x="95.4894%" y="335.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::Join::used_columns (16 samples, 0.03%)</title><rect x="95.2334%" y="341" width="0.0324%" height="15" fill="rgb(238,163,6)" fg:x="47011" fg:w="16"/><text x="95.4834%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::plans::join::update_statistic (12 samples, 0.02%)</title><rect x="95.2658%" y="341" width="0.0243%" height="15" fill="rgb(209,183,11)" fg:x="47027" fg:w="12"/><text x="95.5158%" y="351.50"></text></g><g><title>databend-query`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="95.3002%" y="325" width="0.0122%" height="15" fill="rgb(219,37,20)" fg:x="47044" fg:w="6"/><text x="95.5502%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="95.3002%" y="309" width="0.0122%" height="15" fill="rgb(210,158,4)" fg:x="47044" fg:w="6"/><text x="95.5502%" y="319.50"></text></g><g><title>databend-query`common_sql::planner::plans::scalar_expr::ScalarExpr::used_columns (15 samples, 0.03%)</title><rect x="95.2901%" y="341" width="0.0304%" height="15" fill="rgb(221,167,53)" fg:x="47039" fg:w="15"/><text x="95.5401%" y="351.50"></text></g><g><title>databend-query`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (23 samples, 0.05%)</title><rect x="95.3225%" y="341" width="0.0466%" height="15" fill="rgb(237,151,45)" fg:x="47055" fg:w="23"/><text x="95.5725%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.01%)</title><rect x="95.3691%" y="341" width="0.0122%" height="15" fill="rgb(231,39,3)" fg:x="47078" fg:w="6"/><text x="95.6191%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.02%)</title><rect x="95.3853%" y="341" width="0.0203%" height="15" fill="rgb(212,167,28)" fg:x="47086" fg:w="10"/><text x="95.6353%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_small (9 samples, 0.02%)</title><rect x="95.4056%" y="341" width="0.0182%" height="15" fill="rgb(232,178,8)" fg:x="47096" fg:w="9"/><text x="95.6556%" y="351.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::join::Join as common_sql::planner::plans::operator::Operator&gt;::derive_relational_prop (3,919 samples, 7.94%)</title><rect x="87.5051%" y="357" width="7.9390%" height="15" fill="rgb(225,151,20)" fg:x="43196" fg:w="3919"/><text x="87.7551%" y="367.50">databend-qu..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.01%)</title><rect x="95.4319%" y="341" width="0.0122%" height="15" fill="rgb(238,3,37)" fg:x="47109" fg:w="6"/><text x="95.6819%" y="351.50"></text></g><g><title>databend-query`common_base::runtime::runtime_tracker::ThreadTracker::alloc (5 samples, 0.01%)</title><rect x="95.4582%" y="357" width="0.0101%" height="15" fill="rgb(251,147,42)" fg:x="47122" fg:w="5"/><text x="95.7082%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (24 samples, 0.05%)</title><rect x="95.4825%" y="357" width="0.0486%" height="15" fill="rgb(208,173,10)" fg:x="47134" fg:w="24"/><text x="95.7325%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::property::builder::RelExpr::derive_relational_prop (4,616 samples, 9.35%)</title><rect x="86.1843%" y="373" width="9.3509%" height="15" fill="rgb(246,225,4)" fg:x="42544" fg:w="4616"/><text x="86.4343%" y="383.50">databend-quer..</text></g><g><title>libsystem_malloc.dylib`free (25 samples, 0.05%)</title><rect x="95.9586%" y="341" width="0.0506%" height="15" fill="rgb(248,102,6)" fg:x="47369" fg:w="25"/><text x="96.2086%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (13 samples, 0.03%)</title><rect x="95.9829%" y="325" width="0.0263%" height="15" fill="rgb(232,6,21)" fg:x="47381" fg:w="13"/><text x="96.2329%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (13 samples, 0.03%)</title><rect x="96.0113%" y="341" width="0.0263%" height="15" fill="rgb(221,179,22)" fg:x="47395" fg:w="13"/><text x="96.2613%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (239 samples, 0.48%)</title><rect x="95.5636%" y="357" width="0.4842%" height="15" fill="rgb(252,50,20)" fg:x="47174" fg:w="239"/><text x="95.8136%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (5 samples, 0.01%)</title><rect x="96.0376%" y="341" width="0.0101%" height="15" fill="rgb(222,56,38)" fg:x="47408" fg:w="5"/><text x="96.2876%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (25 samples, 0.05%)</title><rect x="96.0477%" y="357" width="0.0506%" height="15" fill="rgb(206,193,29)" fg:x="47413" fg:w="25"/><text x="96.2977%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (34 samples, 0.07%)</title><rect x="96.1024%" y="357" width="0.0689%" height="15" fill="rgb(239,192,45)" fg:x="47440" fg:w="34"/><text x="96.3524%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (14 samples, 0.03%)</title><rect x="96.1429%" y="341" width="0.0284%" height="15" fill="rgb(254,18,36)" fg:x="47460" fg:w="14"/><text x="96.3929%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (9 samples, 0.02%)</title><rect x="96.1531%" y="325" width="0.0182%" height="15" fill="rgb(221,127,11)" fg:x="47465" fg:w="9"/><text x="96.4031%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (23 samples, 0.05%)</title><rect x="96.2908%" y="341" width="0.0466%" height="15" fill="rgb(234,146,35)" fg:x="47533" fg:w="23"/><text x="96.5408%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_small (127 samples, 0.26%)</title><rect x="96.1713%" y="357" width="0.2573%" height="15" fill="rgb(254,201,37)" fg:x="47474" fg:w="127"/><text x="96.4213%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (40 samples, 0.08%)</title><rect x="96.3475%" y="341" width="0.0810%" height="15" fill="rgb(211,202,23)" fg:x="47561" fg:w="40"/><text x="96.5975%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="96.4286%" y="357" width="0.0122%" height="15" fill="rgb(237,91,2)" fg:x="47601" fg:w="6"/><text x="96.6786%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="96.4286%" y="341" width="0.0122%" height="15" fill="rgb(226,228,36)" fg:x="47601" fg:w="6"/><text x="96.6786%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (7 samples, 0.01%)</title><rect x="96.4509%" y="357" width="0.0142%" height="15" fill="rgb(213,63,50)" fg:x="47612" fg:w="7"/><text x="96.7009%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (466 samples, 0.94%)</title><rect x="95.5372%" y="373" width="0.9440%" height="15" fill="rgb(235,194,19)" fg:x="47161" fg:w="466"/><text x="95.7872%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (34 samples, 0.07%)</title><rect x="96.8742%" y="309" width="0.0689%" height="15" fill="rgb(207,204,18)" fg:x="47821" fg:w="34"/><text x="97.1242%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (11 samples, 0.02%)</title><rect x="96.9208%" y="293" width="0.0223%" height="15" fill="rgb(248,8,7)" fg:x="47844" fg:w="11"/><text x="97.1708%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (6 samples, 0.01%)</title><rect x="96.9431%" y="309" width="0.0122%" height="15" fill="rgb(223,145,47)" fg:x="47855" fg:w="6"/><text x="97.1931%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (9 samples, 0.02%)</title><rect x="96.9553%" y="309" width="0.0182%" height="15" fill="rgb(228,84,11)" fg:x="47861" fg:w="9"/><text x="97.2053%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (231 samples, 0.47%)</title><rect x="96.5096%" y="325" width="0.4680%" height="15" fill="rgb(218,76,45)" fg:x="47641" fg:w="231"/><text x="96.7596%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (21 samples, 0.04%)</title><rect x="96.9776%" y="325" width="0.0425%" height="15" fill="rgb(223,80,15)" fg:x="47872" fg:w="21"/><text x="97.2276%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_size (8 samples, 0.02%)</title><rect x="97.0829%" y="309" width="0.0162%" height="15" fill="rgb(219,218,33)" fg:x="47924" fg:w="8"/><text x="97.3329%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (53 samples, 0.11%)</title><rect x="97.0282%" y="325" width="0.1074%" height="15" fill="rgb(208,51,11)" fg:x="47897" fg:w="53"/><text x="97.2782%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (18 samples, 0.04%)</title><rect x="97.0991%" y="309" width="0.0365%" height="15" fill="rgb(229,165,39)" fg:x="47932" fg:w="18"/><text x="97.3491%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (14 samples, 0.03%)</title><rect x="97.1072%" y="293" width="0.0284%" height="15" fill="rgb(241,100,24)" fg:x="47936" fg:w="14"/><text x="97.3572%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (20 samples, 0.04%)</title><rect x="97.1822%" y="309" width="0.0405%" height="15" fill="rgb(228,14,23)" fg:x="47973" fg:w="20"/><text x="97.4322%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_small (96 samples, 0.19%)</title><rect x="97.1356%" y="325" width="0.1945%" height="15" fill="rgb(247,116,52)" fg:x="47950" fg:w="96"/><text x="97.3856%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (46 samples, 0.09%)</title><rect x="97.2369%" y="309" width="0.0932%" height="15" fill="rgb(216,149,33)" fg:x="48000" fg:w="46"/><text x="97.4869%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="97.3300%" y="325" width="0.0101%" height="15" fill="rgb(238,142,29)" fg:x="48046" fg:w="5"/><text x="97.5800%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="97.3300%" y="309" width="0.0101%" height="15" fill="rgb(224,83,40)" fg:x="48046" fg:w="5"/><text x="97.5800%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.01%)</title><rect x="97.3402%" y="325" width="0.0101%" height="15" fill="rgb(234,165,11)" fg:x="48051" fg:w="5"/><text x="97.5902%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (10 samples, 0.02%)</title><rect x="97.3584%" y="325" width="0.0203%" height="15" fill="rgb(215,96,23)" fg:x="48060" fg:w="10"/><text x="97.6084%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (441 samples, 0.89%)</title><rect x="96.4893%" y="341" width="0.8934%" height="15" fill="rgb(233,179,26)" fg:x="47631" fg:w="441"/><text x="96.7393%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (20 samples, 0.04%)</title><rect x="97.7028%" y="277" width="0.0405%" height="15" fill="rgb(225,129,33)" fg:x="48230" fg:w="20"/><text x="97.9528%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (13 samples, 0.03%)</title><rect x="97.7170%" y="261" width="0.0263%" height="15" fill="rgb(237,49,13)" fg:x="48237" fg:w="13"/><text x="97.9670%" y="271.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (171 samples, 0.35%)</title><rect x="97.4171%" y="293" width="0.3464%" height="15" fill="rgb(211,3,31)" fg:x="48089" fg:w="171"/><text x="97.6671%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (9 samples, 0.02%)</title><rect x="97.7453%" y="277" width="0.0182%" height="15" fill="rgb(216,152,19)" fg:x="48251" fg:w="9"/><text x="97.9953%" y="287.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (13 samples, 0.03%)</title><rect x="97.7636%" y="293" width="0.0263%" height="15" fill="rgb(251,121,35)" fg:x="48260" fg:w="13"/><text x="98.0136%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_size (6 samples, 0.01%)</title><rect x="97.8345%" y="277" width="0.0122%" height="15" fill="rgb(210,217,47)" fg:x="48295" fg:w="6"/><text x="98.0845%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (34 samples, 0.07%)</title><rect x="97.7939%" y="293" width="0.0689%" height="15" fill="rgb(244,116,22)" fg:x="48275" fg:w="34"/><text x="98.0439%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.02%)</title><rect x="97.8466%" y="277" width="0.0162%" height="15" fill="rgb(228,17,21)" fg:x="48301" fg:w="8"/><text x="98.0966%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.01%)</title><rect x="97.8527%" y="261" width="0.0101%" height="15" fill="rgb(240,149,34)" fg:x="48304" fg:w="5"/><text x="98.1027%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (17 samples, 0.03%)</title><rect x="97.9013%" y="277" width="0.0344%" height="15" fill="rgb(208,125,47)" fg:x="48328" fg:w="17"/><text x="98.1513%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_small (85 samples, 0.17%)</title><rect x="97.8628%" y="293" width="0.1722%" height="15" fill="rgb(249,186,39)" fg:x="48309" fg:w="85"/><text x="98.1128%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (41 samples, 0.08%)</title><rect x="97.9519%" y="277" width="0.0831%" height="15" fill="rgb(240,220,33)" fg:x="48353" fg:w="41"/><text x="98.2019%" y="287.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (332 samples, 0.67%)</title><rect x="97.3908%" y="309" width="0.6726%" height="15" fill="rgb(243,110,23)" fg:x="48076" fg:w="332"/><text x="97.6408%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.03%)</title><rect x="98.2092%" y="245" width="0.0344%" height="15" fill="rgb(219,163,46)" fg:x="48480" fg:w="17"/><text x="98.4592%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (6 samples, 0.01%)</title><rect x="98.2315%" y="229" width="0.0122%" height="15" fill="rgb(216,126,30)" fg:x="48491" fg:w="6"/><text x="98.4815%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (9 samples, 0.02%)</title><rect x="98.2437%" y="245" width="0.0182%" height="15" fill="rgb(208,139,11)" fg:x="48497" fg:w="9"/><text x="98.4937%" y="255.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (91 samples, 0.18%)</title><rect x="98.0796%" y="261" width="0.1843%" height="15" fill="rgb(213,118,36)" fg:x="48416" fg:w="91"/><text x="98.3296%" y="271.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.01%)</title><rect x="98.2639%" y="261" width="0.0142%" height="15" fill="rgb(226,43,17)" fg:x="48507" fg:w="7"/><text x="98.5139%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.03%)</title><rect x="98.2781%" y="261" width="0.0263%" height="15" fill="rgb(254,217,4)" fg:x="48514" fg:w="13"/><text x="98.5281%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (8 samples, 0.02%)</title><rect x="98.3206%" y="245" width="0.0162%" height="15" fill="rgb(210,134,47)" fg:x="48535" fg:w="8"/><text x="98.5706%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_small (48 samples, 0.10%)</title><rect x="98.3044%" y="261" width="0.0972%" height="15" fill="rgb(237,24,49)" fg:x="48527" fg:w="48"/><text x="98.5544%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (26 samples, 0.05%)</title><rect x="98.3490%" y="245" width="0.0527%" height="15" fill="rgb(251,39,46)" fg:x="48549" fg:w="26"/><text x="98.5990%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.02%)</title><rect x="98.4017%" y="261" width="0.0223%" height="15" fill="rgb(251,220,3)" fg:x="48575" fg:w="11"/><text x="98.6517%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.02%)</title><rect x="98.4057%" y="245" width="0.0182%" height="15" fill="rgb(228,105,12)" fg:x="48577" fg:w="9"/><text x="98.6557%" y="255.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (190 samples, 0.38%)</title><rect x="98.0694%" y="277" width="0.3849%" height="15" fill="rgb(215,196,1)" fg:x="48411" fg:w="190"/><text x="98.3194%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.02%)</title><rect x="98.5718%" y="213" width="0.0223%" height="15" fill="rgb(214,33,39)" fg:x="48659" fg:w="11"/><text x="98.8218%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (6 samples, 0.01%)</title><rect x="98.5820%" y="197" width="0.0122%" height="15" fill="rgb(220,19,52)" fg:x="48664" fg:w="6"/><text x="98.8320%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.01%)</title><rect x="98.5941%" y="213" width="0.0101%" height="15" fill="rgb(221,78,38)" fg:x="48670" fg:w="5"/><text x="98.8441%" y="223.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (72 samples, 0.15%)</title><rect x="98.4645%" y="229" width="0.1459%" height="15" fill="rgb(253,30,16)" fg:x="48606" fg:w="72"/><text x="98.7145%" y="239.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.01%)</title><rect x="98.6103%" y="229" width="0.0122%" height="15" fill="rgb(242,65,0)" fg:x="48678" fg:w="6"/><text x="98.8603%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.01%)</title><rect x="98.6225%" y="229" width="0.0142%" height="15" fill="rgb(235,201,12)" fg:x="48684" fg:w="7"/><text x="98.8725%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (8 samples, 0.02%)</title><rect x="98.6549%" y="213" width="0.0162%" height="15" fill="rgb(233,161,9)" fg:x="48700" fg:w="8"/><text x="98.9049%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_small (29 samples, 0.06%)</title><rect x="98.6367%" y="229" width="0.0587%" height="15" fill="rgb(241,207,41)" fg:x="48691" fg:w="29"/><text x="98.8867%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (10 samples, 0.02%)</title><rect x="98.6751%" y="213" width="0.0203%" height="15" fill="rgb(212,69,46)" fg:x="48710" fg:w="10"/><text x="98.9251%" y="223.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (126 samples, 0.26%)</title><rect x="98.4584%" y="245" width="0.2552%" height="15" fill="rgb(239,69,45)" fg:x="48603" fg:w="126"/><text x="98.7084%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.02%)</title><rect x="98.7866%" y="181" width="0.0162%" height="15" fill="rgb(242,117,48)" fg:x="48765" fg:w="8"/><text x="99.0366%" y="191.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::column_stat::ColumnStat&gt; (43 samples, 0.09%)</title><rect x="98.7197%" y="197" width="0.0871%" height="15" fill="rgb(228,41,36)" fg:x="48732" fg:w="43"/><text x="98.9697%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.01%)</title><rect x="98.8129%" y="197" width="0.0122%" height="15" fill="rgb(212,3,32)" fg:x="48778" fg:w="6"/><text x="99.0629%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_small (16 samples, 0.03%)</title><rect x="98.8251%" y="197" width="0.0324%" height="15" fill="rgb(233,41,49)" fg:x="48784" fg:w="16"/><text x="99.0751%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (6 samples, 0.01%)</title><rect x="98.8453%" y="181" width="0.0122%" height="15" fill="rgb(252,170,49)" fg:x="48794" fg:w="6"/><text x="99.0953%" y="191.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::property::property::RelationalProperty&gt; (73 samples, 0.15%)</title><rect x="98.7157%" y="213" width="0.1479%" height="15" fill="rgb(229,53,26)" fg:x="48730" fg:w="73"/><text x="98.9657%" y="223.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (13 samples, 0.03%)</title><rect x="98.8777%" y="197" width="0.0263%" height="15" fill="rgb(217,157,12)" fg:x="48810" fg:w="13"/><text x="99.1277%" y="207.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (26 samples, 0.05%)</title><rect x="98.8635%" y="213" width="0.0527%" height="15" fill="rgb(227,17,9)" fg:x="48803" fg:w="26"/><text x="99.1135%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="98.9182%" y="213" width="0.0101%" height="15" fill="rgb(218,84,12)" fg:x="48830" fg:w="5"/><text x="99.1682%" y="223.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (111 samples, 0.22%)</title><rect x="98.7157%" y="229" width="0.2249%" height="15" fill="rgb(212,79,24)" fg:x="48730" fg:w="111"/><text x="98.9657%" y="239.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (7 samples, 0.01%)</title><rect x="98.9425%" y="229" width="0.0142%" height="15" fill="rgb(217,222,37)" fg:x="48842" fg:w="7"/><text x="99.1925%" y="239.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (9 samples, 0.02%)</title><rect x="98.9567%" y="229" width="0.0182%" height="15" fill="rgb(246,208,8)" fg:x="48849" fg:w="9"/><text x="99.2067%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_small (5 samples, 0.01%)</title><rect x="98.9851%" y="229" width="0.0101%" height="15" fill="rgb(244,133,10)" fg:x="48863" fg:w="5"/><text x="99.2351%" y="239.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (142 samples, 0.29%)</title><rect x="98.7136%" y="245" width="0.2877%" height="15" fill="rgb(209,219,41)" fg:x="48729" fg:w="142"/><text x="98.9636%" y="255.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (278 samples, 0.56%)</title><rect x="98.4543%" y="261" width="0.5632%" height="15" fill="rgb(253,175,45)" fg:x="48601" fg:w="278"/><text x="98.7043%" y="271.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (8 samples, 0.02%)</title><rect x="99.0216%" y="261" width="0.0162%" height="15" fill="rgb(235,100,37)" fg:x="48881" fg:w="8"/><text x="99.2716%" y="271.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_expression::values::Scalar&gt; (8 samples, 0.02%)</title><rect x="99.0438%" y="245" width="0.0162%" height="15" fill="rgb(225,87,19)" fg:x="48892" fg:w="8"/><text x="99.2938%" y="255.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (14 samples, 0.03%)</title><rect x="99.0418%" y="261" width="0.0284%" height="15" fill="rgb(217,152,17)" fg:x="48891" fg:w="14"/><text x="99.2918%" y="271.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (313 samples, 0.63%)</title><rect x="98.4543%" y="277" width="0.6341%" height="15" fill="rgb(235,72,13)" fg:x="48601" fg:w="313"/><text x="98.7043%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.01%)</title><rect x="99.0965%" y="277" width="0.0122%" height="15" fill="rgb(233,140,18)" fg:x="48918" fg:w="6"/><text x="99.3465%" y="287.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (526 samples, 1.07%)</title><rect x="98.0654%" y="293" width="1.0656%" height="15" fill="rgb(207,212,28)" fg:x="48409" fg:w="526"/><text x="98.3154%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="99.1390%" y="261" width="0.0101%" height="15" fill="rgb(220,130,25)" fg:x="48939" fg:w="5"/><text x="99.3890%" y="271.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::binder::bind_context::ColumnBinding&gt; (8 samples, 0.02%)</title><rect x="99.1390%" y="277" width="0.0162%" height="15" fill="rgb(205,55,34)" fg:x="48939" fg:w="8"/><text x="99.3890%" y="287.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (16 samples, 0.03%)</title><rect x="99.1330%" y="293" width="0.0324%" height="15" fill="rgb(237,54,35)" fg:x="48936" fg:w="16"/><text x="99.3830%" y="303.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_expression::values::Scalar&gt; (19 samples, 0.04%)</title><rect x="99.1735%" y="277" width="0.0385%" height="15" fill="rgb(208,67,23)" fg:x="48956" fg:w="19"/><text x="99.4235%" y="287.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.01%)</title><rect x="99.2120%" y="277" width="0.0142%" height="15" fill="rgb(206,207,50)" fg:x="48975" fg:w="7"/><text x="99.4620%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.02%)</title><rect x="99.2262%" y="277" width="0.0162%" height="15" fill="rgb(213,211,42)" fg:x="48982" fg:w="8"/><text x="99.4762%" y="287.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (37 samples, 0.07%)</title><rect x="99.1735%" y="293" width="0.0750%" height="15" fill="rgb(252,197,50)" fg:x="48956" fg:w="37"/><text x="99.4235%" y="303.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (595 samples, 1.21%)</title><rect x="98.0634%" y="309" width="1.2053%" height="15" fill="rgb(251,211,41)" fg:x="48408" fg:w="595"/><text x="98.3134%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.01%)</title><rect x="99.2707%" y="309" width="0.0142%" height="15" fill="rgb(229,211,5)" fg:x="49004" fg:w="7"/><text x="99.5207%" y="319.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (947 samples, 1.92%)</title><rect x="97.3847%" y="325" width="1.9184%" height="15" fill="rgb(239,36,31)" fg:x="48073" fg:w="947"/><text x="97.6347%" y="335.50">d..</text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::binder::bind_context::ColumnBinding&gt; (6 samples, 0.01%)</title><rect x="99.3092%" y="309" width="0.0122%" height="15" fill="rgb(248,67,31)" fg:x="49023" fg:w="6"/><text x="99.5592%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (15 samples, 0.03%)</title><rect x="99.3072%" y="325" width="0.0304%" height="15" fill="rgb(249,55,44)" fg:x="49022" fg:w="15"/><text x="99.5572%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_expression::values::Scalar&gt; (7 samples, 0.01%)</title><rect x="99.3477%" y="309" width="0.0142%" height="15" fill="rgb(216,82,12)" fg:x="49042" fg:w="7"/><text x="99.5977%" y="319.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.01%)</title><rect x="99.3619%" y="309" width="0.0122%" height="15" fill="rgb(242,174,1)" fg:x="49049" fg:w="6"/><text x="99.6119%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.02%)</title><rect x="99.3740%" y="309" width="0.0223%" height="15" fill="rgb(208,120,29)" fg:x="49055" fg:w="11"/><text x="99.6240%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,core::option::Option&lt;common_catalog::table::ColumnStatistics&gt;&gt;&gt; (32 samples, 0.06%)</title><rect x="99.3437%" y="325" width="0.0648%" height="15" fill="rgb(221,105,43)" fg:x="49040" fg:w="32"/><text x="99.5937%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.02%)</title><rect x="99.4166%" y="325" width="0.0162%" height="15" fill="rgb(234,124,22)" fg:x="49076" fg:w="8"/><text x="99.6666%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (1,014 samples, 2.05%)</title><rect x="97.3827%" y="341" width="2.0541%" height="15" fill="rgb(212,23,30)" fg:x="48072" fg:w="1014"/><text x="97.6327%" y="351.50">d..</text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="99.4389%" y="341" width="0.0101%" height="15" fill="rgb(219,122,53)" fg:x="49087" fg:w="5"/><text x="99.6889%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_small (7 samples, 0.01%)</title><rect x="99.4490%" y="341" width="0.0142%" height="15" fill="rgb(248,84,24)" fg:x="49092" fg:w="7"/><text x="99.6990%" y="351.50"></text></g><g><title>databend-query`alloc::sync::Arc&lt;T&gt;::drop_slow (1,474 samples, 2.99%)</title><rect x="96.4833%" y="357" width="2.9860%" height="15" fill="rgb(245,115,18)" fg:x="47628" fg:w="1474"/><text x="96.7333%" y="367.50">dat..</text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::plans::operator::RelOperator&gt; (6 samples, 0.01%)</title><rect x="99.4692%" y="357" width="0.0122%" height="15" fill="rgb(227,176,51)" fg:x="49102" fg:w="6"/><text x="99.7192%" y="367.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="99.4814%" y="357" width="0.0101%" height="15" fill="rgb(229,63,42)" fg:x="49108" fg:w="5"/><text x="99.7314%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::s_expr::SExpr&gt; (1,488 samples, 3.01%)</title><rect x="96.4812%" y="373" width="3.0143%" height="15" fill="rgb(247,202,24)" fg:x="47627" fg:w="1488"/><text x="96.7312%" y="383.50">dat..</text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="99.4956%" y="373" width="0.0101%" height="15" fill="rgb(244,173,20)" fg:x="49115" fg:w="5"/><text x="99.7456%" y="383.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::join_node::JoinNode::cardinality (6,919 samples, 14.02%)</title><rect x="85.5198%" y="389" width="14.0163%" height="15" fill="rgb(242,81,47)" fg:x="42216" fg:w="6919"/><text x="85.7698%" y="399.50">databend-query`common..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.01%)</title><rect x="99.5260%" y="373" width="0.0101%" height="15" fill="rgb(231,185,54)" fg:x="49130" fg:w="5"/><text x="99.7760%" y="383.50"></text></g><g><title>databend-query`std::alloc::System::grow_impl (6 samples, 0.01%)</title><rect x="99.5402%" y="325" width="0.0122%" height="15" fill="rgb(243,55,32)" fg:x="49137" fg:w="6"/><text x="99.7902%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`realloc (6 samples, 0.01%)</title><rect x="99.5402%" y="309" width="0.0122%" height="15" fill="rgb(208,167,19)" fg:x="49137" fg:w="6"/><text x="99.7902%" y="319.50"></text></g><g><title>databend-query`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.02%)</title><rect x="99.5381%" y="373" width="0.0162%" height="15" fill="rgb(231,72,35)" fg:x="49136" fg:w="8"/><text x="99.7881%" y="383.50"></text></g><g><title>databend-query`alloc::raw_vec::finish_grow (8 samples, 0.02%)</title><rect x="99.5381%" y="357" width="0.0162%" height="15" fill="rgb(250,173,51)" fg:x="49136" fg:w="8"/><text x="99.7881%" y="367.50"></text></g><g><title>databend-query`__rg_realloc (8 samples, 0.02%)</title><rect x="99.5381%" y="341" width="0.0162%" height="15" fill="rgb(209,5,22)" fg:x="49136" fg:w="8"/><text x="99.7881%" y="351.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::util::union (10 samples, 0.02%)</title><rect x="99.5361%" y="389" width="0.0203%" height="15" fill="rgb(250,174,19)" fg:x="49135" fg:w="10"/><text x="99.7861%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.01%)</title><rect x="99.5645%" y="341" width="0.0122%" height="15" fill="rgb(217,3,49)" fg:x="49149" fg:w="6"/><text x="99.8145%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::binder::bind_context::ColumnBinding&gt; (9 samples, 0.02%)</title><rect x="99.5624%" y="357" width="0.0182%" height="15" fill="rgb(218,225,5)" fg:x="49148" fg:w="9"/><text x="99.8124%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(common_sql::planner::plans::scalar_expr::ScalarExpr,common_sql::planner::plans::scalar_expr::ScalarExpr)&gt;&gt; (11 samples, 0.02%)</title><rect x="99.5624%" y="373" width="0.0223%" height="15" fill="rgb(236,89,11)" fg:x="49148" fg:w="11"/><text x="99.8124%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::binder::bind_context::ColumnBinding&gt; (5 samples, 0.01%)</title><rect x="99.5867%" y="341" width="0.0101%" height="15" fill="rgb(206,33,28)" fg:x="49160" fg:w="5"/><text x="99.8367%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(common_sql::planner::plans::scalar_expr::ScalarExpr,common_sql::planner::plans::scalar_expr::ScalarExpr)&gt;&gt; (8 samples, 0.02%)</title><rect x="99.5847%" y="357" width="0.0162%" height="15" fill="rgb(241,56,42)" fg:x="49159" fg:w="8"/><text x="99.8347%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(common_sql::planner::plans::scalar_expr::ScalarExpr,common_sql::planner::plans::scalar_expr::ScalarExpr)&gt;&gt; (7 samples, 0.01%)</title><rect x="99.6009%" y="341" width="0.0142%" height="15" fill="rgb(222,44,11)" fg:x="49167" fg:w="7"/><text x="99.8509%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="99.6192%" y="293" width="0.0101%" height="15" fill="rgb(234,111,20)" fg:x="49176" fg:w="5"/><text x="99.8692%" y="303.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::binder::bind_context::ColumnBinding&gt; (6 samples, 0.01%)</title><rect x="99.6192%" y="309" width="0.0122%" height="15" fill="rgb(237,77,6)" fg:x="49176" fg:w="6"/><text x="99.8692%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(common_sql::planner::plans::scalar_expr::ScalarExpr,common_sql::planner::plans::scalar_expr::ScalarExpr)&gt;&gt; (8 samples, 0.02%)</title><rect x="99.6192%" y="325" width="0.0162%" height="15" fill="rgb(235,111,23)" fg:x="49176" fg:w="8"/><text x="99.8692%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::binder::bind_context::ColumnBinding&gt; (5 samples, 0.01%)</title><rect x="99.6354%" y="293" width="0.0101%" height="15" fill="rgb(251,135,29)" fg:x="49184" fg:w="5"/><text x="99.8854%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.01%)</title><rect x="99.6354%" y="277" width="0.0101%" height="15" fill="rgb(217,57,1)" fg:x="49184" fg:w="5"/><text x="99.8854%" y="287.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(common_sql::planner::plans::scalar_expr::ScalarExpr,common_sql::planner::plans::scalar_expr::ScalarExpr)&gt;&gt; (8 samples, 0.02%)</title><rect x="99.6354%" y="309" width="0.0162%" height="15" fill="rgb(249,119,31)" fg:x="49184" fg:w="8"/><text x="99.8854%" y="319.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (15 samples, 0.03%)</title><rect x="99.6354%" y="325" width="0.0304%" height="15" fill="rgb(233,164,33)" fg:x="49184" fg:w="15"/><text x="99.8854%" y="335.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (35 samples, 0.07%)</title><rect x="99.6151%" y="341" width="0.0709%" height="15" fill="rgb(250,217,43)" fg:x="49174" fg:w="35"/><text x="99.8651%" y="351.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (51 samples, 0.10%)</title><rect x="99.6009%" y="357" width="0.1033%" height="15" fill="rgb(232,154,50)" fg:x="49167" fg:w="51"/><text x="99.8509%" y="367.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (64 samples, 0.13%)</title><rect x="99.5847%" y="373" width="0.1296%" height="15" fill="rgb(227,190,8)" fg:x="49159" fg:w="64"/><text x="99.8347%" y="383.50"></text></g><g><title>databend-query`core::ptr::drop_in_place&lt;common_sql::planner::optimizer::hyper_dp::join_node::JoinNode&gt; (77 samples, 0.16%)</title><rect x="99.5624%" y="389" width="0.1560%" height="15" fill="rgb(209,217,32)" fg:x="49148" fg:w="77"/><text x="99.8124%" y="399.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::emit_csg_cmp (7,113 samples, 14.41%)</title><rect x="85.3172%" y="405" width="14.4093%" height="15" fill="rgb(243,203,50)" fg:x="42116" fg:w="7113"/><text x="85.5672%" y="415.50">databend-query`common_..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (15 samples, 0.03%)</title><rect x="99.7265%" y="405" width="0.0304%" height="15" fill="rgb(232,152,27)" fg:x="49229" fg:w="15"/><text x="99.9765%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::query_graph::QueryGraph::neighbors (15 samples, 0.03%)</title><rect x="99.7265%" y="389" width="0.0304%" height="15" fill="rgb(240,34,29)" fg:x="49229" fg:w="15"/><text x="99.9765%" y="399.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="99.7670%" y="389" width="0.0142%" height="15" fill="rgb(215,185,52)" fg:x="49249" fg:w="7"/><text x="100.0170%" y="399.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::query_graph::QueryGraph::is_connected (9 samples, 0.02%)</title><rect x="99.7650%" y="405" width="0.0182%" height="15" fill="rgb(240,89,49)" fg:x="49248" fg:w="9"/><text x="100.0150%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::query_graph::QueryGraph::neighbors (12 samples, 0.02%)</title><rect x="99.7832%" y="405" width="0.0243%" height="15" fill="rgb(225,12,52)" fg:x="49257" fg:w="12"/><text x="100.0332%" y="415.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (7,162 samples, 14.51%)</title><rect x="85.3132%" y="421" width="14.5085%" height="15" fill="rgb(239,128,45)" fg:x="42114" fg:w="7162"/><text x="85.5632%" y="431.50">databend-query`common_..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::query_graph::QueryGraph::is_connected (6 samples, 0.01%)</title><rect x="99.8298%" y="421" width="0.0122%" height="15" fill="rgb(211,78,47)" fg:x="49280" fg:w="6"/><text x="100.0798%" y="431.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (12,250 samples, 24.82%)</title><rect x="75.0527%" y="437" width="24.8157%" height="15" fill="rgb(232,31,21)" fg:x="37049" fg:w="12250"/><text x="75.3027%" y="447.50">databend-query`common_sql::planner::opti..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (14,080 samples, 28.52%)</title><rect x="71.3637%" y="453" width="28.5228%" height="15" fill="rgb(222,168,14)" fg:x="35228" fg:w="14080"/><text x="71.6137%" y="463.50">databend-query`common_sql::planner::optimizer:..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::emit_csg (14,675 samples, 29.73%)</title><rect x="70.1726%" y="533" width="29.7281%" height="15" fill="rgb(209,128,24)" fg:x="34640" fg:w="14675"/><text x="70.4226%" y="543.50">databend-query`common_sql::planner::optimizer::h..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (14,672 samples, 29.72%)</title><rect x="70.1787%" y="517" width="29.7221%" height="15" fill="rgb(249,35,13)" fg:x="34643" fg:w="14672"/><text x="70.4287%" y="527.50">databend-query`common_sql::planner::optimizer::h..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (14,669 samples, 29.72%)</title><rect x="70.1848%" y="501" width="29.7160%" height="15" fill="rgb(218,7,2)" fg:x="34646" fg:w="14669"/><text x="70.4348%" y="511.50">databend-query`common_sql::planner::optimizer::h..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (14,653 samples, 29.68%)</title><rect x="70.2172%" y="485" width="29.6836%" height="15" fill="rgb(238,107,27)" fg:x="34662" fg:w="14653"/><text x="70.4672%" y="495.50">databend-query`common_sql::planner::optimizer::h..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_cmp_rec (14,561 samples, 29.50%)</title><rect x="70.4035%" y="469" width="29.4972%" height="15" fill="rgb(217,88,38)" fg:x="34754" fg:w="14561"/><text x="70.6535%" y="479.50">databend-query`common_sql::planner::optimizer::..</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_csg_rec (47,105 samples, 95.42%)</title><rect x="4.4871%" y="581" width="95.4238%" height="15" fill="rgb(230,207,0)" fg:x="2215" fg:w="47105"/><text x="4.7371%" y="591.50">databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_csg_rec</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_csg_rec (31,989 samples, 64.80%)</title><rect x="35.1086%" y="565" width="64.8023%" height="15" fill="rgb(249,64,54)" fg:x="17331" fg:w="31989"/><text x="35.3586%" y="575.50">databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_csg_rec</text></g><g><title>databend-query`common_sql::planner::optimizer::hyper_dp::dphyp::DPhpy::enumerate_csg_rec (14,680 samples, 29.74%)</title><rect x="70.1726%" y="549" width="29.7383%" height="15" fill="rgb(231,7,11)" fg:x="34640" fg:w="14680"/><text x="70.4226%" y="559.50">databend-query`common_sql::planner::optimizer::h..</text></g><g><title>databend-query`&lt;&amp;T as core::fmt::Debug&gt;::fmt (5 samples, 0.01%)</title><rect x="99.9129%" y="341" width="0.0101%" height="15" fill="rgb(205,149,21)" fg:x="49321" fg:w="5"/><text x="100.1629%" y="351.50"></text></g><g><title>databend-query`core::fmt::builders::DebugInner::entry (5 samples, 0.01%)</title><rect x="99.9129%" y="325" width="0.0101%" height="15" fill="rgb(215,126,34)" fg:x="49321" fg:w="5"/><text x="100.1629%" y="335.50"></text></g><g><title>databend-query`&lt;&amp;T as core::fmt::Debug&gt;::fmt (5 samples, 0.01%)</title><rect x="99.9129%" y="309" width="0.0101%" height="15" fill="rgb(241,132,45)" fg:x="49321" fg:w="5"/><text x="100.1629%" y="319.50"></text></g><g><title>databend-query`core::fmt::builders::DebugTuple::field (5 samples, 0.01%)</title><rect x="99.9129%" y="293" width="0.0101%" height="15" fill="rgb(252,69,32)" fg:x="49321" fg:w="5"/><text x="100.1629%" y="303.50"></text></g><g><title>databend-query`&lt;common_sql::planner::plans::scalar_expr::ScalarExpr as core::fmt::Debug&gt;::fmt (5 samples, 0.01%)</title><rect x="99.9129%" y="277" width="0.0101%" height="15" fill="rgb(232,204,19)" fg:x="49321" fg:w="5"/><text x="100.1629%" y="287.50"></text></g><g><title>databend-query`core::fmt::builders::DebugTuple::field (5 samples, 0.01%)</title><rect x="99.9129%" y="261" width="0.0101%" height="15" fill="rgb(249,15,47)" fg:x="49321" fg:w="5"/><text x="100.1629%" y="271.50"></text></g><g><title>databend-query`&lt;&amp;T as core::fmt::Debug&gt;::fmt (5 samples, 0.01%)</title><rect x="99.9129%" y="245" width="0.0101%" height="15" fill="rgb(209,227,23)" fg:x="49321" fg:w="5"/><text x="100.1629%" y="255.50"></text></g><g><title>databend-query`common_sql::planner::optimizer::optimizer::optimize (49,043 samples, 99.35%)</title><rect x="0.5773%" y="613" width="99.3497%" height="15" fill="rgb(248,92,24)" fg:x="285" fg:w="49043"/><text x="0.8273%" y="623.50">databend-query`common_sql::planner::optimizer::optimizer::optimize</text></g><g><title>databend-query`common_sql::planner::optimizer::optimizer::optimize_query (49,043 samples, 99.35%)</title><rect x="0.5773%" y="597" width="99.3497%" height="15" fill="rgb(247,59,2)" fg:x="285" fg:w="49043"/><text x="0.8273%" y="607.50">databend-query`common_sql::planner::optimizer::optimizer::optimize_query</text></g><g><title>databend-query`std::io::stdio::_eprint (7 samples, 0.01%)</title><rect x="99.9129%" y="581" width="0.0142%" height="15" fill="rgb(221,30,5)" fg:x="49321" fg:w="7"/><text x="100.1629%" y="591.50"></text></g><g><title>databend-query`&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (7 samples, 0.01%)</title><rect x="99.9129%" y="565" width="0.0142%" height="15" fill="rgb(208,108,53)" fg:x="49321" fg:w="7"/><text x="100.1629%" y="575.50"></text></g><g><title>databend-query`core::fmt::write (7 samples, 0.01%)</title><rect x="99.9129%" y="549" width="0.0142%" height="15" fill="rgb(211,183,26)" fg:x="49321" fg:w="7"/><text x="100.1629%" y="559.50"></text></g><g><title>databend-query`&lt;&amp;T as core::fmt::Debug&gt;::fmt (7 samples, 0.01%)</title><rect x="99.9129%" y="533" width="0.0142%" height="15" fill="rgb(232,132,4)" fg:x="49321" fg:w="7"/><text x="100.1629%" y="543.50"></text></g><g><title>databend-query`core::fmt::builders::DebugStruct::field (7 samples, 0.01%)</title><rect x="99.9129%" y="517" width="0.0142%" height="15" fill="rgb(253,128,37)" fg:x="49321" fg:w="7"/><text x="100.1629%" y="527.50"></text></g><g><title>databend-query`&lt;&amp;T as core::fmt::Debug&gt;::fmt (7 samples, 0.01%)</title><rect x="99.9129%" y="501" width="0.0142%" height="15" fill="rgb(221,58,24)" fg:x="49321" fg:w="7"/><text x="100.1629%" y="511.50"></text></g><g><title>databend-query`core::fmt::builders::DebugStruct::field (7 samples, 0.01%)</title><rect x="99.9129%" y="485" width="0.0142%" height="15" fill="rgb(230,54,45)" fg:x="49321" fg:w="7"/><text x="100.1629%" y="495.50"></text></g><g><title>databend-query`&lt;&amp;T as core::fmt::Debug&gt;::fmt (7 samples, 0.01%)</title><rect x="99.9129%" y="469" width="0.0142%" height="15" fill="rgb(254,21,18)" fg:x="49321" fg:w="7"/><text x="100.1629%" y="479.50"></text></g><g><title>databend-query`core::fmt::builders::DebugMap::value (7 samples, 0.01%)</title><rect x="99.9129%" y="453" width="0.0142%" height="15" fill="rgb(221,108,0)" fg:x="49321" fg:w="7"/><text x="100.1629%" y="463.50"></text></g><g><title>databend-query`&lt;&amp;T as core::fmt::Debug&gt;::fmt (7 samples, 0.01%)</title><rect x="99.9129%" y="437" width="0.0142%" height="15" fill="rgb(206,95,1)" fg:x="49321" fg:w="7"/><text x="100.1629%" y="447.50"></text></g><g><title>databend-query`core::fmt::builders::DebugStruct::field (7 samples, 0.01%)</title><rect x="99.9129%" y="421" width="0.0142%" height="15" fill="rgb(237,52,5)" fg:x="49321" fg:w="7"/><text x="100.1629%" y="431.50"></text></g><g><title>databend-query`&lt;alloc::vec::Vec&lt;T,A&gt; as core::fmt::Debug&gt;::fmt (7 samples, 0.01%)</title><rect x="99.9129%" y="405" width="0.0142%" height="15" fill="rgb(218,150,34)" fg:x="49321" fg:w="7"/><text x="100.1629%" y="415.50"></text></g><g><title>databend-query`core::fmt::builders::DebugInner::entry (7 samples, 0.01%)</title><rect x="99.9129%" y="389" width="0.0142%" height="15" fill="rgb(235,194,28)" fg:x="49321" fg:w="7"/><text x="100.1629%" y="399.50"></text></g><g><title>databend-query`&lt;&amp;T as core::fmt::Debug&gt;::fmt (7 samples, 0.01%)</title><rect x="99.9129%" y="373" width="0.0142%" height="15" fill="rgb(245,92,18)" fg:x="49321" fg:w="7"/><text x="100.1629%" y="383.50"></text></g><g><title>databend-query`core::fmt::builders::DebugStruct::field (7 samples, 0.01%)</title><rect x="99.9129%" y="357" width="0.0142%" height="15" fill="rgb(253,203,53)" fg:x="49321" fg:w="7"/><text x="100.1629%" y="367.50"></text></g><g><title>databend-query`common_sql::planner::planner::Planner::plan_sql::_{{closure}} (49,062 samples, 99.39%)</title><rect x="0.5429%" y="645" width="99.3882%" height="15" fill="rgb(249,185,47)" fg:x="268" fg:w="49062"/><text x="0.7929%" y="655.50">databend-query`common_sql::planner::planner::Planner::plan_sql::_{{closure}}</text></g><g><title>databend-query`common_sql::planner::optimizer::optimizer::optimize (49,045 samples, 99.35%)</title><rect x="0.5773%" y="629" width="99.3538%" height="15" fill="rgb(252,194,52)" fg:x="285" fg:w="49045"/><text x="0.8273%" y="639.50">databend-query`common_sql::planner::optimizer::optimizer::optimize</text></g><g><title>databend-query`databend_query::servers::mysql::mysql_interactive_worker::InteractiveWorkerBase&lt;W&gt;::do_query::_{{closure}} (49,063 samples, 99.39%)</title><rect x="0.5429%" y="661" width="99.3902%" height="15" fill="rgb(210,53,36)" fg:x="268" fg:w="49063"/><text x="0.7929%" y="671.50">databend-query`databend_query::servers::mysql::mysql_interactive_worker::InteractiveWorkerBase&lt;W&gt;::do_query::_{{closure}}</text></g><g><title>databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (49,093 samples, 99.45%)</title><rect x="0.4842%" y="773" width="99.4510%" height="15" fill="rgb(237,37,25)" fg:x="239" fg:w="49093"/><text x="0.7342%" y="783.50">databend-query`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>databend-query`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (49,093 samples, 99.45%)</title><rect x="0.4842%" y="757" width="99.4510%" height="15" fill="rgb(242,116,27)" fg:x="239" fg:w="49093"/><text x="0.7342%" y="767.50">databend-query`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>databend-query`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (49,093 samples, 99.45%)</title><rect x="0.4842%" y="741" width="99.4510%" height="15" fill="rgb(213,185,26)" fg:x="239" fg:w="49093"/><text x="0.7342%" y="751.50">databend-query`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>databend-query`databend_query::servers::mysql::mysql_session::MySQLConnection::run_on_stream::_{{closure}}::_{{closure}} (49,066 samples, 99.40%)</title><rect x="0.5389%" y="725" width="99.3963%" height="15" fill="rgb(225,204,8)" fg:x="266" fg:w="49066"/><text x="0.7889%" y="735.50">databend-query`databend_query::servers::mysql::mysql_session::MySQLConnection::run_on_stream::_{{closure}}::_{{closure}}</text></g><g><title>databend-query`opensrv_mysql::AsyncMysqlIntermediary&lt;B,R,W&gt;::run_with_options::_{{closure}} (49,066 samples, 99.40%)</title><rect x="0.5389%" y="709" width="99.3963%" height="15" fill="rgb(254,111,37)" fg:x="266" fg:w="49066"/><text x="0.7889%" y="719.50">databend-query`opensrv_mysql::AsyncMysqlIntermediary&lt;B,R,W&gt;::run_with_options::_{{closure}}</text></g><g><title>databend-query`opensrv_mysql::AsyncMysqlIntermediary&lt;B,R,W&gt;::run::_{{closure}} (49,065 samples, 99.39%)</title><rect x="0.5409%" y="693" width="99.3943%" height="15" fill="rgb(242,35,9)" fg:x="267" fg:w="49065"/><text x="0.7909%" y="703.50">databend-query`opensrv_mysql::AsyncMysqlIntermediary&lt;B,R,W&gt;::run::_{{closure}}</text></g><g><title>databend-query`&lt;databend_query::servers::mysql::mysql_interactive_worker::InteractiveWorker&lt;W&gt; as opensrv_mysql::AsyncMysqlShim&lt;W&gt;&gt;::on_query::_{{closure}} (49,064 samples, 99.39%)</title><rect x="0.5429%" y="677" width="99.3923%" height="15" fill="rgb(232,138,49)" fg:x="268" fg:w="49064"/><text x="0.7929%" y="687.50">databend-query`&lt;databend_query::servers::mysql::mysql_interactive_worker::InteractiveWorker&lt;W&gt; as opensrv_mysql::AsyncMysqlShim&lt;W&gt;&gt;::on_query::_{{closure}}</text></g><g><title>databend-query`common_meta_client::grpc_client::MetaGrpcClient::kv_api::_{{closure}}::_{{closure}} (6 samples, 0.01%)</title><rect x="99.9413%" y="725" width="0.0122%" height="15" fill="rgb(247,56,4)" fg:x="49335" fg:w="6"/><text x="100.1913%" y="735.50"></text></g><g><title>databend-query`common_meta_client::grpc_client::MetaGrpcClient::worker_loop::_{{closure}}::_{{closure}} (9 samples, 0.02%)</title><rect x="99.9392%" y="741" width="0.0182%" height="15" fill="rgb(226,179,17)" fg:x="49334" fg:w="9"/><text x="100.1892%" y="751.50"></text></g><g><title>databend-query`&lt;common_base::runtime::runtime_tracker::UnlimitedFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.02%)</title><rect x="99.9372%" y="757" width="0.0223%" height="15" fill="rgb(216,163,45)" fg:x="49333" fg:w="11"/><text x="100.1872%" y="767.50"></text></g><g><title>databend-query`&lt;hyper::client::service::Connect&lt;C,B,T&gt; as tower_service::Service&lt;T&gt;&gt;::call::_{{closure}}::_{{closure}} (6 samples, 0.01%)</title><rect x="99.9595%" y="757" width="0.0122%" height="15" fill="rgb(211,157,3)" fg:x="49344" fg:w="6"/><text x="100.2095%" y="767.50"></text></g><g><title>databend-query`&lt;hyper::proto::h2::client::ClientTask&lt;B&gt; as core::future::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="99.9595%" y="741" width="0.0122%" height="15" fill="rgb(234,44,20)" fg:x="49344" fg:w="6"/><text x="100.2095%" y="751.50"></text></g><g><title>databend-query`&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="99.9737%" y="741" width="0.0182%" height="15" fill="rgb(254,138,23)" fg:x="49351" fg:w="9"/><text x="100.2237%" y="751.50"></text></g><g><title>databend-query`&lt;h2::client::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="99.9737%" y="725" width="0.0182%" height="15" fill="rgb(206,119,39)" fg:x="49351" fg:w="9"/><text x="100.2237%" y="735.50"></text></g><g><title>databend-query`tokio::runtime::scheduler::multi_thread::worker::run (49,134 samples, 99.53%)</title><rect x="0.4598%" y="805" width="99.5341%" height="15" fill="rgb(231,105,52)" fg:x="227" fg:w="49134"/><text x="0.7098%" y="815.50">databend-query`tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>databend-query`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (49,123 samples, 99.51%)</title><rect x="0.4821%" y="789" width="99.5118%" height="15" fill="rgb(250,20,5)" fg:x="238" fg:w="49123"/><text x="0.7321%" y="799.50">databend-query`tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>databend-query`tokio::runtime::task::raw::poll (29 samples, 0.06%)</title><rect x="99.9352%" y="773" width="0.0587%" height="15" fill="rgb(215,198,30)" fg:x="49332" fg:w="29"/><text x="100.1852%" y="783.50"></text></g><g><title>databend-query`hyper::proto::h2::client::conn_task::_{{closure}} (10 samples, 0.02%)</title><rect x="99.9737%" y="757" width="0.0203%" height="15" fill="rgb(246,142,8)" fg:x="49351" fg:w="10"/><text x="100.2237%" y="767.50"></text></g><g><title>databend-query`tokio::runtime::task::raw::poll (49,137 samples, 99.54%)</title><rect x="0.4558%" y="821" width="99.5402%" height="15" fill="rgb(243,26,38)" fg:x="225" fg:w="49137"/><text x="0.7058%" y="831.50">databend-query`tokio::runtime::task::raw::poll</text></g><g><title>databend-query`std::sys::unix::thread::Thread::new::thread_start (49,145 samples, 99.56%)</title><rect x="0.4416%" y="869" width="99.5564%" height="15" fill="rgb(205,133,28)" fg:x="218" fg:w="49145"/><text x="0.6916%" y="879.50">databend-query`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>databend-query`core::ops::function::FnOnce::call_once{{vtable.shim}} (49,145 samples, 99.56%)</title><rect x="0.4416%" y="853" width="99.5564%" height="15" fill="rgb(212,34,0)" fg:x="218" fg:w="49145"/><text x="0.6916%" y="863.50">databend-query`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>databend-query`std::sys_common::backtrace::__rust_begin_short_backtrace (49,145 samples, 99.56%)</title><rect x="0.4416%" y="837" width="99.5564%" height="15" fill="rgb(251,226,22)" fg:x="218" fg:w="49145"/><text x="0.6916%" y="847.50">databend-query`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>all (49,364 samples, 100%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(252,119,9)" fg:x="0" fg:w="49364"/><text x="0.2500%" y="927.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (49,146 samples, 99.56%)</title><rect x="0.4416%" y="901" width="99.5584%" height="15" fill="rgb(213,150,50)" fg:x="218" fg:w="49146"/><text x="0.6916%" y="911.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (49,146 samples, 99.56%)</title><rect x="0.4416%" y="885" width="99.5584%" height="15" fill="rgb(212,24,39)" fg:x="218" fg:w="49146"/><text x="0.6916%" y="895.50">libsystem_pthread.dylib`_pthread_start</text></g></svg></svg>