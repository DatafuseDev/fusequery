[workspace.package]
version = "0.1.0"
authors = ["Databend Authors <opensource@datafuselabs.com>"]
license = "Apache-2.0"
publish = false
edition = "2021"

[workspace]
resolver = "2"
members = [
    "src/binaries",
    "src/common/arrow",
    "src/common/auth",
    "src/common/base",
    "src/common/building",
    "src/common/cache",
    "src/common/cloud_control",
    "src/common/compress",
    "src/common/exception",
    "src/common/grpc",
    "src/common/hashtable",
    "src/common/http",
    "src/common/io",
    "src/common/metrics",
    "src/common/openai",
    "src/common/tracing",
    "src/common/storage",
    "src/common/vector",
    "src/common/license",
    "src/common/parquet2",
    "src/query/ast",
    "src/query/codegen",
    "src/query/config",
    "src/query/catalog",
    "src/query/datavalues",
    "src/query/expression",
    "src/query/formats",
    "src/query/functions",
    "src/query/management",
    "src/query/pipeline/core",
    "src/query/pipeline/sinks",
    "src/query/pipeline/sources",
    "src/query/pipeline/transforms",
    "src/query/script",
    "src/query/settings",
    "src/query/sql",
    "src/query/storages/common/blocks",
    "src/query/storages/common/cache",
    "src/query/storages/common/index",
    "src/query/storages/common/io",
    "src/query/storages/common/pruner",
    "src/query/storages/common/stage",
    "src/query/storages/common/session",
    "src/query/storages/common/table_meta",
    "src/query/storages/delta",
    "src/query/storages/factory",
    "src/query/storages/fuse",
    "src/query/storages/hive/hive",
    "src/query/storages/iceberg",
    "src/query/storages/information_schema",
    "src/query/storages/memory",
    "src/query/storages/null",
    "src/query/storages/orc",
    "src/query/storages/random",
    "src/query/storages/stage",
    "src/query/storages/stream",
    "src/query/storages/system",
    "src/query/storages/view",
    "src/query/storages/parquet",
    "src/query/storages/result_cache",
    "src/query/users",
    "src/query/ee_features/attach_table",
    "src/query/ee_features/vacuum_handler",
    "src/query/ee_features/background_service",
    "src/query/ee_features/aggregating_index",
    "src/query/ee_features/data_mask",
    "src/query/ee_features/storage_encryption",
    "src/query/ee_features/stream_handler",
    "src/query/ee_features/storage_quota",
    "src/query/ee_features/inverted_index",
    "src/query/ee_features/virtual_column",
    "src/query/service",
    "src/query/ee",
    "src/meta/api",
    "src/meta/app",
    "src/meta/binaries",
    "src/meta/client",
    "src/meta/embedded",
    "src/meta/kvapi",
    "src/meta/process",
    "src/meta/raft-store",
    "src/meta/sled-store",
    "src/meta/stoerr",
    "src/meta/store",
    "src/meta/types",
    "src/meta/ee",
    "src/meta/proto-conv",
    "src/meta/protos",
    "src/meta/service",
    "tests/sqllogictests",
    "src/tests/sqlsmith",
]

# Workspace dependencies
[workspace.dependencies]
databend-common-arrow = { path = "src/common/arrow" }
databend-common-ast = { path = "src/query/ast" }
databend-common-async-functions = { path = "src/query/async_functions" }
databend-common-auth = { path = "src/common/auth" }
databend-common-base = { path = "src/common/base" }
databend-common-binaries = { path = "src/binaries" }
databend-common-building = { path = "src/common/building" }
databend-common-cache = { path = "src/common/cache" }
databend-common-catalog = { path = "src/query/catalog" }
databend-common-cloud-control = { path = "src/common/cloud_control" }
databend-common-codegen = { path = "src/query/codegen" }
databend-common-compress = { path = "src/common/compress" }
databend-common-config = { path = "src/query/config" }
databend-common-datavalues = { path = "src/query/datavalues" }
databend-common-exception = { path = "src/common/exception" }
databend-common-expression = { path = "src/query/expression" }
databend-common-formats = { path = "src/query/formats" }
databend-common-functions = { path = "src/query/functions" }
databend-common-grpc = { path = "src/common/grpc" }
databend-common-hashtable = { path = "src/common/hashtable" }
databend-common-http = { path = "src/common/http" }
databend-common-io = { path = "src/common/io" }
databend-common-license = { path = "src/common/license" }
databend-common-management = { path = "src/query/management" }
databend-common-meta-api = { path = "src/meta/api" }
databend-common-meta-app = { path = "src/meta/app" }
databend-common-meta-client = { path = "src/meta/client" }
databend-common-meta-embedded = { path = "src/meta/embedded" }
databend-common-meta-kvapi = { path = "src/meta/kvapi" }
databend-common-meta-process = { path = "src/meta/process" }
databend-common-meta-raft-store = { path = "src/meta/raft-store" }
databend-common-meta-sled-store = { path = "src/meta/sled-store" }
databend-common-meta-stoerr = { path = "src/meta/stoerr" }
databend-common-meta-store = { path = "src/meta/store" }
databend-common-meta-types = { path = "src/meta/types" }
databend-common-metrics = { path = "src/common/metrics" }
databend-common-openai = { path = "src/common/openai" }
databend-common-parquet2 = { path = "src/common/parquet2" }
databend-common-pipeline-core = { path = "src/query/pipeline/core" }
databend-common-pipeline-sinks = { path = "src/query/pipeline/sinks" }
databend-common-pipeline-sources = { path = "src/query/pipeline/sources" }
databend-common-pipeline-transforms = { path = "src/query/pipeline/transforms" }
databend-common-proto-conv = { path = "src/meta/proto-conv" }
databend-common-protos = { path = "src/meta/protos" }
databend-common-script = { path = "src/query/script" }
databend-common-settings = { path = "src/query/settings" }
databend-common-sql = { path = "src/query/sql" }
databend-common-sqlsmith = { path = "src/tests/sqlsmith" }
databend-common-storage = { path = "src/common/storage" }
databend-common-storages-delta = { path = "src/query/storages/delta" }
databend-common-storages-factory = { path = "src/query/storages/factory" }
databend-common-storages-fuse = { path = "src/query/storages/fuse" }
databend-common-storages-hive = { path = "src/query/storages/hive/hive" }
databend-common-storages-iceberg = { path = "src/query/storages/iceberg" }
databend-common-storages-information-schema = { path = "src/query/storages/information_schema" }
databend-common-storages-memory = { path = "src/query/storages/memory" }
databend-common-storages-null = { path = "src/query/storages/null" }
databend-common-storages-orc = { path = "src/query/storages/orc" }
databend-common-storages-parquet = { path = "src/query/storages/parquet" }
databend-common-storages-random = { path = "src/query/storages/random" }
databend-common-storages-result-cache = { path = "src/query/storages/result_cache" }
databend-common-storages-stage = { path = "src/query/storages/stage" }
databend-common-storages-stream = { path = "src/query/storages/stream" }
databend-common-storages-system = { path = "src/query/storages/system" }
databend-common-storages-view = { path = "src/query/storages/view" }
databend-common-tracing = { path = "src/common/tracing" }
databend-common-users = { path = "src/query/users" }
databend-common-vector = { path = "src/common/vector" }
databend-enterprise-aggregating-index = { path = "src/query/ee_features/aggregating_index" }
databend-enterprise-attach-table = { path = "src/query/ee_features/attach_table" }
databend-enterprise-background-service = { path = "src/query/ee_features/background_service" }
databend-enterprise-data-mask-feature = { path = "src/query/ee_features/data_mask" }
databend-enterprise-fail-safe = { path = "src/query/ee_features/fail_safe" }
databend-enterprise-inverted-index = { path = "src/query/ee_features/inverted_index" }
databend-enterprise-meta = { path = "src/meta/ee" }
databend-enterprise-query = { path = "src/query/ee" }
databend-enterprise-storage-encryption = { path = "src/query/ee_features/storage_encryption" }
databend-enterprise-storage-quota = { path = "src/query/ee_features/storage_quota" }
databend-enterprise-stream-handler = { path = "src/query/ee_features/stream_handler" }
databend-enterprise-vacuum-handler = { path = "src/query/ee_features/vacuum_handler" }
databend-enterprise-virtual-column = { path = "src/query/ee_features/virtual_column" }
databend-meta = { path = "src/meta/service" }
databend-query = { path = "src/query/service" }
databend-sqllogictests = { path = "tests/sqllogictests" }
databend-storages-common-blocks = { path = "src/query/storages/common/blocks" }
databend-storages-common-cache = { path = "src/query/storages/common/cache" }
databend-storages-common-index = { path = "src/query/storages/common/index" }
databend-storages-common-io = { path = "src/query/storages/common/io" }
databend-storages-common-pruner = { path = "src/query/storages/common/pruner" }
databend-storages-common-session = { path = "src/query/storages/common/session" }
databend-storages-common-stage = { path = "src/query/storages/common/stage" }
databend-storages-common-table-meta = { path = "src/query/storages/common/table_meta" }

# Crates.io dependencies
anyerror = { version = "=0.1.10" }
anyhow = { version = "1.0.65" }
arrow = { version = "53" }
arrow-array = { version = "53" }
arrow-buffer = { version = "53" }
arrow-cast = { version = "53", features = ["prettyprint"] }
arrow-data = { version = "53" }
arrow-flight = { version = "53", features = ["flight-sql-experimental", "tls"] }
arrow-format = { version = "0.8.1", features = ["flight-data", "flight-service", "ipc"] }
arrow-ipc = { version = "53" }
arrow-ord = { version = "53" }
arrow-schema = { version = "53", features = ["serde"] }
arrow-select = { version = "53" }
arrow-udf-js = "0.5.0"
arrow-udf-python = "0.4.0"
arrow-udf-wasm = "0.4.0"
async-backtrace = "0.2"
async-trait = { version = "0.1.77" }
backtrace = "0.3.73"
base64 = "0.22"
bincode = { version = "2.0.0-rc.3", features = ["serde", "std", "alloc"] }
borsh = { version = "1.2.1", features = ["derive"] }
bumpalo = "3.12.0"
byteorder = "1.4.3"
bytes = "1.5.0"
bytesize = "1.1.0"
chrono = { version = "0.4.31", features = ["serde"] }
chrono-tz = { version = "0.8", features = ["serde"] }
clap = { version = "4.4.2", features = ["derive"] }
comfy-table = "7"
criterion = "0.5"
ctor = "0.2"
ctrlc = { version = "3.2.3", features = ["termination"] }
dashmap = "6.1.0"
deepsize = { version = "0.2.0" }
deltalake = "0.21"
derive-visitor = { version = "0.4.0", features = ["std-types-drive"] }
derive_more = { version = "1.0.0", features = ["full"] }
enquote = "1.1.0"
enumflags2 = { version = "0.7.7", features = ["serde"] }
ethnum = { version = "1.5.0" }
feature-set = { version = "0.1.1" }
flatbuffers = "24" # Must use the same version with arrow-ipc
futures = "0.3.24"
futures-async-stream = { version = "0.2.7" }
futures-util = "0.3.24"
geo = { version = "0.28.0", features = ["use-serde"] }
geos = { version = "9.0.0", features = ["static", "geo", "geo-types"] }
geozero = { version = "0.14.0", features = ["default", "with-wkb", "with-geos", "with-geojson"] }
hashbrown = { version = "0.15.0", default-features = false }
hickory-resolver = "0.24"
http = "1"
hyper = "1"
hyper-util = { version = "0.1.9", features = ["client", "client-legacy", "tokio", "service"] }
iceberg = { version = "0.3.0", git = "https://github.com/apache/iceberg-rust/", rev = "2f3554b" }
iceberg-catalog-hms = { version = "0.3.0", git = "https://github.com/apache/iceberg-rust/", rev = "2f3554b" }
iceberg-catalog-rest = { version = "0.3.0", git = "https://github.com/apache/iceberg-rust/", rev = "2f3554b" }
itertools = "0.13.0"
jsonb = "0.4.3"
jwt-simple = { version = "0.12.10", default-features = false, features = ["pure-rust"] }
lenient_semver = "0.4.2"
libc = { version = "0.2.158" }
match-template = "0.0.1"
micromarshal = "0.7.0"
mysql_async = { version = "0.34", default-features = false, features = ["native-tls-tls"] }
num-traits = "0.2.19"
num_cpus = "1.13.1"
object_store_opendal = "0.48.1"
once_cell = "1.15.0"
openai_api_rust = "0.1"
opendal = { version = "0.50.1", features = [
    "layers-fastrace",
    "layers-prometheus-client",
    "layers-async-backtrace",
    "services-s3",
    "services-fs",
    "services-gcs",
    "services-cos",
    "services-obs",
    "services-oss",
    "services-azblob",
    "services-azdls",
    "services-ipfs",
    "services-http",
    "services-moka",
    "services-webhdfs",
    "services-huggingface",
    "services-redis",
] }
openraft = { git = "https://github.com/drmingdrmer/openraft", tag = "v0.10.0-alpha.6", features = [
    "serde",
    "tracing-log",
    "loosen-follower-log-revert", # allows removing all data from a follower and restoring from the leader.
] }
orc-rust = "0.5.0"
ordered-float = { version = "4.1.0", default-features = false }
ordq = "0.2.0"
parking_lot = "0.12.1"
parquet = { version = "53", features = ["async"] }
paste = "1.0.15"
pin-project-lite = "0.2.9"
poem = { version = "3.0", features = ["openssl-tls", "multipart", "compression"] }
pprof = { version = "0.13.0", features = [
    "flamegraph",
    "protobuf-codec",
    "protobuf",
] }
procfs = { version = "0.17.0" }
proj4rs = { version = "0.1.4", features = ["geo-types", "crs-definitions"] }
prost = { version = "0.13" }
prost-build = { version = "0.13" }
rand = { version = "0.8.5", features = ["small_rng"] }
regex = "1.8.1"
replace_with = "0.1.7"
reqwest = { version = "0.12", default-features = false, features = [
    "json",
    "http2",
    "native-tls-vendored",
    "native-tls-alpn",
] }
reqwest-hickory-resolver = "0.1"
rotbl = { git = "https://github.com/drmingdrmer/rotbl", tag = "v0.1.2-alpha.6", features = [] }
rustix = "0.38.37"
semver = "1.0.14"
serde = { version = "1.0.164", features = ["derive", "rc"] }
serde_json = { version = "1.0.85", default-features = false, features = ["preserve_order", "unbounded_depth"] }
serde_stacker = { version = "0.1" }
serde_test = "1.0"
serde_with = { version = "3.8.1" }
serfig = "0.1.0"
sha2 = "0.10.8"
sled = { version = "0.34", default-features = false }
state = "0.6.0"
stream-more = "0.1.3"
tantivy = "0.22.0"
tantivy-common = "0.7.0"
tantivy-jieba = "0.11.0"
thiserror = { version = "1" }
tikv-jemalloc-ctl = { version = "0.6.0", features = ["use_std", "stats"] }
tikv-jemalloc-sys = "0.6.0"
tokio = { version = "1.35.0", features = ["full"] }
tokio-stream = "0.1.11"
tonic = { version = "0.12.3", features = ["transport", "codegen", "prost", "tls-roots", "tls"] }
tonic-build = { version = "0.12.3" }
tonic-reflection = { version = "0.12.3" }
tower = "0.5.1"
tower-service = "0.3.3"
typetag = "0.2.3"
unicode-segmentation = "1.10.1"
uuid = { version = "1.10.0", features = ["serde", "v4", "v7"] }
walkdir = "2.3.2"
xorfilter-rs = "0.5"
# FIXME: failed to upgrade to educe 0.6
educe = "0.4"
# FIXME: failed to upgrade to enum-as-inner 0.6
aho-corasick = { version = "1.0.1" }
async-channel = "1.7.1"
async-recursion = "1.1.1"
async-stream = "0.3.3"
backon = "1"
blake3 = "1.3.1"
bstr = "1"
buf-list = "1.0.3"
byte-unit = "4.0.19"
crc32fast = "1.3.2"
cron = "0.12.0"
dtparse = { git = "https://github.com/datafuse-extras/dtparse.git", rev = "de0a15b" }
enum-as-inner = "0.5"
geo-types = "0.7.13"
geohash = "0.13.0"
goldenfile = "1.4"
h3o = "0.4.0"
hex = "0.4.3"
jaq-core = "1.5.1"
jaq-interpret = "1.5.0"
jaq-parse = "1.0.3"
jaq-std = "1.6.0"
lexical-core = "1"
libm = "0.2.6"
maplit = "1.0.2"
md-5 = "0.10.5"
memchr = { version = "2", default-features = false }
naive-cityhash = "0.2.0"
num = "0.4.0"
num-bigint = "0.4.6"
num-derive = "0.3.3"
pretty_assertions = "1.3.0"
recursive = "0.1.1"
rmp-serde = "1.1.1"
roaring = { version = "0.10.1", features = ["serde"] }
rust_decimal = "1.26"
scroll = "0.12.0"
sha1 = "0.10.5"
simdutf8 = "0.1.4"
simple_hll = { version = "0.0.1", features = ["serde_borsh"] }
siphasher = "0.3"
strength_reduce = "0.2.4"
stringslice = "0.2.0"
tempfile = "3.4.0"
terminal_size = "0.2.6"
thrift = "0.17.0"
twox-hash = "1.6.3"
wkt = "0.10.3"
# FIXME: use backon to replace this.
backoff = "0.4"
# FIXME: bump to 0.14 or remove.
config = "0.13.4"
headers = "0.4.0"
highway = "1.1"
humantime = "2.1.0"
indicatif = "0.17.5"
lz4 = "1.24.0"
opensrv-mysql = { version = "0.7.0", features = ["tls"] }
petgraph = { version = "0.6.2", features = ["serde-1"] }
# FIXME: we should bump to 0.23
rustls = "0.22"
rustls-pemfile = "2"
rustls-pki-types = "1"
rustyline = "14"
serde_urlencoded = "0.7.1"
socket2 = "0.5.3"
sqlx = { version = "0.8", features = ["mysql", "runtime-tokio"] }
sysinfo = "0.30"
# FIXME: better to replace by chrono
cidr = { version = "0.2.2" }
p256 = "0.13"
passwords = { version = "3.1.16", features = ["common-password"] }
temp-env = "0.3.0"
time = "0.3.14"
toml = { version = "0.8", default-features = false }
url = "2.3.1"
wiremock = "0.6"
xorf = { version = "0.11.0", default-features = false, features = ["binary-fuse"] }

# Observability
env_logger = "0.11"
fastrace = { version = "0.7.4", features = ["enable"] }
fastrace-opentelemetry = "0.7.4"
log = { version = "0.4.21", features = ["serde", "kv_unstable_std"] }
logcall = "0.1.9"
opentelemetry = { version = "0.26.0", features = ["trace", "logs"] }
opentelemetry-otlp = { version = "0.26.0", features = [
    "trace",
    "logs",
    "grpc-tonic",
    "http-proto",
    "reqwest-client",
] }
opentelemetry_sdk = { version = "0.26.0", features = ["trace", "logs", "rt-tokio"] }
prometheus-client = "0.22"
prometheus-parse = "0.2.3"
tracing = "0.1.40"
tracing-appender = "0.2.3"
tracing-subscriber = { version = "0.3.17", features = ["env-filter", "json", "valuable"] }

# Databend Integration Test
databend-client = { version = "0.22" }
databend-driver = { version = "0.22" }
databend-driver-core = { version = "0.22" }
msql-srv = "0.11.0"
mysql_common = "0.32.4"
sqllogictest = "0.21.0"
sqlparser = "0.50.0"

[workspace.lints.rust]
async_fn_in_trait = "allow"

[workspace.lints.clippy]
useless_format = "allow"
mutable_key_type = "allow"
result_large_err = "allow"

## DONT'T DELETE THIS: If we want best performance, we should use this profile but it will take longer time to compile.
## Test SQL:
## select sum(number) from numbers_mt(10000000000);   ~ 3x performance
## select max(number) from numbers_mt(10000000000);   ~ 3x performance
# [profile.release]
# debug = 1
# lto = "thin"
# overflow-checks = false
# incremental = false
# codegen-units = 1

[profile.release]
debug = 1
lto = "thin"
overflow-checks = false
opt-level = "s"         ## defaults to be 3
incremental = false

# [profile.release.package]
# databend-common-arrow = { codegen-units = 16 }
# databend-query = { codegen-units = 4 }
# databend-binaries = { codegen-units = 4 }

[profile.bench]
debug = true
overflow-checks = false

[profile.dev]
split-debuginfo = "unpacked"
overflow-checks = false
# wait until https://github.com/rust-lang/rust/issues/100142 fixed
incremental = false

[profile.dev.package]
addr2line = { opt-level = 3 }
adler = { opt-level = 3 }
gimli = { opt-level = 3 }
miniz_oxide = { opt-level = 3 }
object = { opt-level = 3 }
rustc-demangle = { opt-level = 3 }

[profile.test]
opt-level = 0
debug = true
codegen-units = 16
lto = false
debug-assertions = true
overflow-checks = true
rpath = false

[patch.crates-io]
arrow-format = { git = "https://github.com/Xuanwo/arrow-format", rev = "5502823a" }
async-backtrace = { git = "https://github.com/datafuse-extras/async-backtrace.git", rev = "dea4553" }
async-recursion = { git = "https://github.com/datafuse-extras/async-recursion.git", rev = "a353334" }
backtrace = { git = "https://github.com/rust-lang/backtrace-rs.git", rev = "72265be", features = [
    "std",
    "serialize-serde",
] }
color-eyre = { git = "https://github.com/eyre-rs/eyre.git", rev = "e5d92c3" }
deltalake = { git = "https://github.com/delta-io/delta-rs", rev = "3038c145" }
ethnum = { git = "https://github.com/datafuse-extras/ethnum-rs", rev = "4cb05f1" }
jsonb = { git = "https://github.com/databendlabs/jsonb", rev = "ada713c" }
openai_api_rust = { git = "https://github.com/datafuse-extras/openai-api", rev = "819a0ed" }
orc-rust = { git = "https://github.com/datafusion-contrib/orc-rust", rev = "dfb1ede" }
recursive = { git = "https://github.com/datafuse-extras/recursive.git", rev = "6af35a1" }
sled = { git = "https://github.com/datafuse-extras/sled", tag = "v0.34.7-datafuse.1" }
tantivy = { git = "https://github.com/datafuse-extras/tantivy", rev = "7502370" }
tantivy-common = { git = "https://github.com/datafuse-extras/tantivy", rev = "7502370", package = "tantivy-common" }
tantivy-jieba = { git = "https://github.com/datafuse-extras/tantivy-jieba", rev = "0e300e9" }
xorfilter-rs = { git = "https://github.com/datafuse-extras/xorfilter", tag = "databend-alpha.4" }
