filter push down: push (number+1) to filter
RedistributeStage[expr: 0]\n  Projection: (number + 1) as a:UInt64\n  Expression: (number + 1):UInt64 (Before Projection)\n    Filter: (a > 2)\n      ReadDataSource: scan partitions: [16], scan schema: [number:UInt64], statistics: [read_rows: 10000, read_bytes: 80000]
limit push down: push (limit 10) to projection
group by push down: push alias to group by
RedistributeStage[expr: 0]\n  Projection: max((number + 1)) as c1:UInt64, ((number % 3) + 1) as c2:UInt16\n  AggregatorFinal: groupBy=[[((number % 3) + 1)]], aggr=[[max((number + 1))]]\n    RedistributeStage[expr: sipHash(_group_by_key)]\n      AggregatorPartial: groupBy=[[((number % 3) + 1)]], aggr=[[max((number + 1))]]\n        Expression: ((number % 3) + 1):UInt16, (number + 1):UInt64 (Before GroupBy)\n          ReadDataSource: scan partitions: [16], scan schema: [number:UInt64], statistics: [read_rows: 10000, read_bytes: 80000]
projection push down: push (name and value) to read datasource
Projection: name:Utf8\n  Filter: (value > 10)\n    ReadDataSource: scan partitions: [1], scan schema: [name:Utf8, value:Utf8], statistics: [read_rows: 0, read_bytes: 0]
