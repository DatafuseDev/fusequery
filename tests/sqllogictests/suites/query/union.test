statement ok
use default

statement ok
DROP TABLE IF EXISTS data2013

statement ok
DROP TABLE IF EXISTS data2014

statement ok
DROP TABLE IF EXISTS data2015

statement ok
DROP TABLE IF EXISTS data2016

statement ok
CREATE TABLE data2013 (name String, value UInt32)

statement ok
CREATE TABLE data2014 (name String, value UInt32)

statement ok
CREATE TABLE data2015 (data_name String, data_value UInt32)

statement ok
CREATE TABLE data2016 (name String, value UInt32)

statement ok
INSERT INTO data2013(name,value) VALUES('Alice', 1000), ('Bob', 2000), ('Carol', 5000)


statement ok
INSERT INTO data2014(name,value) VALUES('Alice', 2000), ('Bob', 2000), ('Dennis', 35000)

statement ok
INSERT INTO data2015(data_name, data_value) VALUES('Foo', 42), ('Bar', 1)

query I
SELECT val FROM
(SELECT value AS val FROM data2013 WHERE name = 'Alice'
UNION ALL
SELECT value AS val FROM data2014 WHERE name = 'Alice')
ORDER BY val ASC
----
1000
2000

query IT
SELECT val, name FROM
(SELECT value AS val, value AS val_1, name FROM data2013 WHERE name = 'Alice'
UNION ALL
SELECT value AS val, value, name FROM data2014 WHERE name = 'Alice')
ORDER BY val ASC
----
1000 Alice
2000 Alice

query TI
select * from data2013 union all select * from data2015 order by value
----
Bar 1
Foo 42
Alice 1000
Bob 2000
Carol 5000

query I
select value from data2016 union all select data_value from data2015 order by value
----
1
42

query I
select data_value from data2015 union all select value from data2016 order by data_value
----
1
42

statement ok
INSERT INTO data2013(name,value) VALUES('Alice', 1000)

query I
select value from data2013 union select data_value from data2015 order by value
----
1
42
1000
2000
5000

statement ok
DROP TABLE data2013

statement ok
DROP TABLE data2014

statement ok
DROP TABLE data2015

statement ok
DROP TABLE data2016

query TTTTI
SELECT 'Кирилл' as a, 'Müller' as b, '我是谁' as c, 'ASCII' as d, 2 as id UNION SELECT NULL as a, NULL as b, NULL as c, NULL as d, 1 as id order by id
----
NULL NULL NULL NULL 1
Кирилл Müller 我是谁 ASCII 2

query TT?I
SELECT 'Кирилл' as a, 'Müller' as b, 1.0 as c, 2 as id UNION SELECT NULL as a, NULL as b, 1 as c,  1 as id order by id
----
NULL NULL 1.0 1
Кирилл Müller 1.0 2

query TI
WITH tbl AS
  (SELECT '12-17' AS age,
          'a' AS device_id
   UNION ALL SELECT '17-23' AS age,
                    'a' AS device_id
   UNION ALL SELECT '17-23' AS age,
                    'b' AS device_id
   UNION ALL SELECT '24-30' AS age,
                    'c' AS device_id
   UNION ALL SELECT '24-30' AS age,
                    'd' AS device_id)
SELECT age,
       count(DISTINCT device_id) AS cnt
FROM
  (SELECT age,
          device_id
   FROM tbl
   UNION ALL SELECT if(age IN ('12-17', '17-23'), '年轻', '非年轻') AS age,
                    device_id
   FROM tbl) AS t
GROUP BY age
ORDER BY age,
         cnt
----
12-17  1
17-23  2
24-30  2
年轻  2
非年轻  2

statement ok
drop table if exists t0

statement ok
drop table if exists t1

statement ok
CREATE TABLE t0(c0VARCHAR VARCHAR NOT NULL DEFAULT('EHFUF'))

statement ok
CREATE TABLE t1(c0BOOLEAN BOOL NOT NULL)

statement ok
INSERT INTO t0(c0varchar) VALUES (''), ('R6a')

statement ok
INSERT INTO t1(c0boolean) VALUES (true), (false)

query IT rowsort
SELECT t1.c0boolean, t0.c0varchar FROM t0 NATURAL LEFT JOIN t1 UNION SELECT t1.c0boolean, t0.c0varchar FROM t0 NATURAL LEFT JOIN t1 where t1.c0boolean
----
0 (empty)
0 R6a
1 (empty)
1 R6a

statement ok
drop table t0

statement ok
drop table t1

statement error 1065
select [1,2,3] union all select 2

# type coercion
query R rowsort
select 1 as c union all select 3.3::Double;
----
1.0
3.3

query I
with
t1 as (select number as a from numbers(10)),
t2 as (select number as a from numbers(1000)),
t3 as (select number as a from numbers(10))
select sum(a) from (
select t1.a from t1, t2 where t1.a = t2.a
union all
select t1.a from t1, t3 where t1.a = t3.a
) t
----
90

query I
with
t1 as (select number as a from numbers(10)),
t2 as (select number as a from numbers(1000)),
t3 as (select number as a from numbers(10))
select sum(a) from (
select t1.a from t1, t2 where t1.a = t2.a
union all
select t1.a from t1
) t
----
90

query I
with
t1 as (select number as a from numbers(10)),
t2 as (select number as a from numbers(1000)),
t3 as (select number as a from numbers(10))
select sum(a) from (
select t1.a from t1, t2 where t1.a = t2.a
union all
select sum(t1.a) from t1, t3 where t1.a = t3.a
) t
----
90

query I
with
t1 as (select number as a from numbers(10)),
t2 as (select number as a from numbers(1000)),
t3 as (select number as a from numbers(10))
select sum(a) from (
select sum(t1.a) as a from t1, t3 where t1.a = t3.a
union all
select t1.a from t1, t2 where t1.a = t2.a
) t
----
90

statement ok
CREATE OR REPLACE TABLE `test3` (
  `user_id` BIGINT NOT NULL,
  `parent` BIGINT NOT NULL
);


query II
SELECT * FROM (SELECT 3,
          user_id AS r_uid,
          user_id AS w_uid
   FROM test3) t
UNION ALL
SELECT 3 AS id,
       10086 AS r_uid,
       1111 AS w_uid;
----
3 10086 1111

statement ok
drop table test3;

statement ok
CREATE OR REPLACE TABLE `test4` (
  `user_id` BIGINT NOT NULL,
  `parent` BIGINT NULL
);

query II
SELECT * FROM (SELECT
          user_id AS root_uid
   FROM test4 where parent is not null limit 2) t
UNION ALL
SELECT
       10086 AS root_uid
       limit 200;
----
10086


statement ok
SELECT * FROM (
  SELECT COUNT(1), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(1), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(3), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(4), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(5), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(6), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(7), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(8), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(9), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(10), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(11), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(12), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(13), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(14), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(15), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(16), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(17), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(18), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(19), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(20), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(21), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(22), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(23), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(24), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(25), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(26), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(27), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(28), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(29), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(30), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(31), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(32), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(33), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(34), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(35), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(36), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(37), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(38), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(39), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(40), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(41), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(42), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(43), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(44), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(45), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(46), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(47), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(48), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(49), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(50), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(51), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(52), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(53), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(54), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(55), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(56), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(57), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(58), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(59), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(60), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(61), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(62), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(63), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(64), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(65), 'numbers(10)' FROM numbers(10)
  UNION ALL SELECT COUNT(66), 'numbers(10)' FROM numbers(10)
) tlimit LIMIT 1000;

statement ok
drop table test4;
