statement ok
drop table if exists a;

statement ok
drop table if exists b;

statement ok
create table a (a_id int, a_val int);

statement ok
create table b (b_id int, b_val int, a_id int);

statement ok
insert into a (a_id, a_val) values (1, 10), (1, 100), (2, 20), (3, 30), (4, 40), (5, 50);

statement ok
insert into b (b_id, b_val, a_id) values (1, 100, 1), (2, 200, 1), (3, 300, 2), (4, 400, 2), (5, 500, 2), (6, 600, 3), (7, 700, 3), (8, 800, 3), (9, 900, 4), (10, 1000, 4), (11, 1100, 4), (12, 1200, 4), (13, 1300, 5), (14, 1400, 5), (15, 1500, 5), (16, 1600, 5), (17, 1700, 1), (18, 1800, 2), (19, 1900, 3), (20, 2000, 4);

# eager group by
query T
select b.a_id, sum(b.b_val), count(b.b_val), avg(b.b_val), min(b.b_val), max(b.b_val) from a join b on a.a_id = b.a_id group by b.a_id order by b.a_id;
----
1 4000 6 666.6666666666666 100 1700
2 3000 4 750.0 300 1800
3 4000 4 1000.0 600 1900
4 6200 5 1240.0 900 2000
5 5800 4 1450.0 1300 1600

# eager count and double eager
query T
select a.a_id, b.a_id, sum(b.b_val), count(b.b_val), avg(b.b_val), min(b.b_val), max(b.b_val) from a join b on a.a_id = b.a_id group by a.a_id, b.a_id order by b.a_id;
----
1 1 4000 6 666.6666666666666 100 1700
2 2 3000 4 750.0 300 1800
3 3 4000 4 1000.0 600 1900
4 4 6200 5 1240.0 900 2000
5 5 5800 4 1450.0 1300 1600

# eager groupby-count and eager split
query T
select a.a_id, b.a_id, sum(a.a_val), count(a.a_val), avg(a.a_val), min(a.a_val), max(a.a_val), sum(b.b_val), count(b.b_val), avg(b.b_val), min(b.b_val), max(b.b_val) from a join b on a.a_id = b.a_id group by a.a_id, b.a_id order by b.a_id;
----
1 1 330 6 55.0 10 100 4000 6 666.6666666666666 100 1700
2 2 80 4 20.0 20 20 3000 4 750.0 300 1800
3 3 120 4 30.0 30 30 4000 4 1000.0 600 1900
4 4 200 5 40.0 40 40 6200 5 1240.0 900 2000
5 5 200 4 50.0 50 50 5800 4 1450.0 1300 1600

# double eager with extra eval scalar
query T
select a.a_id, b.a_id, sum(2 * b.b_val + b.b_id / (b.a_id + 10)), count(b.b_val * b.b_id), avg(b.b_val * b.b_id), min(b.b_val - b.a_id), max(b.b_id + b.a_id * b.b_val) from a join b on a.a_id = b.a_id group by a.a_id, b.a_id order by b.a_id;
----
1 1 8003.636363636364 6 9800.0 99 1717
2 2 6002.5 4 9350.0 298 3618
3 3 8003.076923076924 4 12750.0 597 5719
4 4 12404.428571428572 5 16920.0 896 8020
5 5 11603.866666666665 4 21150.0 1295 8016

# eager split with extra eval scalar
query T
select a.a_id, b.a_id, sum(11.22 * (1 - a.a_val / a.a_id)), count(a.a_val + a.a_id), avg(a.a_val * a.a_id - a.a_id / a.a_val), min(a.a_val + a.a_id), max(a.a_val - 2 * a.a_id), sum(b.b_val * b.b_id + b.a_id * 2), count(b.b_val), avg(b.b_val / b.b_id * 2), min(b.b_val * b.a_id), max(b.b_val / 3) from a join b on a.a_id = b.a_id group by a.a_id, b.a_id order by b.a_id;
----
1 1 -3635.280086517334 6 54.945 11 98 58812 6 200.0 100 566.6666666666666
2 2 -403.9200096130371 4 39.9 22 16 37416 4 200.0 600 600.0
3 3 -403.9200096130371 4 89.9 33 24 51024 4 200.0 1800 633.3333333333334
4 4 -504.9000120162964 5 159.9 44 32 84640 5 200.0 3600 666.6666666666666
5 5 -403.9200096130371 4 249.9 55 40 84640 4 200.0 6500 533.3333333333334
