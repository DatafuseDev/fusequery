query T
select 'Hello, world!'
----
Hello, world!

statement ok
drop database if exists db

statement ok
create database db

statement ok
create table db.t(a int)

statement ok
insert into db.t values(1),(2)

onlyif http
query I
select db.t.a from db.t
----
1
2

onlyif http
query I
select t1.a from db.t as t1
----
1
2

onlyif http
statement error 1065
select db.t1.a from db.t as t1

statement ok
drop database if exists db

statement ok
create table t(a int);

statement ok
insert into t values(1);

query I
select catalog,database,name,number_of_blocks,number_of_segments from system.tables where name = 't';
----
default default t 1 1

statement error 1065
select * from (values(1, 'one'), (2, 'two', 3))

statement error 1065
select * from (values(1, 'one'), (2, ['two','three']))

statement error 1065
select * from (values(1, 'one'), (2, 'two')) t(a,b,c)

query IT
select * from (values(1, 'one'), (2, 'two'), (3, 'three')) as t(a, b)
----
1 one
2 two
3 three

query IT
select col0, col1 from (values(1, 'one'), (null, 'two'), (3, null))
----
1 one
NULL two
3 NULL

query IT
select 1 from (values('a'),('b'),('c'))
----
1
1
1

query IT
select col0, col1 from (values(1, 'one'), (null, 'two'), (3 + 2, null))
----
1 one
NULL two
5 NULL

query IT
values (1, 'one'), (2, 'two'), (3, 'three')
----
1 one
2 two
3 three

query IT
values (1, 'one'), (2, 'two'), (3, 'three') order by col0 desc limit 2
----
3 three
2 two

statement error 1005
select * from numbers(2) limit 0,1,dummy;

statement error 1005
select * from numbers(2) limit 0,1 offset 2;

query I
select * from numbers(2) offset 0;
----
0
1

statement ok
create table dc_user_in_log(center String, id String, uid int, tid String, create_time String);

statement ok
insert into dc_user_in_log values('wx49', '0', 0, '0', '2019-01-01 00:00:00');

# Inlist exprs are tuple, will be converted to `contain` function
# fix: https://github.com/datafuselabs/databend/pull/12647#issue-1875143894
query TTITT
select `center`,`id`,`uid`,`tid`,`create_time` from dc_user_in_log where (center,uid) in (('wx49',0),('wx49',1),('wx49',2),('wx49',3),('wx49',4),('wx49',5),('wx49',6),('wx49',7),('wx49',8),('wx49',9),('wx49',10),('wx49',11),('wx49',12),('wx49',13),('wx49',14),('wx49',15),('wx49',16),('wx49',17),('wx49',18),('wx49',19),('wx49',20),('wx49',21),('wx49',22),('wx49',23),('wx49',24),('wx49',25),('wx49',26),('wx49',27),('wx49',28),('wx49',29),('wx49',30),('wx49',31),('wx49',32),('wx49',33),('wx49',34),('wx49',35),('wx49',36),('wx49',37),('wx49',38),('wx49',39),('wx49',40),('wx49',41),('wx49',42),('wx49',43),('wx49',44),('wx49',45),('wx49',46),('wx49',47),('wx49',48),('wx49',49),('wx49',50),('wx49',51),('wx49',52),('wx49',53),('wx49',54),('wx49',55),('wx49',56),('wx49',57),('wx49',58),('wx49',59),('wx49',60),('wx49',61),('wx49',62),('wx49',63),('wx49',64),('wx49',65),('wx49',66),('wx49',67),('wx49',68),('wx49',69),('wx49',70),('wx49',71),('wx49',72),('wx49',73),('wx49',74),('wx49',75),('wx49',76),('wx49',77),('wx49',78),('wx49',79),('wx49',80),('wx49',81),('wx49',82),('wx49',83),('wx49',84),('wx49',85),('wx49',86),('wx49',87),('wx49',88),('wx49',89),('wx49',90),('wx49',91),('wx49',92),('wx49',93),('wx49',94),('wx49',95),('wx49',96),('wx49',97),('wx49',98),('wx49',99),('wx49',100),('wx49',101),('wx49',102),('wx49',103),('wx49',104),('wx49',105),('wx49',106),('wx49',107),('wx49',108),('wx49',109),('wx49',110),('wx49',111),('wx49',112),('wx49',113),('wx49',114),('wx49',115),('wx49',116),('wx49',117),('wx49',118),('wx49',119),('wx49',120),('wx49',121),('wx49',122),('wx49',123),('wx49',124),('wx49',125),('wx49',126),('wx49',127),('wx49',128),('wx49',129),('wx49',130),('wx49',131),('wx49',132),('wx49',133),('wx49',134),('wx49',135),('wx49',136),('wx49',137),('wx49',138),('wx49',139),('wx49',140),('wx49',141),('wx49',142),('wx49',143),('wx49',144),('wx49',145),('wx49',146),('wx49',147),('wx49',148),('wx49',149),('wx49',150),('wx49',151),('wx49',152),('wx49',153),('wx49',154),('wx49',155),('wx49',156),('wx49',157),('wx49',158),('wx49',159),('wx49',160),('wx49',161),('wx49',162),('wx49',163),('wx49',164),('wx49',165),('wx49',166),('wx49',167),('wx49',168),('wx49',169),('wx49',170),('wx49',171),('wx49',172),('wx49',173),('wx49',174),('wx49',175),('wx49',176),('wx49',177),('wx49',178),('wx49',179),('wx49',180),('wx49',181),('wx49',182),('wx49',183),('wx49',184),('wx49',185),('wx49',186),('wx49',187),('wx49',188),('wx49',189),('wx49',190),('wx49',191),('wx49',192),('wx49',193),('wx49',194),('wx49',195),('wx49',196),('wx49',197),('wx49',198),('wx49',199),('wx49',200),('wx49',201),('wx49',202),('wx49',203),('wx49',204),('wx49',205),('wx49',206),('wx49',207),('wx49',208),('wx49',209),('wx49',210),('wx49',211),('wx49',212),('wx49',213),('wx49',214),('wx49',215),('wx49',216),('wx49',217),('wx49',218),('wx49',219),('wx49',220),('wx49',221),('wx49',222),('wx49',223),('wx49',224),('wx49',225),('wx49',226),('wx49',227),('wx49',228),('wx49',229),('wx49',230),('wx49',231),('wx49',232),('wx49',233),('wx49',234),('wx49',235),('wx49',236),('wx49',237),('wx49',238),('wx49',239),('wx49',240),('wx49',241),('wx49',242),('wx49',243),('wx49',244),('wx49',245),('wx49',246),('wx49',247),('wx49',248),('wx49',249),('wx49',250),('wx49',251),('wx49',252),('wx49',253),('wx49',254),('wx49',255),('wx49',256),('wx49',257),('wx49',258),('wx49',259),('wx49',260),('wx49',261),('wx49',262),('wx49',263),('wx49',264),('wx49',265),('wx49',266),('wx49',267),('wx49',268),('wx49',269),('wx49',270),('wx49',271),('wx49',272),('wx49',273),('wx49',274),('wx49',275),('wx49',276),('wx49',277),('wx49',278),('wx49',279),('wx49',280),('wx49',281),('wx49',282),('wx49',283),('wx49',284),('wx49',285),('wx49',286),('wx49',287),('wx49',288),('wx49',289),('wx49',290),('wx49',291),('wx49',292),('wx49',293),('wx49',294),('wx49',295),('wx49',296),('wx49',297),('wx49',298),('wx49',299),('wx49',300),('wx49',301),('wx49',302),('wx49',303),('wx49',304),('wx49',305),('wx49',306),('wx49',307),('wx49',308),('wx49',309),('wx49',310),('wx49',311),('wx49',312),('wx49',313),('wx49',314),('wx49',315),('wx49',316),('wx49',317),('wx49',318),('wx49',319),('wx49',320),('wx49',321),('wx49',322),('wx49',323),('wx49',324),('wx49',325),('wx49',326),('wx49',327),('wx49',328),('wx49',329),('wx49',330),('wx49',331),('wx49',332),('wx49',333),('wx49',334),('wx49',335),('wx49',336),('wx49',337),('wx49',338),('wx49',339),('wx49',340),('wx49',341),('wx49',342),('wx49',343),('wx49',344),('wx49',345),('wx49',346),('wx49',347),('wx49',348),('wx49',349),('wx49',350),('wx49',351),('wx49',352),('wx49',353),('wx49',354),('wx49',355),('wx49',356),('wx49',357),('wx49',358),('wx49',359),('wx49',360),('wx49',361),('wx49',362),('wx49',363),('wx49',364),('wx49',365),('wx49',366),('wx49',367),('wx49',368),('wx49',369),('wx49',370),('wx49',371),('wx49',372),('wx49',373),('wx49',374),('wx49',375),('wx49',376),('wx49',377),('wx49',378),('wx49',379),('wx49',380),('wx49',381),('wx49',382),('wx49',383),('wx49',384),('wx49',385),('wx49',386),('wx49',387),('wx49',388),('wx49',389),('wx49',390),('wx49',391),('wx49',392),('wx49',393),('wx49',394),('wx49',395),('wx49',396),('wx49',397),('wx49',398),('wx49',399),('wx49',400),('wx49',401),('wx49',402),('wx49',403),('wx49',404),('wx49',405),('wx49',406),('wx49',407),('wx49',408),('wx49',409),('wx49',410),('wx49',411),('wx49',412),('wx49',413),('wx49',414),('wx49',415),('wx49',416),('wx49',417),('wx49',418),('wx49',419),('wx49',420),('wx49',421),('wx49',422),('wx49',423),('wx49',424),('wx49',425),('wx49',426),('wx49',427));
----
wx49 0 0 0 2019-01-01 00:00:00

statement ok
drop table dc_user_in_log;

# fix: https://github.com/datafuselabs/databend/issues/12795
statement ok
drop table if exists tt1;

statement ok
drop table if exists tt2;

statement ok
create table tt1 (a int, b string);

statement ok
insert into tt1 values (1, 'abc'), (2, 'def');

statement ok
create table tt2 (a int, b string);

statement ok
insert into tt2 values (1, 'abc'), (2, 'def');

query T
SELECT * FROM tt1 RIGHT ANTI JOIN tt2 ON is_not_null(char_length(tt1.b));
----

statement ok
drop table if exists t1;

statement ok
create table t1(a int, b int);

statement ok
insert into t1 values(1, 2), (2, 3), (3, 4);

statement ok
set inlist_to_subquery = 1;

query II
select * from t1 where a not in (1, 2, 4, 4, 5);
----
3 4

query T
select * from t1 where a in (1, 2, 4, 4, 5) order by a;
----
1 2
2 3

statement ok
set inlist_to_subquery = 0;

statement ok
drop table t1;
