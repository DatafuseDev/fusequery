statement ok
set enable_experimental_merge_into = 1;

statement ok
drop table if exists t1;

statement ok
drop table if exists t2;

statement ok
create table t1(a int,b string, c string);

statement ok
create table t2(a int,b string, c string);

statement ok
insert into t1 values(1,'b1','c1'),(2,'b2','c2');

statement ok
insert into t1 values(2,'b3','c3'),(3,'b4','c4');

query TTT
select * from t1 order by a,b,c;
----
1 b1 c1
2 b2 c2
2 b3 c3
3 b4 c4

statement ok
insert into t2 values(1,'b_5','c_5'),(3,'b_6','c_6');

statement ok
insert into t2 values(2,'b_7','c_7');

query TTT
select * from t2 order by a,b,c;
----
1 b_5 c_5
2 b_7 c_7
3 b_6 c_6

# section I: basic test for match and unmatch

statement error 1006
merge into t1 using (select * from t2 as t2) on t1.a = t2.a  when matched then update set t1.c = t2.c,t1.c = t2.c;

statement ok
merge into t1 using (select * from t2 as t2) on t1.a = t2.a  when matched then update set t1.c = t2.c;

query TTT
select * from t1 order by a,b,c;
----
1 b1 c_5
2 b2 c_7
2 b3 c_7
3 b4 c_6

statement ok
insert into t2 values(4,'b_8','c_8');

query TTT
select * from t2 order by a,b,c;
----
1 b_5 c_5
2 b_7 c_7
3 b_6 c_6
4 b_8 c_8

statement ok
merge into t1 using (select * from t2 as t2) on t1.a = t2.a  when matched then update set t1.c = t2.c  when not matched then insert (a,b,c) values(t2.a,t2.b,t2.c);

query TTT
select * from t1 order by a,b,c;
----
1 b1 c_5
2 b2 c_7
2 b3 c_7
3 b4 c_6
4 b_8 c_8

statement ok
insert into t2 values(1,'b_9','c_9');

statement error 4001
merge into t1 using (select * from t2 as t2) on t1.a = t2.a  when matched then update set t1.c = t2.c  when not matched then insert (a,b,c) values(t2.a,t2.b,t2.c);

query TTT
select * from t1 order by a,b,c;
----
1 b1 c_5
2 b2 c_7
2 b3 c_7
3 b4 c_6
4 b_8 c_8

statement ok
delete from t2 where a = 1;

query TTT
select * from t2 order by a,b,c;
----
2 b_7 c_7
3 b_6 c_6
4 b_8 c_8

statement ok
insert into t2 values(5,'b_9','c_9');

query TTT
select * from t2 order by a,b,c;
----
2 b_7 c_7
3 b_6 c_6
4 b_8 c_8
5 b_9 c_9

statement ok
merge into t1 using (select * from t2 as t2) on t1.a = t2.a  when matched then delete;

query ITT
select * from t1 order by a,b,c;
----
1 b1 c_5

# section 2 multi clauses
statement ok
insert into t1 values(2,'b_1','c_1'),(3,'b_2','c_2');

query TTT
select * from t1 order by a,b,c;
----
1 b1 c_5
2 b_1 c_1
3 b_2 c_2

statement error 1065
merge into t1 using (select * from t2 as t2) on t1.a = t2.a  when matched then delete when matched then update set t1.c = t2.c when not matched and t2.c = 'c_8' then insert (a,b,c) values(t2.a,t2.b,t2.c);

statement ok
merge into t1 using (select * from t2 as t2) on t1.a = t2.a  when matched and t1.b = 'b_1' then delete when matched then update set t1.c = t2.c when not matched and t2.c = 'c_8' then insert (a,b,c) values(t2.a,t2.b,t2.c);

query TTT
select * from t1 order by a,b,c;
----
1 b1 c_5
3 b_2 c_6
4 b_8 c_8

statement ok
merge into t1 using (select * from t2 as t2) on t1.a = t2.a  when matched then delete when not matched and t2.c = 'c_9' then insert (a,b,c) values(t2.a,t2.b,t2.c);

query TTT
select * from t1 order by a,b,c;
----
1 b1 c_5
5 b_9 c_9

statement ok
merge into t1 using (select * from t2 as t2) on t1.a = t2.a when not matched and t2.c = 'c_8' then insert (a,b) values(t2.a,t2.b) when not matched and t2.c = 'c_7' then insert (a,c) values(t2.a,t2.c);

query TTT
select * from t1 order by a,b,c;
----
1 b1 c_5
2 NULL c_7
4 b_8 NULL
5 b_9 c_9

statement ok
insert into t2 values(5,'b_10','c_10');

query TTT
select * from t2 order by a,b,c;
----
2 b_7 c_7
3 b_6 c_6
4 b_8 c_8
5 b_10 c_10
5 b_9 c_9

statement error 4001
merge into t1 using (select * from t2 as t2) on t1.a = t2.a when matched and t2.c = 'c_9' then update set t1.b = 'b_11' when matched and t2.c = 'c_10' then delete;

## idempotent delete test
statement ok
merge into t1 using (select * from t2 as t2) on t1.a = t2.a when matched then delete;

query TTT
select * from t1 order by a,b,c;
----
1 b1 c_5

## test star for merge into
statement ok
truncate table t1;

statement ok
truncate table t2;

query I
select count(*) from t1;
----
0

query I
select count(*) from t2;
----
0

statement ok
insert into t1 values(1,'b1','c1'),(2,'b2','c2');

query TTT
select * from t1 order by a,b,c;
----
1 b1 c1
2 b2 c2

statement ok
insert into t2 values(1,'b3','c3'),(3,'b4','c4');

query TTT
select * from t2 order by a,b,c;
----
1 b3 c3
3 b4 c4

## test insert columns mismatch
statement error 1065
merge into t1 using (select * from t2 as t2) on t1.a = t2.a when not matched then insert values(t2.a,t2.c);

statement ok
merge into t1 using (select * from t2 as t2) on t1.a = t2.a  when matched then update *  when not matched then insert *;

query TTT
select * from t1 order by a,b,c;
----
1 b3 c3
2 b2 c2
3 b4 c4

## test multi same name for star
statement error 1065
merge into t1 using (select a,b,c,a from t2 as t2) on t1.a = t2.a  when matched then update *;

statement error 1065
merge into t1 using (select a,b,c,a,b from t2 as t2) on t1.a = t2.a  when not matched then insert *;

## stage file test
statement ok
drop table if exists test_stage;

statement ok
drop table if exists target_table;

statement ok
create table target_table(a int,b string,c string);

statement ok
insert into target_table values(1,'a_1','b_1'),(2,'a_2','b_2');

query TTT
select * from target_table order by a,b,c;
----
1 a_1 b_1
2 a_2 b_2

statement ok
create table test_stage(a int,b string,c string);

statement ok
insert into test_stage values(1,'a1','b1'),(2,'a2','b2'),(3,'a3','b3');

query TTT
select * from test_stage order by a,b,c;
----
1 a1 b1
2 a2 b2
3 a3 b3

statement ok
drop stage if exists s5_merge_into;

statement ok
drop stage if exists s4_merge_into;

statement ok
create stage s5_merge_into FILE_FORMAT = (TYPE = CSV);

statement ok
remove @s5_merge_into;

statement ok
copy into @s5_merge_into from (select a,b,c from test_stage order by a,b,c);

query TTT
select $1,$2,$3 from @s5_merge_into order by $1,$2,$3;
----
1 a1 b1
2 a2 b2
3 a3 b3

## test CSV
statement ok
merge into target_table using (select $1,$2,$3 from @s5_merge_into) as cdc on cast(cdc.$1 as int) = target_table.a when matched then delete when not matched then insert values(cdc.$1,cdc.$2,cdc.$3);

query TTT
select * from target_table order by a,b,c;
----
3 a3 b3

## test parquet
statement ok
truncate table target_table;

query I
select count(*) from target_table;
----
0

statement ok
create stage s4_merge_into FILE_FORMAT = (TYPE = PARQUET);

statement ok
remove @s4_merge_into;

statement ok
copy into @s4_merge_into from (select a,b,c from test_stage order by a,b,c);

query TTT
select $1,$2,$3 from @s4_merge_into order by $1,$2,$3;
----
1 a1 b1
2 a2 b2
3 a3 b3

statement ok
insert into target_table values(1,'a_1','b_1'),(2,'a_2','b_2');

query TTT
select * from target_table order by a,b,c;
----
1 a_1 b_1
2 a_2 b_2

statement ok
merge into target_table using (select $1,$2,$3 from @s4_merge_into) as cdc on cdc.$1 = target_table.a when matched then delete when not matched then insert values(cdc.$1,cdc.$2,cdc.$3);

query TTT
select * from target_table order by a,b,c;
----
3 a3 b3

## NULL test, for join, if join_expr result is
## NULL, it will be treated as not macthed.
statement ok
truncate table t1;

statement ok
truncate table t2;

query I
select count(*) from t1;
----
0

query I
select count(*) from t2;
----
0

statement ok
insert into t1 values(NULL,'b_1','c_1');

query TTT
select * from t1 order by a,b,c;
----
NULL b_1 c_1

statement ok
insert into t2 values(1,'b_4','c_4'),(2,'b_2','c_2'),(NULL,'b_3','c_3');

query TTT
select * from t2 order by a,b,c;
----
1 b_4 c_4
2 b_2 c_2
NULL b_3 c_3

statement ok
merge into t1 using (select * from t2) on t1.a = t2.a when matched then delete when not matched then insert *;

query TTT
select * from t1 order by a,b,c;
----
1 b_4 c_4
2 b_2 c_2
NULL b_1 c_1
NULL b_3 c_3

statement ok
merge into t1 using (select * from t2) on t1.a = t2.a when matched then delete;

query TTT
select * from t1 order by a,b,c;
----
NULL b_1 c_1
NULL b_3 c_3

statement ok
truncate table t1;

statement ok
truncate table t2;

query I
select count(*) from t1;
----
0

query I
select count(*) from t2;
----
0

## test target table alias
statement ok
insert into t2 values(1,'a1','b1');

statement ok
merge into t1 as t3 using (select * from t2 as t2) on t3.a = t2.a  when not matched  then insert (a,b,c) values(t2.a,t2.b,t2.c);

query TTT
select * from t1 order by a,b,c;
----
1 a1 b1

statement ok
CREATE TABLE employees (employee_id INT, employee_name VARCHAR(255),department VARCHAR(255));

statement ok
CREATE TABLE salaries (employee_id INT,salary DECIMAL(10, 2));

statement ok
INSERT INTO employees VALUES(1, 'Alice', 'HR'),(2, 'Bob', 'IT'),(3, 'Charlie', 'Finance'),(4, 'David', 'HR');

statement ok
INSERT INTO salaries VALUES(1, 50000.00),(2, 60000.00);

statement ok
MERGE INTO salaries USING (SELECT * FROM employees) ON salaries.employee_id = employees.employee_id WHEN MATCHED AND employees.department = 'HR' THEN UPDATE SET salaries.salary = salaries.salary + 1000.00 WHEN MATCHED THEN UPDATE SET salaries.salary = salaries.salary + 500.00 WHEN NOT MATCHED THEN INSERT (employee_id, salary) VALUES (employees.employee_id, 55000.00);

query TTT
select * from salaries order by employee_id;
----
1 51000.00
2 60500.00
3 55000.00
4 55000.00

## null cast bug fix
statement ok
create table t1(a int not null);

statement ok
create table t2(a int not null);

statement ok
insert into t1 values(1);

statement ok
insert into t2 values(1),(2);

statement ok
merge into t1 using (select * from t2) on t1.a = t2.a when matched then update * when not matched then insert *;

query T
select * from t1 order by a;
----
1
2

statement ok
set enable_experimental_merge_into = 0;
