statement ok
DROP DATABASE IF EXISTS db_09_0020

statement ok
CREATE DATABASE db_09_0020

statement ok
USE db_09_0020

statement ok
create table t(a uint64)

statement ok
insert into t values (5), (6), (7)

query ??
select * from fuse_statistic('db_09_0020', 't')
----
0 3


statement ok
analyze table `t`

query T
select * from fuse_statistic('db_09_0020', 't')
----
0 3

statement ok
insert into t values (5), (6), (7)


query II
select segment_count,block_count from fuse_snapshot('db_09_0020', 't') limit 1
----
2 2

query T
select * from fuse_statistic('db_09_0020', 't')
----
0 3

statement ok
analyze table `t`

query T
select * from fuse_statistic('db_09_0020', 't')
----
0 3

statement ok
optimize table t compact

query II
select segment_count,block_count from fuse_snapshot('db_09_0020', 't') limit 1
----
1 1

query T
select * from fuse_statistic('db_09_0020', 't')
----
0 3

statement ok
analyze table `t`

query T
select * from fuse_statistic('db_09_0020', 't')
----
0 3

statement ok
delete from t where a=5

query T
select * from fuse_statistic('db_09_0020', 't')
----
0 3

statement ok
analyze table `t`

query T
select * from fuse_statistic('db_09_0020', 't')
----
0 2

statement ok
DROP TABLE t

## test error rate of ndv should be less than
statement ok
create table a (a int, b string, d float64)

statement ok
insert into a select number, number, number  from numbers(10000)

statement ok
insert into a select number, number, number  from numbers(10000)

statement ok
insert into a select number, number, number  from numbers(10000)


## times 6 because we want to have stable tests, this is adopted from redis's unit test version as well

query T
select *, (ndv - 10000) / 10000 < 0.01625 * 6 from fuse_statistic('db_09_0020', 'a')
----
0 10038 1
1 10080 1
2 10144 1

statement ok
delete from a where a % 4 = 0;


statement ok
analyze table a

query T
select *, (ndv - 7500) / 7500 < 0.01625 * 6  from fuse_statistic('db_09_0020', 'a')
----
0 7637 1
1 7730 1
2 7530 1

statement ok
DROP DATABASE db_09_0020
