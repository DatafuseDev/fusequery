statement ok
drop database if exists join_property

statement ok
create database join_property

statement ok
use join_property

statement ok
set max_threads = 1

statement ok
create table t_10(a int) as select * from numbers(10)

statement ok
create table t_100(a int) as select * from numbers(100)

statement ok
create table t_1000(a int) as select * from numbers(1000)

query T
explain memo
select * from t_10, t_100, t_1000 where t_10.a = t_1000.a and t_100.a = t_1000.a
----
Memo
├── root group: #5
├── estimated memory: 7888 bytes
├── Group #0
│   ├── Best properties
│   │   ├── { dist: Any }: expr: #0, cost: 0.000, children: []
│   │   ├── { dist: Hash(t_10.a (#0)::Int32 NULL) }: expr: #1, cost: 0.000, children: [{ dist: Any }]
│   │   └── { dist: Serial }: expr: #2, cost: 0.000, children: [{ dist: Any }]
│   ├── #0 Scan []
│   ├── #1 Exchange: (Hash(t_10.a (#0)::Int32 NULL)) [#0]
│   └── #2 Exchange: (Merge) [#0]
├── Group #1
│   ├── Best properties
│   │   ├── { dist: Any }: expr: #0, cost: 0.000, children: []
│   │   ├── { dist: Hash(t_100.a (#1)::Int32 NULL) }: expr: #1, cost: 0.000, children: [{ dist: Any }]
│   │   └── { dist: Serial }: expr: #2, cost: 0.000, children: [{ dist: Any }]
│   ├── #0 Scan []
│   ├── #1 Exchange: (Hash(t_100.a (#1)::Int32 NULL)) [#1]
│   └── #2 Exchange: (Merge) [#1]
├── Group #2
│   ├── Best properties
│   │   ├── { dist: Any }: expr: #0, cost: 0.000, children: []
│   │   ├── { dist: Broadcast }: expr: #1, cost: 0.000, children: [{ dist: Any }]
│   │   ├── { dist: Hash(t_1000.a (#2)::Int32 NULL) }: expr: #1, cost: 0.000, children: [{ dist: Any }]
│   │   └── { dist: Serial }: expr: #3, cost: 0.000, children: [{ dist: Any }]
│   ├── #0 Scan []
│   ├── #1 Exchange: (Broadcast) [#2]
│   ├── #2 Exchange: (Hash(t_1000.a (#2)::Int32 NULL)) [#2]
│   └── #3 Exchange: (Merge) [#2]
├── Group #3
│   ├── Best properties
│   │   ├── { dist: Any }: expr: #0, cost: 0.000, children: [{ dist: Hash(t_100.a (#1)::Int32 NULL) }, { dist: Hash(t_1000.a (#2)::Int32 NULL) }]
│   │   ├── { dist: Broadcast }: expr: #1, cost: 0.000, children: [{ dist: Any }]
│   │   ├── { dist: Hash(t_100.a (#1)::Int32 NULL) }: expr: #0, cost: 0.000, children: [{ dist: Hash(t_100.a (#1)::Int32 NULL) }, { dist: Hash(t_1000.a (#2)::Int32 NULL) }]
│   │   ├── { dist: Hash(t_1000.a (#2)::Int32 NULL) }: expr: #1, cost: 0.000, children: [{ dist: Any }]
│   │   └── { dist: Serial }: expr: #0, cost: 0.000, children: [{ dist: Serial }, { dist: Serial }]
│   ├── #0 Join [#1, #2]
│   ├── #1 Exchange: (Broadcast) [#3]
│   ├── #2 Exchange: (Merge) [#3]
│   ├── #3 Exchange: (Hash(t_1000.a (#2)::Int32 NULL)) [#3]
│   └── #4 Exchange: (Hash(t_100.a (#1)::Int32 NULL)) [#3]
├── Group #4
│   ├── Best properties
│   │   └── { dist: Any }: expr: #0, cost: 0.000, children: [{ dist: Serial }, { dist: Serial }]
│   └── #0 Join [#0, #3]
└── Group #5
    ├── Best properties
    │   └── { dist: Serial }: expr: #0, cost: 0.000, children: [{ dist: Any }]
    └── #0 EvalScalar [#4]

query T
explain memo
select * from t_1000 left join t_10 on t_1000.a = t_10.a left join t_100 on t_1000.a = t_100.a
----
Memo
├── root group: #5
├── estimated memory: 7888 bytes
├── Group #0
│   ├── Best properties
│   │   ├── { dist: Any }: expr: #0, cost: 0.000, children: []
│   │   ├── { dist: Hash(t_1000.a (#0)::Int32 NULL) }: expr: #1, cost: 0.000, children: [{ dist: Any }]
│   │   └── { dist: Serial }: expr: #2, cost: 0.000, children: [{ dist: Any }]
│   ├── #0 Scan []
│   ├── #1 Exchange: (Hash(t_1000.a (#0)::Int32 NULL)) [#0]
│   └── #2 Exchange: (Merge) [#0]
├── Group #1
│   ├── Best properties
│   │   ├── { dist: Any }: expr: #0, cost: 0.000, children: []
│   │   ├── { dist: Broadcast }: expr: #1, cost: 0.000, children: [{ dist: Any }]
│   │   ├── { dist: Hash(t_10.a (#1)::Int32 NULL) }: expr: #1, cost: 0.000, children: [{ dist: Any }]
│   │   └── { dist: Serial }: expr: #3, cost: 0.000, children: [{ dist: Any }]
│   ├── #0 Scan []
│   ├── #1 Exchange: (Broadcast) [#1]
│   ├── #2 Exchange: (Hash(t_10.a (#1)::Int32 NULL)) [#1]
│   └── #3 Exchange: (Merge) [#1]
├── Group #2
│   ├── Best properties
│   │   ├── { dist: Any }: expr: #0, cost: 0.000, children: [{ dist: Hash(t_1000.a (#0)::Int32 NULL) }, { dist: Hash(t_10.a (#1)::Int32 NULL) }]
│   │   ├── { dist: Hash(t_1000.a (#0)::Int32 NULL) }: expr: #1, cost: 0.000, children: [{ dist: Any }]
│   │   └── { dist: Serial }: expr: #0, cost: 0.000, children: [{ dist: Serial }, { dist: Serial }]
│   ├── #0 Join [#0, #1]
│   ├── #1 Exchange: (Hash(t_1000.a (#0)::Int32 NULL)) [#2]
│   └── #2 Exchange: (Merge) [#2]
├── Group #3
│   ├── Best properties
│   │   ├── { dist: Any }: expr: #0, cost: 0.000, children: []
│   │   ├── { dist: Broadcast }: expr: #1, cost: 0.000, children: [{ dist: Any }]
│   │   ├── { dist: Hash(t_100.a (#2)::Int32 NULL) }: expr: #1, cost: 0.000, children: [{ dist: Any }]
│   │   └── { dist: Serial }: expr: #2, cost: 0.000, children: [{ dist: Any }]
│   ├── #0 Scan []
│   ├── #1 Exchange: (Broadcast) [#3]
│   ├── #2 Exchange: (Merge) [#3]
│   └── #3 Exchange: (Hash(t_100.a (#2)::Int32 NULL)) [#3]
├── Group #4
│   ├── Best properties
│   │   └── { dist: Any }: expr: #0, cost: 0.000, children: [{ dist: Any }, { dist: Broadcast }]
│   └── #0 Join [#2, #3]
└── Group #5
    ├── Best properties
    │   ├── { dist: Any }: expr: #0, cost: 0.000, children: [{ dist: Any }]
    │   └── { dist: Serial }: expr: #1, cost: 0.000, children: [{ dist: Any }]
    ├── #0 EvalScalar [#4]
    └── #1 Exchange: (Merge) [#5]

query T
explain memo
select * from t_1000 right join t_10 on t_1000.a = t_10.a right join t_100 on t_1000.a = t_100.a
----
Memo
├── root group: #5
├── estimated memory: 6496 bytes
├── Group #0
│   ├── Best properties
│   │   ├── { dist: Any }: expr: #0, cost: 0.000, children: []
│   │   ├── { dist: Hash(t_1000.a (#0)::Int32 NULL) }: expr: #1, cost: 0.000, children: [{ dist: Any }]
│   │   └── { dist: Serial }: expr: #2, cost: 0.000, children: [{ dist: Any }]
│   ├── #0 Scan []
│   ├── #1 Exchange: (Hash(t_1000.a (#0)::Int32 NULL)) [#0]
│   └── #2 Exchange: (Merge) [#0]
├── Group #1
│   ├── Best properties
│   │   ├── { dist: Any }: expr: #0, cost: 0.000, children: []
│   │   ├── { dist: Hash(t_10.a (#1)::Int32 NULL) }: expr: #1, cost: 0.000, children: [{ dist: Any }]
│   │   └── { dist: Serial }: expr: #2, cost: 0.000, children: [{ dist: Any }]
│   ├── #0 Scan []
│   ├── #1 Exchange: (Hash(t_10.a (#1)::Int32 NULL)) [#1]
│   └── #2 Exchange: (Merge) [#1]
├── Group #2
│   ├── Best properties
│   │   ├── { dist: Any }: expr: #0, cost: 0.000, children: [{ dist: Hash(t_1000.a (#0)::Int32 NULL) }, { dist: Hash(t_10.a (#1)::Int32 NULL) }]
│   │   ├── { dist: Hash(t_1000.a (#0)::Int32 NULL) }: expr: #1, cost: 0.000, children: [{ dist: Any }]
│   │   └── { dist: Serial }: expr: #0, cost: 0.000, children: [{ dist: Serial }, { dist: Serial }]
│   ├── #0 Join [#0, #1]
│   ├── #1 Exchange: (Hash(t_1000.a (#0)::Int32 NULL)) [#2]
│   └── #2 Exchange: (Merge) [#2]
├── Group #3
│   ├── Best properties
│   │   ├── { dist: Any }: expr: #0, cost: 0.000, children: []
│   │   ├── { dist: Hash(t_100.a (#2)::Int32 NULL) }: expr: #2, cost: 0.000, children: [{ dist: Any }]
│   │   └── { dist: Serial }: expr: #1, cost: 0.000, children: [{ dist: Any }]
│   ├── #0 Scan []
│   ├── #1 Exchange: (Merge) [#3]
│   └── #2 Exchange: (Hash(t_100.a (#2)::Int32 NULL)) [#3]
├── Group #4
│   ├── Best properties
│   │   └── { dist: Any }: expr: #0, cost: 0.000, children: [{ dist: Serial }, { dist: Serial }]
│   └── #0 Join [#2, #3]
└── Group #5
    ├── Best properties
    │   └── { dist: Serial }: expr: #0, cost: 0.000, children: [{ dist: Any }]
    └── #0 EvalScalar [#4]

query T
explain memo
select * from t_1000 full join t_10 on t_1000.a = t_10.a full join t_100 on t_1000.a = t_100.a
----
Memo
├── root group: #5
├── estimated memory: 6496 bytes
├── Group #0
│   ├── Best properties
│   │   ├── { dist: Any }: expr: #0, cost: 0.000, children: []
│   │   ├── { dist: Hash(t_1000.a (#0)::Int32 NULL) }: expr: #1, cost: 0.000, children: [{ dist: Any }]
│   │   └── { dist: Serial }: expr: #2, cost: 0.000, children: [{ dist: Any }]
│   ├── #0 Scan []
│   ├── #1 Exchange: (Hash(t_1000.a (#0)::Int32 NULL)) [#0]
│   └── #2 Exchange: (Merge) [#0]
├── Group #1
│   ├── Best properties
│   │   ├── { dist: Any }: expr: #0, cost: 0.000, children: []
│   │   ├── { dist: Hash(t_10.a (#1)::Int32 NULL) }: expr: #1, cost: 0.000, children: [{ dist: Any }]
│   │   └── { dist: Serial }: expr: #2, cost: 0.000, children: [{ dist: Any }]
│   ├── #0 Scan []
│   ├── #1 Exchange: (Hash(t_10.a (#1)::Int32 NULL)) [#1]
│   └── #2 Exchange: (Merge) [#1]
├── Group #2
│   ├── Best properties
│   │   ├── { dist: Any }: expr: #0, cost: 0.000, children: [{ dist: Hash(t_1000.a (#0)::Int32 NULL) }, { dist: Hash(t_10.a (#1)::Int32 NULL) }]
│   │   ├── { dist: Hash(t_1000.a (#0)::Int32 NULL) }: expr: #1, cost: 0.000, children: [{ dist: Any }]
│   │   └── { dist: Serial }: expr: #0, cost: 0.000, children: [{ dist: Serial }, { dist: Serial }]
│   ├── #0 Join [#0, #1]
│   ├── #1 Exchange: (Hash(t_1000.a (#0)::Int32 NULL)) [#2]
│   └── #2 Exchange: (Merge) [#2]
├── Group #3
│   ├── Best properties
│   │   ├── { dist: Any }: expr: #0, cost: 0.000, children: []
│   │   ├── { dist: Hash(t_100.a (#2)::Int32 NULL) }: expr: #2, cost: 0.000, children: [{ dist: Any }]
│   │   └── { dist: Serial }: expr: #1, cost: 0.000, children: [{ dist: Any }]
│   ├── #0 Scan []
│   ├── #1 Exchange: (Merge) [#3]
│   └── #2 Exchange: (Hash(t_100.a (#2)::Int32 NULL)) [#3]
├── Group #4
│   ├── Best properties
│   │   └── { dist: Any }: expr: #0, cost: 0.000, children: [{ dist: Serial }, { dist: Serial }]
│   └── #0 Join [#2, #3]
└── Group #5
    ├── Best properties
    │   └── { dist: Serial }: expr: #0, cost: 0.000, children: [{ dist: Any }]
    └── #0 EvalScalar [#4]

query T
explain memo
select * from t_10, t_100, t_1000
----
Memo
├── root group: #5
├── estimated memory: 6032 bytes
├── Group #0
│   ├── Best properties
│   │   ├── { dist: Any }: expr: #0, cost: 0.000, children: []
│   │   └── { dist: Serial }: expr: #1, cost: 0.000, children: [{ dist: Any }]
│   ├── #0 Scan []
│   └── #1 Exchange: (Merge) [#0]
├── Group #1
│   ├── Best properties
│   │   ├── { dist: Any }: expr: #0, cost: 0.000, children: []
│   │   ├── { dist: Broadcast }: expr: #1, cost: 0.000, children: [{ dist: Any }]
│   │   └── { dist: Serial }: expr: #2, cost: 0.000, children: [{ dist: Any }]
│   ├── #0 Scan []
│   ├── #1 Exchange: (Broadcast) [#1]
│   └── #2 Exchange: (Merge) [#1]
├── Group #2
│   ├── Best properties
│   │   ├── { dist: Any }: expr: #0, cost: 0.000, children: [{ dist: Any }, { dist: Broadcast }]
│   │   └── { dist: Serial }: expr: #0, cost: 0.000, children: [{ dist: Serial }, { dist: Serial }]
│   ├── #0 Join [#0, #1]
│   └── #1 Exchange: (Merge) [#2]
├── Group #3
│   ├── Best properties
│   │   ├── { dist: Any }: expr: #0, cost: 0.000, children: []
│   │   ├── { dist: Broadcast }: expr: #1, cost: 0.000, children: [{ dist: Any }]
│   │   └── { dist: Serial }: expr: #2, cost: 0.000, children: [{ dist: Any }]
│   ├── #0 Scan []
│   ├── #1 Exchange: (Broadcast) [#3]
│   └── #2 Exchange: (Merge) [#3]
├── Group #4
│   ├── Best properties
│   │   └── { dist: Any }: expr: #0, cost: 0.000, children: [{ dist: Any }, { dist: Broadcast }]
│   └── #0 Join [#2, #3]
└── Group #5
    ├── Best properties
    │   ├── { dist: Any }: expr: #0, cost: 0.000, children: [{ dist: Any }]
    │   └── { dist: Serial }: expr: #1, cost: 0.000, children: [{ dist: Any }]
    ├── #0 EvalScalar [#4]
    └── #1 Exchange: (Merge) [#5]

statement ok
drop database join_property
