query T
explain select number from numbers(10) group by number;
----
AggregateFinal
├── group by: [number]
├── aggregate functions: []
├── estimated rows: 10.00
└── AggregatePartial
    ├── group by: [number]
    ├── aggregate functions: []
    ├── estimated rows: 10.00
    └── TableScan
        ├── table: default.system.numbers
        ├── read rows: 10
        ├── read bytes: 80
        ├── partitions total: 1
        ├── partitions scanned: 1
        ├── push downs: [filters: [], limit: NONE]
        └── estimated rows: 10.00


query T
explain select number from numbers(10) group by 1;
----
AggregateFinal
├── group by: [number]
├── aggregate functions: []
├── estimated rows: 10.00
└── AggregatePartial
    ├── group by: [number]
    ├── aggregate functions: []
    ├── estimated rows: 10.00
    └── TableScan
        ├── table: default.system.numbers
        ├── read rows: 10
        ├── read bytes: 80
        ├── partitions total: 1
        ├── partitions scanned: 1
        ├── push downs: [filters: [], limit: NONE]
        └── estimated rows: 10.00


query T
explain select 1 from numbers(10) group by 1;
----
EvalScalar
├── expressions: [1]
├── estimated rows: 10.00
└── TableScan
    ├── table: default.system.numbers
    ├── read rows: 10
    ├── read bytes: 80
    ├── partitions total: 1
    ├── partitions scanned: 1
    ├── push downs: [filters: [], limit: NONE]
    └── estimated rows: 10.00



query T
explain select 1, number, number + 1, number -1 from numbers(10) group by number, abs(number), cast(number as int);
----
EvalScalar
├── expressions: [1, plus(group_item (#0), 1), minus(group_item (#0), 1)]
├── estimated rows: 10.00
└── AggregateFinal
    ├── group by: [number]
    ├── aggregate functions: []
    ├── estimated rows: 10.00
    └── AggregatePartial
        ├── group by: [number]
        ├── aggregate functions: []
        ├── estimated rows: 10.00
        └── TableScan
            ├── table: default.system.numbers
            ├── read rows: 10
            ├── read bytes: 80
            ├── partitions total: 1
            ├── partitions scanned: 1
            ├── push downs: [filters: [], limit: NONE]
            └── estimated rows: 10.00


query T
explain select count(3), type, name, trim(name) as a from system.columns group by name, type, a, concat(name, trim(name)), concat(type, name), length(name);
----
EvalScalar
├── expressions: [count(3) (#15), trim_both(group_item (#0), " ")]
├── estimated rows: 0.00
└── AggregateFinal
    ├── group by: [name, type]
    ├── aggregate functions: [count()]
    ├── estimated rows: 0.00
    └── AggregatePartial
        ├── group by: [name, type]
        ├── aggregate functions: [count()]
        ├── estimated rows: 0.00
        └── TableScan
            ├── table: default.system.columns
            ├── read rows: 0
            ├── read bytes: 0
            ├── partitions total: 0
            ├── partitions scanned: 0
            ├── push downs: [filters: [], limit: NONE]
            └── estimated rows: 0.00


statement ok
create table explain_agg_t1(a int, b int);

query T
explain select a from explain_agg_t1 group by a having 1 = 0;
----
AggregateFinal
├── group by: [a]
├── aggregate functions: []
├── estimated rows: 0.00
└── AggregatePartial
    ├── group by: [a]
    ├── aggregate functions: []
    ├── estimated rows: 0.00
    └── Filter
        ├── filters: [false]
        ├── estimated rows: 0.00
        └── TableScan
            ├── table: default.default.explain_agg_t1
            ├── read rows: 0
            ├── read bytes: 0
            ├── partitions total: 0
            ├── partitions scanned: 0
            ├── push downs: [filters: [false], limit: NONE]
            ├── output columns: [a]
            └── estimated rows: 0.00

query T
explain select a from explain_agg_t1 group by a having a > 3;
----
AggregateFinal
├── group by: [a]
├── aggregate functions: []
├── estimated rows: 0.00
└── AggregatePartial
    ├── group by: [a]
    ├── aggregate functions: []
    ├── estimated rows: 0.00
    └── Filter
        ├── filters: [group_item (#0) > 3]
        ├── estimated rows: 0.00
        └── TableScan
            ├── table: default.default.explain_agg_t1
            ├── read rows: 0
            ├── read bytes: 0
            ├── partitions total: 0
            ├── partitions scanned: 0
            ├── push downs: [filters: [group_item (#0) > 3], limit: NONE]
            ├── output columns: [a]
            └── estimated rows: 0.00

query T
explain select a, max(b) from explain_agg_t1 group by a having a > 1;
----
EvalScalar
├── expressions: [max(b) (#3)]
├── estimated rows: 0.00
└── AggregateFinal
    ├── group by: [a]
    ├── aggregate functions: [max(b)]
    ├── estimated rows: 0.00
    └── AggregatePartial
        ├── group by: [a]
        ├── aggregate functions: [max(b)]
        ├── estimated rows: 0.00
        └── Filter
            ├── filters: [group_item (#0) > 1]
            ├── estimated rows: 0.00
            └── TableScan
                ├── table: default.default.explain_agg_t1
                ├── read rows: 0
                ├── read bytes: 0
                ├── partitions total: 0
                ├── partitions scanned: 0
                ├── push downs: [filters: [group_item (#0) > 1], limit: NONE]
                └── estimated rows: 0.00

query T
explain select a, avg(b) from explain_agg_t1 group by a having a > 1 and max(b) > 10;
----
EvalScalar
├── expressions: [avg(b) (#3)]
├── estimated rows: 0.00
└── Filter
    ├── filters: [is_true(max(b) (#4) > 10)]
    ├── estimated rows: 0.00
    └── AggregateFinal
        ├── group by: [a]
        ├── aggregate functions: [avg(b), max(b)]
        ├── estimated rows: 0.00
        └── AggregatePartial
            ├── group by: [a]
            ├── aggregate functions: [avg(b), max(b)]
            ├── estimated rows: 0.00
            └── Filter
                ├── filters: [group_item (#0) > 1]
                ├── estimated rows: 0.00
                └── TableScan
                    ├── table: default.default.explain_agg_t1
                    ├── read rows: 0
                    ├── read bytes: 0
                    ├── partitions total: 0
                    ├── partitions scanned: 0
                    ├── push downs: [filters: [group_item (#0) > 1], limit: NONE]
                    └── estimated rows: 0.00

statement ok
drop table explain_agg_t1;

statement ok
create table a (id int, val int);

statement ok
create table b (id int, val int);

query T
explain select b.id from a, b where a.id = b.id group by b.id;
----
AggregateFinal
├── group by: [id]
├── aggregate functions: []
├── limit: 0
├── estimated rows: 0.00
└── HashJoin
    ├── join type: INNER
    ├── build keys: [b.id (#2)]
    ├── probe keys: [a.id (#0)]
    ├── filters: []
    ├── estimated rows: 0.00
    ├── AggregatePartial(Build)
    │   ├── group by: [id]
    │   ├── aggregate functions: []
    │   ├── estimated rows: 0.00
    │   └── TableScan
    │       ├── table: default.default.b
    │       ├── read rows: 0
    │       ├── read bytes: 0
    │       ├── partitions total: 0
    │       ├── partitions scanned: 0
    │       ├── push downs: [filters: [], limit: NONE]
    │       ├── output columns: [id]
    │       └── estimated rows: 0.00
    └── TableScan(Probe)
        ├── table: default.default.a
        ├── read rows: 0
        ├── read bytes: 0
        ├── partitions total: 0
        ├── partitions scanned: 0
        ├── push downs: [filters: [], limit: NONE]
        ├── output columns: [id]
        └── estimated rows: 0.00

statement ok
drop table a;

statement ok
drop table b;