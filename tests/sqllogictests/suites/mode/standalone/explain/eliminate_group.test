statement ok
drop table if exists t

statement ok
drop table if exists t1

statement ok
create table t(id int, id2 int, id3 int)

statement ok
create table t1(id int, id3 int, id4 int)

query T
explain select sum(t.id) from t join t1 on t.id=t1.id group by t.id, t1.id, t.id+t1.id
----
EvalScalar
├── expressions: [sum(t.id) (#8)]
├── estimated rows: 0.00
└── AggregateFinal
    ├── group by: [id, id]
    ├── aggregate functions: [sum(id)]
    ├── estimated rows: 0.00
    └── AggregatePartial
        ├── group by: [id, id]
        ├── aggregate functions: [sum(id)]
        ├── estimated rows: 0.00
        └── HashJoin
            ├── join type: INNER
            ├── build keys: [t1.id (#3)]
            ├── probe keys: [t.id (#0)]
            ├── filters: []
            ├── estimated rows: 0.00
            ├── TableScan(Build)
            │   ├── table: default.default.t1
            │   ├── read rows: 0
            │   ├── read bytes: 0
            │   ├── partitions total: 0
            │   ├── partitions scanned: 0
            │   ├── push downs: [filters: [], limit: NONE]
            │   ├── output columns: [0]
            │   └── estimated rows: 0.00
            └── TableScan(Probe)
                ├── table: default.default.t
                ├── read rows: 0
                ├── read bytes: 0
                ├── partitions total: 0
                ├── partitions scanned: 0
                ├── push downs: [filters: [], limit: NONE]
                ├── output columns: [0]
                └── estimated rows: 0.00

query T
explain select sum(t.id) from t join t1 on t.id=t1.id group by t.id, t1.id, t.id+t1.id3
----
EvalScalar
├── expressions: [sum(t.id) (#8)]
├── estimated rows: 0.00
└── AggregateFinal
    ├── group by: [id, id, (t.id + t1.id3)]
    ├── aggregate functions: [sum(id)]
    ├── estimated rows: 0.00
    └── AggregatePartial
        ├── group by: [id, id, (t.id + t1.id3)]
        ├── aggregate functions: [sum(id)]
        ├── estimated rows: 0.00
        └── EvalScalar
            ├── expressions: [plus(t.id (#0), t1.id3 (#4))]
            ├── estimated rows: 0.00
            └── HashJoin
                ├── join type: INNER
                ├── build keys: [t1.id (#3)]
                ├── probe keys: [t.id (#0)]
                ├── filters: []
                ├── estimated rows: 0.00
                ├── TableScan(Build)
                │   ├── table: default.default.t1
                │   ├── read rows: 0
                │   ├── read bytes: 0
                │   ├── partitions total: 0
                │   ├── partitions scanned: 0
                │   ├── push downs: [filters: [], limit: NONE]
                │   ├── output columns: [0, 1]
                │   └── estimated rows: 0.00
                └── TableScan(Probe)
                    ├── table: default.default.t
                    ├── read rows: 0
                    ├── read bytes: 0
                    ├── partitions total: 0
                    ├── partitions scanned: 0
                    ├── push downs: [filters: [], limit: NONE]
                    ├── output columns: [0]
                    └── estimated rows: 0.00

query T
explain select sum(t.id) from t join t1 on t.id=t1.id group by t.id, t.id+t1.id3
----
EvalScalar
├── expressions: [sum(t.id) (#8)]
├── estimated rows: 0.00
└── AggregateFinal
    ├── group by: [id, (t.id + t1.id3)]
    ├── aggregate functions: [sum(id)]
    ├── estimated rows: 0.00
    └── AggregatePartial
        ├── group by: [id, (t.id + t1.id3)]
        ├── aggregate functions: [sum(id)]
        ├── estimated rows: 0.00
        └── EvalScalar
            ├── expressions: [plus(t.id (#0), t1.id3 (#4))]
            ├── estimated rows: 0.00
            └── HashJoin
                ├── join type: INNER
                ├── build keys: [t1.id (#3)]
                ├── probe keys: [t.id (#0)]
                ├── filters: []
                ├── estimated rows: 0.00
                ├── TableScan(Build)
                │   ├── table: default.default.t1
                │   ├── read rows: 0
                │   ├── read bytes: 0
                │   ├── partitions total: 0
                │   ├── partitions scanned: 0
                │   ├── push downs: [filters: [], limit: NONE]
                │   ├── output columns: [0, 1]
                │   └── estimated rows: 0.00
                └── TableScan(Probe)
                    ├── table: default.default.t
                    ├── read rows: 0
                    ├── read bytes: 0
                    ├── partitions total: 0
                    ├── partitions scanned: 0
                    ├── push downs: [filters: [], limit: NONE]
                    ├── output columns: [0]
                    └── estimated rows: 0.00


query T
explain select sum(t.id) from t join t1 on t.id=t1.id group by t.id+t1.id3, t.id, t1.id, t1.id4
----
EvalScalar
├── expressions: [sum(t.id) (#8)]
├── estimated rows: 0.00
└── AggregateFinal
    ├── group by: [(t.id + t1.id3), id, id, id4]
    ├── aggregate functions: [sum(id)]
    ├── estimated rows: 0.00
    └── AggregatePartial
        ├── group by: [(t.id + t1.id3), id, id, id4]
        ├── aggregate functions: [sum(id)]
        ├── estimated rows: 0.00
        └── EvalScalar
            ├── expressions: [plus(t.id (#0), t1.id3 (#4))]
            ├── estimated rows: 0.00
            └── HashJoin
                ├── join type: INNER
                ├── build keys: [t1.id (#3)]
                ├── probe keys: [t.id (#0)]
                ├── filters: []
                ├── estimated rows: 0.00
                ├── TableScan(Build)
                │   ├── table: default.default.t1
                │   ├── read rows: 0
                │   ├── read bytes: 0
                │   ├── partitions total: 0
                │   ├── partitions scanned: 0
                │   ├── push downs: [filters: [], limit: NONE]
                │   └── estimated rows: 0.00
                └── TableScan(Probe)
                    ├── table: default.default.t
                    ├── read rows: 0
                    ├── read bytes: 0
                    ├── partitions total: 0
                    ├── partitions scanned: 0
                    ├── push downs: [filters: [], limit: NONE]
                    ├── output columns: [0]
                    └── estimated rows: 0.00

query T
explain select sum(t.id) from t join t1 on t.id=t1.id group by t.id+t1.id3, t.id, t1.id, t1.id3, t1.id4
----
EvalScalar
├── expressions: [sum(t.id) (#8)]
├── estimated rows: 0.00
└── AggregateFinal
    ├── group by: [id, id, id3, id4]
    ├── aggregate functions: [sum(id)]
    ├── estimated rows: 0.00
    └── AggregatePartial
        ├── group by: [id, id, id3, id4]
        ├── aggregate functions: [sum(id)]
        ├── estimated rows: 0.00
        └── HashJoin
            ├── join type: INNER
            ├── build keys: [t1.id (#3)]
            ├── probe keys: [t.id (#0)]
            ├── filters: []
            ├── estimated rows: 0.00
            ├── TableScan(Build)
            │   ├── table: default.default.t1
            │   ├── read rows: 0
            │   ├── read bytes: 0
            │   ├── partitions total: 0
            │   ├── partitions scanned: 0
            │   ├── push downs: [filters: [], limit: NONE]
            │   └── estimated rows: 0.00
            └── TableScan(Probe)
                ├── table: default.default.t
                ├── read rows: 0
                ├── read bytes: 0
                ├── partitions total: 0
                ├── partitions scanned: 0
                ├── push downs: [filters: [], limit: NONE]
                ├── output columns: [0]
                └── estimated rows: 0.00

statement ok
drop table t

statement ok
drop table t1
