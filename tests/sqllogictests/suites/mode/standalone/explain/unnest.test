statement ok
drop table if exists fold_count;

statement ok
create table fold_count(id array(int), c1 string);

statement ok
insert into fold_count values([1,2,3,4], 'x');

query T
explain select count() from (select unnest(id), c1 from fold_count)
----
EvalScalar
├── expressions: [count() (#4)]
├── estimated rows: 1.00
└── AggregateFinal
    ├── group by: []
    ├── aggregate functions: [count()]
    ├── estimated rows: 1.00
    └── AggregatePartial
        ├── group by: []
        ├── aggregate functions: [count()]
        ├── estimated rows: 1.00
        └── EvalScalar
            ├── expressions: [get(unnest (#2))]
            ├── estimated rows: 1.00
            └── ProjectSet
                ├── estimated rows: 1.00
                ├── set returning functions: unnest(CAST(fold_count.id (#0) AS Array(Int32 NULL)))
                └── TableScan
                    ├── table: default.db_02_0062.fold_count
                    ├── read rows: 1
                    ├── read bytes: 76
                    ├── partitions total: 1
                    ├── partitions scanned: 1
                    ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
                    ├── push downs: [filters: [], limit: NONE]
                    └── estimated rows: 1.00

statement ok
drop table fold_count;
