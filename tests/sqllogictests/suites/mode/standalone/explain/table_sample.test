statement ok
create or replace table t as select number as a from numbers(1000);

statement ok
set random_function_seed = 1;

query T
explain select * from t sample row (10 rows);
----
Filter
├── output columns: [t.a (#0)]
├── filters: [rand() <= 0.01]
├── estimated rows: 200.00
└── TableScan
    ├── table: default.default.t
    ├── output columns: [a (#0)]
    ├── read rows: 1000
    ├── read size: 1.40 KiB
    ├── partitions total: 1
    ├── partitions scanned: 1
    ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1>]
    ├── push downs: [filters: [rand() <= 0.01], limit: NONE]
    └── estimated rows: 1000.00

query T
explain select * from t sample row (99.1);
----
Filter
├── output columns: [t.a (#0)]
├── filters: [rand() <= 0.991]
├── estimated rows: 200.00
└── TableScan
    ├── table: default.default.t
    ├── output columns: [a (#0)]
    ├── read rows: 1000
    ├── read size: 1.40 KiB
    ├── partitions total: 1
    ├── partitions scanned: 1
    ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1>]
    ├── push downs: [filters: [rand() <= 0.991], limit: NONE]
    └── estimated rows: 1000.00


statement ok
drop table t;

statement ok
create or replace table t as select number as a from numbers(10000000);

query 
select count(distinct a) < 10000000 from t sample block(50);
----
1

statement ok
drop table t;

query T
explain select * from numbers(10000000) as t sample row(90);
----
Filter
├── output columns: [t.number (#0)]
├── filters: [rand() <= 0.9]
├── estimated rows: 2000000.00
└── TableScan
    ├── table: default.system.numbers
    ├── output columns: [number (#0)]
    ├── read rows: 10000000
    ├── read size: 76.29 MiB
    ├── partitions total: 153
    ├── partitions scanned: 153
    ├── push downs: [filters: [rand() <= 0.9], limit: NONE]
    └── estimated rows: 10000000.00

query T
explain select * from numbers(10000000) as t sample row(90 rows);
----
Filter
├── output columns: [t.number (#0)]
├── filters: [rand() <= 0.000009]
├── estimated rows: 2000000.00
└── TableScan
    ├── table: default.system.numbers
    ├── output columns: [number (#0)]
    ├── read rows: 10000000
    ├── read size: 76.29 MiB
    ├── partitions total: 153
    ├── partitions scanned: 153
    ├── push downs: [filters: [rand() <= 0.000009], limit: NONE]
    └── estimated rows: 10000000.00



query 
select count(distinct number) < 10000000 from numbers(10000000) sample block(50);
----
1

statement ok
set random_function_seed = 0;