name: Dev Perf

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - labeled
    branches:
      - main
    paths-ignore:
      - "docs/**"
      - "website/**"
      - "**.md"
      - "docker/**"
      - ".devcontainer/**"
  # schedule:
  #   # Run base perf at 08:00 UTC+8
  #   - cron: "0 0 * * *"
  push:
    tags:
      - "v*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

env:
  BUILD_PROFILE: release
  RUNNER_PROVIDER: aws
  CARGO_INCREMENTAL: 0

jobs:
  build_release:
    if: github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'ci-perf')
    timeout-minutes: 30
    runs-on: [self-hosted, X64, Linux, perf]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: ./.github/actions/build_linux
        with:
          target: x86_64-unknown-linux-gnu
          profile: release

  hits:
    needs: build_release
    timeout-minutes: 30
    runs-on: [self-hosted, X64, Linux, perf]
    steps:
      - uses: actions/checkout@v3
      - name: Download artifact
        uses: ./.github/actions/artifact_download
        with:
          profile: release
          sha: ${{ github.sha }}
          target: x86_64-unknown-linux-gnu
      - name: Setup BendSQL
        run: |
          curl -fsSLo ./bendsql.tar.gz https://github.com/databendcloud/bendsql/releases/download/v0.3.0/bendsql-linux-amd64.tar.gz
          tar -xvzf ./bendsql.tar.gz
          chmod +x ./linux-amd64/bendsql
          sudo cp ./linux-amd64/bendsql /usr/local/bin/bendsql
          bendsql version
          bendsql connect
      - name: Run Benchmark
        working-directory: scripts/ci/clickbench
        env:
          BENCHMARK_ID: ${{ github.run_id }}
        run: |
          ./benchmark.sh
      - name: Prepare Metadata
        working-directory: scripts/ci/clickbench
        run: |
          case ${{ github.event_name }} in
            pull_request)
              BENCHMARK_SYSTEM="Databend(PR#${{ github.event.number }})"
              BENCHMARK_TYPE="PR"
              ;;
            push)
              BENCHMARK_SYSTEM="Databend(Release@${{ github.ref_name }})"
              BENCHMARK_TYPE="Release"
              ;;
          esac
          jq ".system = \"${BENCHMARK_SYSTEM}\"" <result.json >result.json.tmp && mv result.json.tmp result.json
          jq ".date = \"$(date -u +%Y-%m-%d)\"" <result.json >result.json.tmp && mv result.json.tmp result.json
          jq ".machine = \"c5.4xlarge\"" <result.json >result.json.tmp && mv result.json.tmp result.json
          jq ".cluster_size = 1" <result.json >result.json.tmp && mv result.json.tmp result.json
          jq ".comment = \"commit:${{ github.sha }}\"" <result.json >result.json.tmp && mv result.json.tmp result.json
          jq ".tags = [\"Rust\", \"${BENCHMARK_TYPE}\"]" <result.json >result.json.tmp && mv result.json.tmp result.json
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-results
          path: scripts/ci/clickbench/result.json
