on:
  repository_dispatch:
    types: [build_docker]
name: Build Docker Image on official docker hub (primary for benchmarking and CI tests)
jobs:
  run_funcbench:
    name: Running build_docker
    if: github.event.action == 'build_docker'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ github.token }}
      GITHUB_ORG: zhihanz
      GITHUB_REPO: fuse-query
      GITHUB_STATUS_TARGET_URL: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
      SHA: ${{ github.event.client_payload.REF }}
      PR_NUMBER: ${{ github.event.client_payload.PR_NUMBER }} 
      LAST_COMMIT_SHA: ${{ github.event.client_payload.LAST_COMMIT_SHA }}
      UUID: ${{ github.event.client_payload.UUID }}
      REGION: ${{ github.event.client_payload.REGION }}
      BUCKET: ${{ github.event.client_payload.BUCKET }}
    steps:
    - name: Install dependencies
      run: |
        sudo apt install python2.7
        wget https://bootstrap.pypa.io/get-pip.py
        sudo python2.7 get-pip.py
        pip install coscmd
        coscmd --version
        coscmd config -a {{ secret.SECRET_ID }} -s {{ secrert.SECRET_KEY }} -r $REGION -b $BUCKET
    - name: Update status to pending
      run: |
        echo "update github pr status"
        curl -i -X POST \
        -H "Authorization: Bearer $GITHUB_TOKEN" \
        -H "Content-Type: application/json" \
        --data '{"state":"pending","context":"build-docker-status","target_url":"'$GITHUB_STATUS_TARGET_URL'"}' \
        "https://api.github.com/repos/$GITHUB_REPOSITORY/statuses/$LAST_COMMIT_SHA"
        echo "sync status to S3"
        echo '{"uuid": "$UUID", "status": "PENDING"}' > status.json
        coscmd upload status.json status/$UUID/status.json
    - uses: actions/checkout@v2
      with:
        ref: ${{ env.SHA }}
    - name: setup docker context for buildx
      id: buildx-context
      run: |
        docker context create builders
    - name: setup docker buildx
      uses: docker/setup-buildx-action@v1
      with:
        endpoint: builders

    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ secrets.DOCKERHUB_NAMESPACE }}/datafuse:perf-${{ env.SHA }}
        context: .
        file: ./docker/Dockerfile

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

    # - name: Delete all resources
    #   if: always()
    #   run: |

    - name: Update status to failure
      if: failure()
      run: |
        curl -i -X POST \
        -H "Authorization: Bearer $GITHUB_TOKEN" \
        -H "Content-Type: application/json" \
        --data '{"state":"failure","context":"build-docker-status,"target_url":"'$GITHUB_STATUS_TARGET_URL'"}' \
        "https://api.github.com/repos/$GITHUB_REPOSITORY/statuses/$LAST_COMMIT_SHA"
        echo "sync status to S3"
        echo '{"uuid": "$UUID", "status": "FAIL"}' > status.json
        coscmd upload status.json status/$UUID/status.json
    - name: Update status to success
      if: success()
      run: |
        curl -i -X POST \
        -H "Authorization: Bearer $GITHUB_TOKEN" \
        -H "Content-Type: application/json" \
        --data '{"state":"success","context":"build-docker-status,"target_url":"'$GITHUB_STATUS_TARGET_URL'"}' \
        "https://api.github.com/repos/$GITHUB_REPOSITORY/statuses/$LAST_COMMIT_SHA"
        echo "sync status to S3"
        echo '{"uuid": "$UUID", "status": "SUCCESS"}' > status.json
        coscmd upload status.json status/$UUID/status.json