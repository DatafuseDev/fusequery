on:
  repository_dispatch:
    types: [build_docker]
name: Build Docker Image on official docker hub (primary for benchmarking and CI tests)
jobs:
  run_funcbench:
    name: Running build_docker
    if: github.event.action == 'build_docker'
    runs-on: self-hosted
    env:
      GITHUB_TOKEN: ${{ github.token }}
      GITHUB_ORG: zhihanz
      GITHUB_REPO: fuse-query
      GITHUB_STATUS_TARGET_URL: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
      SHA: ${{ github.event.client_payload.REF }}
      PR_NUMBER: ${{ github.event.client_payload.PR_NUMBER }} 
      LAST_COMMIT_SHA: ${{ github.event.client_payload.LAST_COMMIT_SHA }}
      UUID: ${{ github.event.client_payload.UUID }}
      REGION: ${{ github.event.client_payload.REGION }}
      BUCKET: ${{ github.event.client_payload.BUCKET }}
      ENDPOINT: ${{ github.event.client_payload.ENDPOINT }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-west-2
      AWS_DEFAULT_OUTPUT: json
    steps:
    - name: Update status to pending
      run: |
        echo "update github pr status"
        curl -i -X POST \
        -H "Authorization: Bearer $GITHUB_TOKEN" \
        -H "Content-Type: application/json" \
        --data '{"state":"pending","context":"build-docker-status","target_url":"'$GITHUB_STATUS_TARGET_URL'"}' \
        "https://api.github.com/repos/$GITHUB_REPOSITORY/statuses/$LAST_COMMIT_SHA"
        echo "sync status to S3"
        echo '{"uuid": "${{ env.UUID }}", "status": "PENDING"}' > status.json
        aws s3 --endpoint-url ${{ env.ENDPOINT }} cp ./status.json  s3://$BUCKET/s3/test/status.json
    - uses: actions/checkout@v2
      with:
        ref: ${{ env.SHA }}
    - name: build all binary
      id: make debug
      run: |
        # enable sccache
        sccache --start-server
        echo $HOME
        export SCCACHE_DIR=$HOME/.cache/sccache
        export RUSTC_WRAPPER=sccache
        make debug
        mv target/debug/fuse-query /tmp/fuse-query
        mv target/debug/fuse-store /tmp/fuse-store
        mv docker/bootstrap.sh /tmp/bootstrap.sh

    - name: build docker image
      run: |
        docker build --network host -f docker/cache/Dockerfile -t ${{ secrets.DOCKERHUB_NAMESPACE }}/datafuse:perf-${{ env.SHA }} .
    - name: docker push
      run: |
        docker push ${{ secrets.DOCKERHUB_NAMESPACE }}/datafuse:perf-${{ env.SHA }}
     - name: Delete all resources
       if: always()
       run: |
         rm -rf /tmp/*

    - name: Update status to failure
      if: failure()
      run: |
        curl -i -X POST \
        -H "Authorization: Bearer $GITHUB_TOKEN" \
        -H "Content-Type: application/json" \
        --data '{"state":"failure","context":"build-docker-status,"target_url":"'$GITHUB_STATUS_TARGET_URL'"}' \
        "https://api.github.com/repos/$GITHUB_REPOSITORY/statuses/$LAST_COMMIT_SHA"
        echo "sync status to S3"
        echo '{"uuid": "${{ env.UUID}}", "status": "FAIL"}' > status.json
        aws s3 --endpoint-url ${{ env.ENDPOINT }} cp ./status.json  s3://$BUCKET/s3/test/status.json
    - name: Update status to success
      if: success()
      run: |
        curl -i -X POST \
        -H "Authorization: Bearer $GITHUB_TOKEN" \
        -H "Content-Type: application/json" \
        --data '{"state":"success","context":"build-docker-status,"target_url":"'$GITHUB_STATUS_TARGET_URL'"}' \
        "https://api.github.com/repos/$GITHUB_REPOSITORY/statuses/$LAST_COMMIT_SHA"
        echo "sync status to S3"
        echo '{"uuid": "${{ env.UUID}}", "status": "SUCCESS"}' > status.json
        aws s3 --endpoint-url ${{ env.ENDPOINT }} cp ./status.json  s3://$BUCKET/s3/test/status.json
