name: Bindings Python

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      tags:
        description: The tags to be released
        required: false
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

env:
  RUNNER_PROVIDER: github

jobs:
  build_linux:
    name: build ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate version
        working-directory: src/bendpy
        run: |
            GIT_TAG=$(git describe --tags --abbrev=0)
            echo "LATEST TAG: $GIT_TAG"
            VERSION=${GIT_TAG/v/}
            VERSION=${VERSION/-nightly/}
            sed -i "s#version = \"0.0.0\"#version = \"$VERSION\"#g" Cargo.toml

      - name: Get Toolchain
        id: toolchain
        run: |
         RUST_TOOLCHAIN=$(awk -F'[ ="]+' '$1 == "channel" { print $2 }' rust-toolchain.toml)
         echo "RUST_TOOLCHAIN=${RUST_TOOLCHAIN}" >> $GITHUB_OUTPUT

      - name: Get opts
        id: opts
        run: |
          if [[ "${RUNNER_PROVIDER}" == "aws" ]]; then
            echo "DOCKER_OPTS=" >> $GITHUB_OUTPUT
          else
            echo "DOCKER_OPTS=--env RUSTC_WRAPPER=sccache --env SCCACHE_GHA_ENABLED=true --env ACTIONS_RUNTIME_TOKEN=${ACTIONS_RUNTIME_TOKEN}" >> $GITHUB_OUTPUT
          fi
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "BUILD_ARGS=--strip --sdist --out dist" >> $GITHUB_OUTPUT
          else
            echo "BUILD_ARGS=--release --strip --sdist --out dist" >> $GITHUB_OUTPUT
          fi

      - name: Build wheels
        env:
          RUST_BACKTRACE: 1
        uses: PyO3/maturin-action@v1
        with:
          rust-toolchain: ${{ steps.toolchain.outputs.RUST_TOOLCHAIN }}
          working-directory: src/bendpy
          target: ${{ matrix.target }}
          manylinux: auto
          # Keep them in one line due to https://github.com/PyO3/maturin-action/issues/153
          rustup-components: rust-std rustfmt
          args: ${{ steps.opts.outputs.BUILD_ARGS }}
          docker-options: ${{ steps.opts.outputs.DOCKER_OPTS }}
          before-script-linux: ../../scripts/setup/dev_setup.sh -yb

      - name: Upload artifact
        if: github.event_name == 'pull_request'
        uses: ./.github/actions/artifact_upload
        with:
          sha: ${{ github.sha }}
          target: ${{ matrix.target }}
          category: python

      - name: Publish package to PyPI
        if: github.event_name != 'pull_request'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          repository-url: https://pypi.org/project/databend/
          packages-dir: src/bendpy/dist/
