name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    name: Release assets
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          # Linux
          - {os: ubuntu-latest, toolchain: stable, target: x86_64-unknown-linux-gnu, cross: false}
          - {os: ubuntu-latest, toolchain: stable, target: aarch64-unknown-linux-gnu, cross: true}
          - {os: ubuntu-latest, toolchain: stable, target: arm-unknown-linux-gnueabi, cross: true}
          - {os: ubuntu-latest, toolchain: stable, target: armv7-unknown-linux-gnueabihf, cross: true}
          # Macos
          - {os: macos-latest, toolchain: stable, target: x86_64-apple-darwin, cross: false}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Rust setup
        run: |
          bash ./scripts/setup/dev_setup.sh

      - name: Cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target=${{ matrix.config.target }}
          use-cross: ${{ matrix.config.cross }}

      - name: Get tag name
        id: tag_name
        run: |
          echo ::set-output name=current_version::${GITHUB_REF#refs/tags/v}
        shell: bash

      - name: Pack binaries
        run: tar -C ./target/${{ matrix.config.target }}/release -czvf datafuse-${{ steps.tag_name.outputs.VERSION }}-${{ matrix.config.target }}.tar.gz fuse-query fuse-store

      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: datafuse-${{ steps.tag_name.outputs.VERSION }}-${{ matrix.config.target }}.*
          asset_name: datafuse-${{ steps.tag_name.outputs.VERSION }}-${{ matrix.config.target }}
          tag: ${{ github.ref }}
          file_glob: true
          overwrite: true
          body: ${{ steps.changelog_reader.outputs.log_entry }}
